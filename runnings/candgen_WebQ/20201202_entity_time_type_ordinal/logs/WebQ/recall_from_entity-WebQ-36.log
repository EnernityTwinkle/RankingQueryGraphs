[smart_candgen] ...  {
  Loading Webquestions from cPickle ...
  5810 WebQuesetions loaded.
args.linking_only: False
  QueryService initialize ...  {
    Loading ComplexQuestions from cPickle ...
    2100 ComplexQuestions loaded.
    Loading Webquestions from cPickle ...
    5810 WebQuesetions loaded.
    7910 QA loaded from WebQ & CompQ.
    Loading SPARQL cache ... {
      1598 SPARQL cache loaded.
    } [0.344s]
    Loading <q_sc, stat> cache ... {
      16116 <q_sc, stat> cache loaded.
    } [0.475s]
    Initialize complete.
  } [0.863s]
  Loading <word, idx> pairs from [../../data/word_emb_in_use/word_emb.indices] ... 
  84320 <word, idx> loaded.
  Loading word embeddings for [../../data/word_emb_in_use/word_emb.glove_300.npy] ...
  (84320, 300) word embedding loaded.
  44 dependency name loaded.
  GlobalLinker initializing ...  {
    201 ordinal & 235 superlative words loaded.
    Load entity linking table from [../../data/linkings/WebQ/webq.all.top3_source_ensemble_data.q_links]: {
      5810 questions of link data loaded.
    } [0.254s]
    FBHelper: 12237 type names loaded.
    12237 type embedding loaded.
    Initialize complete.
  } [0.923s]
  simple type match = False
  simple time match = False
  Entering Q 3600 / 5810 [b'what city was nelson mandela born in?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3601 / 5810 [b'what time does independence center open on sundays?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3602 / 5810 [b'where did the navajo tribe live?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3603 / 5810 [b'what did frankie lymon die from?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3604 / 5810 [b'what to see near austin?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3605 / 5810 [b'where did trey songz go to high school?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3606 / 5810 [b'what was matthias schleiden known for?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3607 / 5810 [b'what country was jesus born?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3608 / 5810 [b'when was louisiana entered into the union?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3609 / 5810 [b'who is kristen stewart parents?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3610 / 5810 [b'when did mary shelley write frankenstein what were the circumstances?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3611 / 5810 [b'what was vietnam war fought for?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3612 / 5810 [b'what is kate spade?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3613 / 5810 [b'what age can a woman retire in australia?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3614 / 5810 [b'what team does lamar odom play for 2013?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3615 / 5810 [b'who founded the american federation of labor afl in 1886?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3616 / 5810 [b'where is louisville ne?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3617 / 5810 [b'where does missouri river end?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3618 / 5810 [b'what team is hank baskett playing for in 2010?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3619 / 5810 [b'where is italian spoken around the world?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3620 / 5810 [b'what is currency in panama?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3621 / 5810 [b'what undergraduate school did martin luther king jr. attend?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3622 / 5810 [b'what 5 countries border romania?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3623 / 5810 [b'when was the last time the kansas city chiefs won a superbowl?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3624 / 5810 [b'where did will smith go to high school?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3625 / 5810 [b'where is united arab located?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3626 / 5810 [b'where is kate middleton spending christmas?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3627 / 5810 [b'what other movies has liam hemsworth?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3628 / 5810 [b'what is duncan bannatyne?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3629 / 5810 [b'what was caesar augustus known for?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3630 / 5810 [b"when did bradley cooper's dad die?"]: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3631 / 5810 [b'which countries border the baltic sea?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3632 / 5810 [b'what to do in perth scotland?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3633 / 5810 [b'who is keyshia cole married too?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3634 / 5810 [b'who does christine gregoire represent?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3635 / 5810 [b'what were some inventions of leonardo da vinci?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3636 / 5810 [b'what college did tosh . o go to?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3637 / 5810 [b'who plays sam in anger management?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3638 / 5810 [b'what type of strings does willie nelson use?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3639 / 5810 [b'who did heidi klum date before seal?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3640 / 5810 [b'what type of voting system does australia have?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3641 / 5810 [b'where did president andrew jackson grew up?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3642 / 5810 [b'what did ivan pavlov invented?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3643 / 5810 [b'what countries and seas border ukraine?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3644 / 5810 [b'where the murray river located?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3645 / 5810 [b'where was joe biden a senator?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3646 / 5810 [b'what is the money currency in italy?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3647 / 5810 [b'where was adolf hitler died?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3648 / 5810 [b'what percent of mississippi is black?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3649 / 5810 [b'what year did reggie bush get drafted?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3650 / 5810 [b'what was sherlock holmes famous for?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3651 / 5810 [b'who is number 5 on the boston celtics?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3652 / 5810 [b'what does sirius black wand look like?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3653 / 5810 [b'who is roger bacon inventor of?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3654 / 5810 [b'where are the libyan refugees going?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3655 / 5810 [b'what city was woodstock held in?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3656 / 5810 [b'who do pagans believe is god?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3657 / 5810 [b'what was one thing benjamin franklin is famous for?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3658 / 5810 [b'what did john williams play?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3659 / 5810 [b'where does the uk import from?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3660 / 5810 [b'who started southwest airlines?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3661 / 5810 [b'who is the current president of colombia 2011?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3662 / 5810 [b'what was the name of the book that charles darwin wrote?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3663 / 5810 [b'who might arthur miller think would?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3664 / 5810 [b'who is abraham descended from?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3665 / 5810 [b'what did atticus finch do?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3666 / 5810 [b'what type of cancer did patrick swayze die from?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3667 / 5810 [b"what was james madison's job?"]: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3668 / 5810 [b'what language does people in france speak?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3669 / 5810 [b'where is the spratly islands located?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3670 / 5810 [b'where did hammurabi come from?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3671 / 5810 [b'who does queen elizabeth hair?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3672 / 5810 [b'what teams did robert horry won rings with?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3673 / 5810 [b'what timezone is colorado in?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3674 / 5810 [b'what did charles dickens writer?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3675 / 5810 [b'where is st helens park nsw?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3676 / 5810 [b'who killed david ruffin?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3677 / 5810 [b'where did james franco study acting?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3678 / 5810 [b'what is d capital city of south africa?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3679 / 5810 [b'into what language family does english fall?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3680 / 5810 [b'who does new zealand import from?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3681 / 5810 [b"who is mexico's president right now 2011?"]: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3682 / 5810 [b'what are the different dialects of chinese?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3683 / 5810 [b'what city was kennedy shot?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3684 / 5810 [b'who owns the sf giants owner?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3685 / 5810 [b'what is the name of the alabama state tree?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3686 / 5810 [b'what is the capital of kentucky known for its bluegrass?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3687 / 5810 [b'what money do you use in aruba?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3688 / 5810 [b'where did apostle paul grow up?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3689 / 5810 [b'what was karl marx beliefs?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3690 / 5810 [b'which countries share land border with vietnam?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3691 / 5810 [b'who did queen mary marry?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3692 / 5810 [b'where did japan invade to get resources?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3693 / 5810 [b'who is the chicago bulls head coach?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3694 / 5810 [b'what type of money do you use in cuba?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3695 / 5810 [b'where in georgia does usher live?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3696 / 5810 [b'who are the two state senators of georgia?']: {
    Skip this question, already saved.
  } [0.000s]
  Entering Q 3697 / 5810 [b'what type of government does australia use?']: {
    Read 12 links from file.
    Show 2 E + 10 T + 0 Tm + 0 Ord = 12 linkings: {
      #00 Entity: [1, 4) (type of government) == m.02pbmw (Government_of_India) {'score': 30.35331, 'source': 1.0}
      #01 Entity: [5, 6) (australia) == m.0chghy (Australia) {'score': 25950.080741, 'source': 0.0}
      #02 Type: [3, 4) (government) == government.government (government) {'sim': 1.0}
      #03 Type: [1, 2) (type) == people.marriage_union_type (marriageunion type) {'sim': 0.986291}
      #04 Type: [1, 2) (type) == education.fraternity_sorority_type (fraternitysorority type) {'sim': 0.985826}
      #05 Type: [2, 4) (of government) == government.form_of_government (form of government) {'sim': 0.922221}
      #06 Type: [1, 3) (type of) == astronomy.type_of_planetographic_feature (type of planetographic feature) {'sim': 0.900349}
      #07 Type: [3, 4) (government) == government.government_agency (government agency) {'sim': 0.879919}
      #08 Type: [0, 3) (what type of) == religion.type_of_place_of_worship (type of place of worship) {'sim': 0.873226}
      #09 Type: [1, 4) (type of government) == government.government_permit_type (government permit type) {'sim': 0.87291}
      #10 Type: [1, 4) (type of government) == government.government_service_type (government service type) {'sim': 0.872476}
      #11 Type: [1, 3) (type of) == food.type_of_dish (type of dish) {'sim': 0.851521}
    } [0.000s]
    Coarse level searching (total entities = 2): {
      [Len-1||F1/2] (2020-12-03 14:16:26) {
        Fuzzy query: SELECT DISTINCT ?p1 WHERE { fb:m.02pbmw ?p1 ?o1 . }
        [2020-12-03 14:16:26] SPARQL hit!
        FBHelper: 66554 domain + 65935 range info loaded.
        FBHelper: 1729 mediator types loaded.
        Filt_Query_Ret = 4 / 14 ( 0.174s)
        FBHelper: 11388 inverse predicate info loaded.
        [Len-1||F1/2||2/2-1] (2020-12-03 14:16:26) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.02pbmw ?p1 ?o1 . ?o1 ?p2 fb:m.0chghy . }
          [2020-12-03 14:16:26] SPARQL hit!
          Filt_Query_Ret = 0 / 0 ( 0.000s)
        } [0.000s]
      } [0.190s]
      [Len-1||F2/2] (2020-12-03 14:16:26) {
        Fuzzy query: SELECT DISTINCT ?p1 WHERE { fb:m.0chghy ?p1 ?o1 . }
        [2020-12-03 14:16:26] SPARQL hit!
        Filt_Query_Ret = 55 / 127 ( 0.000s)
        [Len-1||F2/2||1/2-1] (2020-12-03 14:16:26) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.0chghy ?p1 ?o1 . ?o1 ?p2 fb:m.02pbmw . }
          [2020-12-03 14:16:26] SPARQL hit!
          Filt_Query_Ret = 0 / 0 ( 0.000s)
        } [0.000s]
      } [0.001s]
      [Len-2||F1/2] (2020-12-03 14:16:26) {
        Fuzzy query: SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.02pbmw ?p1 ?o1 . ?o1 ?p2 ?o2 . }
        [2020-12-03 14:16:26] SPARQL hit!
        Filt_Query_Ret = 9 / 232 ( 0.001s)
        [Len-2||F1/2||2/2-1] (2020-12-03 14:16:26) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.02pbmw ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o1 ?p3 fb:m.0chghy . }
          [2020-12-03 14:16:26] SPARQL hit!
          Filt_Query_Ret = 0 / 0 ( 0.000s)
        } [0.000s]
        [Len-2||F1/2||2/2-2] (2020-12-03 14:16:26) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.02pbmw ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o2 ?p3 fb:m.0chghy . }
          [2020-12-03 14:16:26] SPARQL hit!
          Filt_Query_Ret = 0 / 0 ( 0.000s)
        } [0.000s]
      } [0.001s]
      [Len-2||F2/2] (2020-12-03 14:16:26) {
        Fuzzy query: SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.0chghy ?p1 ?o1 . ?o1 ?p2 ?o2 . }
        [2020-12-03 14:16:26] SPARQL hit!
        Filt_Query_Ret = 199 / 2147 ( 0.009s)
        [Len-2||F2/2||1/2-1] (2020-12-03 14:16:26) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0chghy ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o1 ?p3 fb:m.02pbmw . }
          [2020-12-03 14:16:26] SPARQL hit!
          Filt_Query_Ret = 0 / 0 ( 0.000s)
        } [0.000s]
        [Len-2||F2/2||1/2-2] (2020-12-03 14:16:26) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0chghy ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o2 ?p3 fb:m.02pbmw . }
          [2020-12-03 14:16:26] SPARQL hit!
          Filt_Query_Ret = 0 / 10 ( 0.000s)
        } [0.000s]
      } [0.011s]
      267 coarse schemas retrieved from scratch.
      Calculating F1 for 267 coarse schemas: {
        Current: 0 / 267
        Checking schema 0 / 267: {
          [('Main', '==', 'm.02pbmw', ['government.governmental_jurisdiction.agencies'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.02pbmw fb:government.governmental_jurisdiction.agencies ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 1 / 267: {
          [('Main', '==', 'm.02pbmw', ['government.government.agency'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.02pbmw fb:government.government.agency ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 2 / 267: {
          [('Main', '==', 'm.02pbmw', ['award.award_presenting_organization.award_categories_presented'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.02pbmw fb:award.award_presenting_organization.award_categories_presented ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 3 / 267: {
          [('Main', '==', 'm.02pbmw', ['government.government.government_for'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.02pbmw fb:government.government.government_for ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 4 / 267: {
          [('Main', '==', 'm.0chghy', ['location.country.form_of_government'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:location.country.form_of_government ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 3, P = 0.333333, R = 1.000000, F1 = 0.500000
        } [0.000s]
        Checking schema 5 / 267: {
          [('Main', '==', 'm.0chghy', ['location.country.administrative_divisions'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:location.country.administrative_divisions ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 24, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 6 / 267: {
          [('Main', '==', 'm.0chghy', ['base.biblioness.bibs_location.loc_type'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:base.biblioness.bibs_location.loc_type ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 7 / 267: {
          [('Main', '==', 'm.0chghy', ['base.biblioness.bibs_location.is_clear'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:base.biblioness.bibs_location.is_clear ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 8 / 267: {
          [('Main', '==', 'm.0chghy', ['base.aareas.schema.administrative_area.administrative_parent'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:base.aareas.schema.administrative_area.administrative_parent ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 9 / 267: {
          [('Main', '==', 'm.0chghy', ['base.aareas.schema.administrative_area.administrative_area_type'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:base.aareas.schema.administrative_area.administrative_area_type ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 10 / 267: {
          [('Main', '==', 'm.0chghy', ['base.aareas.schema.administrative_area.short_name'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:base.aareas.schema.administrative_area.short_name ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 11 / 267: {
          [('Main', '==', 'm.0chghy', ['government.governmental_jurisdiction.government_bodies'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:government.governmental_jurisdiction.government_bodies ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 12 / 267: {
          [('Main', '==', 'm.0chghy', ['government.governmental_jurisdiction.agencies'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:government.governmental_jurisdiction.agencies ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 124, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 13 / 267: {
          [('Main', '==', 'm.0chghy', ['location.location.people_born_here'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:location.location.people_born_here ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2630, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 14 / 267: {
          [('Main', '==', 'm.0chghy', ['military.military_combatant.belongs_to_combatant_group'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:military.military_combatant.belongs_to_combatant_group ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 15 / 267: {
          [('Main', '==', 'm.0chghy', ['fictional_universe.fictional_setting.fictional_characters_born_here'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:fictional_universe.fictional_setting.fictional_characters_born_here ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 25, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 16 / 267: {
          [('Main', '==', 'm.0chghy', ['business.business_location.parent_company'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:business.business_location.parent_company ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 17 / 267: {
          [('Main', '==', 'm.0chghy', ['sports.sports_team_location.teams'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:sports.sports_team_location.teams ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 18 / 267: {
          [('Main', '==', 'm.0chghy', ['food.beer_country_region.beers_from_here'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:food.beer_country_region.beers_from_here ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 56, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 19 / 267: {
          [('Main', '==', 'm.0chghy', ['base.thoroughbredracing.thoroughbred_racehorse_origin.horses_from_this_location'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:base.thoroughbredracing.thoroughbred_racehorse_origin.horses_from_this_location ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 93, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 20 / 267: {
          [('Main', '==', 'm.0chghy', ['biology.breed_origin.breeds_originating_here'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:biology.breed_origin.breeds_originating_here ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 15, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 21 / 267: {
          [('Main', '==', 'm.0chghy', ['location.country.currency_used'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:location.country.currency_used ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 22 / 267: {
          [('Main', '==', 'm.0chghy', ['location.country.languages_spoken'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:location.country.languages_spoken ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 23 / 267: {
          [('Main', '==', 'm.0chghy', ['location.country.internet_tld'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:location.country.internet_tld ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 24 / 267: {
          [('Main', '==', 'm.0chghy', ['base.uncommon.topic.exceptions'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:base.uncommon.topic.exceptions ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 55, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 25 / 267: {
          [('Main', '==', 'm.0chghy', ['film.film_subject.films'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:film.film_subject.films ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 26 / 267: {
          [('Main', '==', 'm.0chghy', ['base.aareas.schema.administrative_area.subdividing_type'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:base.aareas.schema.administrative_area.subdividing_type ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 27 / 267: {
          [('Main', '==', 'm.0chghy', ['government.governmental_jurisdiction.government_positions'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:government.governmental_jurisdiction.government_positions ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 10, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 28 / 267: {
          [('Main', '==', 'm.0chghy', ['government.governmental_jurisdiction.government'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:government.governmental_jurisdiction.government ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 29 / 267: {
          [('Main', '==', 'm.0chghy', ['location.dated_location.date_founded'])]
          var_types: None
          SELECT DISTINCT ?o1 WHERE { fb:m.0chghy fb:location.dated_location.date_founded ?o1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 30 / 267: {
          [('Main', '==', 'm.0chghy', ['location.location.contains'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:location.location.contains ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 5104, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 31 / 267: {
          [('Main', '==', 'm.0chghy', ['location.location.events'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:location.location.events ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 38, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 32 / 267: {
          [('Main', '==', 'm.0chghy', ['location.location.adjectival_form'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:location.location.adjectival_form ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 33 / 267: {
          [('Main', '==', 'm.0chghy', ['military.military_combatant.armed_forces'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:military.military_combatant.armed_forces ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 34 / 267: {
          [('Main', '==', 'm.0chghy', ['olympics.olympic_participating_country.olympics_participated_in'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:olympics.olympic_participating_country.olympics_participated_in ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 11, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 35 / 267: {
          [('Main', '==', 'm.0chghy', ['base.mystery.cryptid_area_of_occurrence.cryptid_s_found_here'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:base.mystery.cryptid_area_of_occurrence.cryptid_s_found_here ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 36 / 267: {
          [('Main', '==', 'm.0chghy', ['film.film_location.featured_in_films'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:film.film_location.featured_in_films ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 6, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 37 / 267: {
          [('Main', '==', 'm.0chghy', ['law.court_jurisdiction_area.courts'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:law.court_jurisdiction_area.courts ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 38 / 267: {
          [('Main', '==', 'm.0chghy', ['location.country.capital'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:location.country.capital ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 39 / 267: {
          [('Main', '==', 'm.0chghy', ['location.country.calling_code'])]
          var_types: None
          SELECT DISTINCT ?o1 WHERE { fb:m.0chghy fb:location.country.calling_code ?o1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 40 / 267: {
          [('Main', '==', 'm.0chghy', ['location.country.currency_formerly_used'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:location.country.currency_formerly_used ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 41 / 267: {
          [('Main', '==', 'm.0chghy', ['periodicals.newspaper_circulation_area.newspapers'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:periodicals.newspaper_circulation_area.newspapers ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 14, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 42 / 267: {
          [('Main', '==', 'm.0chghy', ['royalty.kingdom.rulers'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:royalty.kingdom.rulers ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 43 / 267: {
          [('Main', '==', 'm.0chghy', ['base.aareas.schema.administrative_area.administrative_children'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:base.aareas.schema.administrative_area.administrative_children ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 15, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 44 / 267: {
          [('Main', '==', 'm.0chghy', ['base.aareas.schema.administrative_area.adjectival_form'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:base.aareas.schema.administrative_area.adjectival_form ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 45 / 267: {
          [('Main', '==', 'm.0chghy', ['base.aareas.schema.administrative_area.pertinent_type'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:base.aareas.schema.administrative_area.pertinent_type ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 15, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 46 / 267: {
          [('Main', '==', 'm.0chghy', ['location.location.time_zones'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:location.location.time_zones ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 47 / 267: {
          [('Main', '==', 'm.0chghy', ['location.location.area'])]
          var_types: None
          SELECT DISTINCT ?o1 WHERE { fb:m.0chghy fb:location.location.area ?o1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 48 / 267: {
          [('Main', '==', 'm.0chghy', ['location.location.containedby'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:location.location.containedby ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 49 / 267: {
          [('Main', '==', 'm.0chghy', ['book.book_subject.works'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:book.book_subject.works ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 413, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 50 / 267: {
          [('Main', '==', 'm.0chghy', ['organization.organization_founder.organizations_founded'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:organization.organization_founder.organizations_founded ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 51 / 267: {
          [('Main', '==', 'm.0chghy', ['organization.organization_scope.organizations_with_this_scope'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:organization.organization_scope.organizations_with_this_scope ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 240, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 52 / 267: {
          [('Main', '==', 'm.0chghy', ['tv.tv_location.tv_episodes_filmed_here'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:tv.tv_location.tv_episodes_filmed_here ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 53 / 267: {
          [('Main', '==', 'm.0chghy', ['sports.sport_country.multi_event_tournaments_participated_in'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:sports.sport_country.multi_event_tournaments_participated_in ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 54 / 267: {
          [('Main', '==', 'm.0chghy', ['base.folklore.mythical_creature_location.mythical_creature_s'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:base.folklore.mythical_creature_location.mythical_creature_s ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 55 / 267: {
          [('Main', '==', 'm.0chghy', ['music.music_video_subject.subject_in_these_music_videos'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:music.music_video_subject.subject_in_these_music_videos ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 56 / 267: {
          [('Main', '==', 'm.0chghy', ['cvg.computer_game_region.versions_released_in_this_region'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:cvg.computer_game_region.versions_released_in_this_region ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 19, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 57 / 267: {
          [('Main', '==', 'm.0chghy', ['base.mystery.cryptid_observation_location.cryptid_s_occurring_here'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:base.mystery.cryptid_observation_location.cryptid_s_occurring_here ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 58 / 267: {
          [('Main', '==', 'm.0chghy', ['base.charities.geographic_scope.charities'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:base.charities.geographic_scope.charities ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 59 / 267: {
          [('Main', '==', 'm.02pbmw', ['business.employer.number_of_employees', 'measurement_unit.dated_integer.number'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.02pbmw fb:business.employer.number_of_employees ?o1 . ?o1 fb:measurement_unit.dated_integer.number ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 60 / 267: {
          [('Main', '==', 'm.02pbmw', ['business.employer.employees', 'business.employment_tenure.from'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.02pbmw fb:business.employer.employees ?o1 . ?o1 fb:business.employment_tenure.from ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 61 / 267: {
          [('Main', '==', 'm.02pbmw', ['business.employer.employees', 'business.employment_tenure.title'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.02pbmw fb:business.employer.employees ?o1 . ?o1 fb:business.employment_tenure.title ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 62 / 267: {
          [('Main', '==', 'm.02pbmw', ['business.employer.number_of_employees', 'measurement_unit.dated_integer.year'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.02pbmw fb:business.employer.number_of_employees ?o1 . ?o1 fb:measurement_unit.dated_integer.year ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 63 / 267: {
          [('Main', '==', 'm.02pbmw', ['business.employer.employees', 'business.employment_tenure.to'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.02pbmw fb:business.employer.employees ?o1 . ?o1 fb:business.employment_tenure.to ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 64 / 267: {
          [('Main', '==', 'm.02pbmw', ['business.employer.number_of_employees', 'measurement_unit.dated_integer.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.02pbmw fb:business.employer.number_of_employees ?o1 . ?o1 fb:measurement_unit.dated_integer.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 65 / 267: {
          [('Main', '==', 'm.02pbmw', ['business.employer.employees', 'business.employment_tenure.person'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.02pbmw fb:business.employer.employees ?o1 . ?o1 fb:business.employment_tenure.person ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 66 / 267: {
          [('Main', '==', 'm.02pbmw', ['business.employer.employees', 'business.employment_tenure.company'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.02pbmw fb:business.employer.employees ?o1 . ?o1 fb:business.employment_tenure.company ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 67 / 267: {
          [('Main', '==', 'm.02pbmw', ['organization.organization.child', 'organization.organization_relationship.parent'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.02pbmw fb:organization.organization.child ?o1 . ?o1 fb:organization.organization_relationship.parent ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 68 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.size_of_armed_forces', 'measurement_unit.dated_integer.number'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.size_of_armed_forces ?o1 . ?o1 fb:measurement_unit.dated_integer.number ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 18, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 69 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.population', 'measurement_unit.dated_integer.number'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.population ?o1 . ?o1 fb:measurement_unit.dated_integer.number ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 53, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 70 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.size_of_armed_forces', 'measurement_unit.dated_integer.year'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.size_of_armed_forces ?o1 . ?o1 fb:measurement_unit.dated_integer.year ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 24, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 71 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.population', 'measurement_unit.dated_integer.year'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.population ?o1 . ?o1 fb:measurement_unit.dated_integer.year ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 53, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 72 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.size_of_armed_forces', 'measurement_unit.dated_integer.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.size_of_armed_forces ?o1 . ?o1 fb:measurement_unit.dated_integer.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 73 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.population', 'measurement_unit.dated_integer.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.population ?o1 . ?o1 fb:measurement_unit.dated_integer.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 74 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gdp_nominal_per_capita', 'measurement_unit.dated_money_value.amount'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.gdp_nominal_per_capita ?o1 . ?o1 fb:measurement_unit.dated_money_value.amount ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 54, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 75 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gdp_nominal', 'measurement_unit.dated_money_value.amount'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.gdp_nominal ?o1 . ?o1 fb:measurement_unit.dated_money_value.amount ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 52, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 76 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gni_per_capita_in_ppp_dollars', 'measurement_unit.dated_money_value.amount'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.gni_per_capita_in_ppp_dollars ?o1 . ?o1 fb:measurement_unit.dated_money_value.amount ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 63, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 77 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gni_in_ppp_dollars', 'measurement_unit.dated_money_value.amount'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.gni_in_ppp_dollars ?o1 . ?o1 fb:measurement_unit.dated_money_value.amount ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 63, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 78 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.diesel_price_liter', 'measurement_unit.dated_money_value.amount'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.diesel_price_liter ?o1 . ?o1 fb:measurement_unit.dated_money_value.amount ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 7, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 79 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.fertility_rate', 'measurement_unit.dated_float.number'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.fertility_rate ?o1 . ?o1 fb:measurement_unit.dated_float.number ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 50, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 80 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.life_expectancy', 'measurement_unit.dated_float.number'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.life_expectancy ?o1 . ?o1 fb:measurement_unit.dated_float.number ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 51, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 81 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.co2_emissions_per_capita', 'measurement_unit.dated_metric_ton.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.co2_emissions_per_capita ?o1 . ?o1 fb:measurement_unit.dated_metric_ton.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 50, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 82 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gdp_real', 'measurement_unit.adjusted_money_value.measurement_date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.gdp_real ?o1 . ?o1 fb:measurement_unit.adjusted_money_value.measurement_date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 45, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 83 / 267: {
          [('Main', '==', 'm.0chghy', ['military.military_combatant.military_conflicts', 'military.military_combatant_group.conflict'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:military.military_combatant.military_conflicts ?o1 . ?o1 fb:military.military_combatant_group.conflict ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 135, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 84 / 267: {
          [('Main', '==', 'm.0chghy', ['military.military_combatant.military_conflicts', 'military.military_combatant_group.combatants'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:military.military_combatant.military_conflicts ?o1 . ?o1 fb:military.military_combatant_group.combatants ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 37, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 85 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.religions', 'location.religion_percentage.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.religions ?o1 . ?o1 fb:location.religion_percentage.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 86 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.places_imported_from', 'location.imports_and_exports.imported_from'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.places_imported_from ?o1 . ?o1 fb:location.imports_and_exports.imported_from ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 87 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.places_imported_from', 'location.imports_and_exports.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.places_imported_from ?o1 . ?o1 fb:location.imports_and_exports.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 88 / 267: {
          [('Main', '==', 'm.0chghy', ['olympics.olympic_participating_country.athletes', 'olympics.olympic_athlete_affiliation.athlete'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:olympics.olympic_participating_country.athletes ?o1 . ?o1 fb:olympics.olympic_athlete_affiliation.athlete ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 834, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 89 / 267: {
          [('Main', '==', 'm.0chghy', ['olympics.olympic_participating_country.athletes', 'olympics.olympic_athlete_affiliation.country'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:olympics.olympic_participating_country.athletes ?o1 . ?o1 fb:olympics.olympic_athlete_affiliation.country ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 90 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gdp_nominal_per_capita', 'measurement_unit.dated_money_value.currency'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.gdp_nominal_per_capita ?o1 . ?o1 fb:measurement_unit.dated_money_value.currency ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 91 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gdp_nominal', 'measurement_unit.dated_money_value.currency'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.gdp_nominal ?o1 . ?o1 fb:measurement_unit.dated_money_value.currency ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 92 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gni_per_capita_in_ppp_dollars', 'measurement_unit.dated_money_value.currency'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.gni_per_capita_in_ppp_dollars ?o1 . ?o1 fb:measurement_unit.dated_money_value.currency ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 93 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gni_in_ppp_dollars', 'measurement_unit.dated_money_value.currency'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.gni_in_ppp_dollars ?o1 . ?o1 fb:measurement_unit.dated_money_value.currency ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 94 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.diesel_price_liter', 'measurement_unit.dated_money_value.currency'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.diesel_price_liter ?o1 . ?o1 fb:measurement_unit.dated_money_value.currency ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 95 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gdp_nominal_per_capita', 'measurement_unit.dated_money_value.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.gdp_nominal_per_capita ?o1 . ?o1 fb:measurement_unit.dated_money_value.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 96 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gdp_nominal', 'measurement_unit.dated_money_value.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.gdp_nominal ?o1 . ?o1 fb:measurement_unit.dated_money_value.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 97 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gni_per_capita_in_ppp_dollars', 'measurement_unit.dated_money_value.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.gni_per_capita_in_ppp_dollars ?o1 . ?o1 fb:measurement_unit.dated_money_value.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 98 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gni_in_ppp_dollars', 'measurement_unit.dated_money_value.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.gni_in_ppp_dollars ?o1 . ?o1 fb:measurement_unit.dated_money_value.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 99 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.diesel_price_liter', 'measurement_unit.dated_money_value.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.diesel_price_liter ?o1 . ?o1 fb:measurement_unit.dated_money_value.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Current: 100 / 267
        Checking schema 100 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.merchandise_trade_percent_of_gdp', 'measurement_unit.dated_percentage.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.merchandise_trade_percent_of_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 101 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gdp_growth_rate', 'measurement_unit.dated_percentage.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.gdp_growth_rate ?o1 . ?o1 fb:measurement_unit.dated_percentage.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 102 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.trade_balance_as_percent_of_gdp', 'measurement_unit.dated_percentage.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.trade_balance_as_percent_of_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 103 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.military_expenditure_percent_gdp', 'measurement_unit.dated_percentage.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.military_expenditure_percent_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 104 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.agriculture_as_percent_of_gdp', 'measurement_unit.dated_percentage.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.agriculture_as_percent_of_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 105 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.high_tech_as_percent_of_manufactured_exports', 'measurement_unit.dated_percentage.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.high_tech_as_percent_of_manufactured_exports ?o1 . ?o1 fb:measurement_unit.dated_percentage.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 106 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.labor_participation_rate', 'measurement_unit.dated_percentage.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.labor_participation_rate ?o1 . ?o1 fb:measurement_unit.dated_percentage.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 107 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.deposit_interest_rate', 'measurement_unit.dated_percentage.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.deposit_interest_rate ?o1 . ?o1 fb:measurement_unit.dated_percentage.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 108 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.prevalence_of_undernourisment', 'measurement_unit.dated_percentage.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.prevalence_of_undernourisment ?o1 . ?o1 fb:measurement_unit.dated_percentage.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 109 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.long_term_unemployment_rate', 'measurement_unit.dated_percentage.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.long_term_unemployment_rate ?o1 . ?o1 fb:measurement_unit.dated_percentage.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 110 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.part_time_employment_percent', 'measurement_unit.dated_percentage.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.part_time_employment_percent ?o1 . ?o1 fb:measurement_unit.dated_percentage.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 111 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.brain_drain_percent', 'measurement_unit.dated_percentage.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.brain_drain_percent ?o1 . ?o1 fb:measurement_unit.dated_percentage.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 112 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.fertility_rate', 'measurement_unit.dated_float.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.fertility_rate ?o1 . ?o1 fb:measurement_unit.dated_float.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 51, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 113 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.life_expectancy', 'measurement_unit.dated_float.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.life_expectancy ?o1 . ?o1 fb:measurement_unit.dated_float.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 52, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 114 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.co2_emissions_per_capita', 'measurement_unit.dated_metric_ton.number'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.co2_emissions_per_capita ?o1 . ?o1 fb:measurement_unit.dated_metric_ton.number ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 53, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 115 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.energy_use_per_capita', 'measurement_unit.dated_kgoe.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.energy_use_per_capita ?o1 . ?o1 fb:measurement_unit.dated_kgoe.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 52, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 116 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.energy_use_per_capita', 'measurement_unit.dated_kgoe.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.energy_use_per_capita ?o1 . ?o1 fb:measurement_unit.dated_kgoe.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 117 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gdp_real', 'measurement_unit.adjusted_money_value.adjustment_currency'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.gdp_real ?o1 . ?o1 fb:measurement_unit.adjusted_money_value.adjustment_currency ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 118 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gdp_real', 'measurement_unit.adjusted_money_value.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.gdp_real ?o1 . ?o1 fb:measurement_unit.adjusted_money_value.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 119 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.religions', 'location.religion_percentage.religion'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.religions ?o1 . ?o1 fb:location.religion_percentage.religion ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 120 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.religions', 'location.religion_percentage.percentage'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.religions ?o1 . ?o1 fb:location.religion_percentage.percentage ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 121 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.places_imported_from', 'location.imports_and_exports.currency'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.places_imported_from ?o1 . ?o1 fb:location.imports_and_exports.currency ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 122 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.places_imported_from', 'location.imports_and_exports.amount'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.places_imported_from ?o1 . ?o1 fb:location.imports_and_exports.amount ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 123 / 267: {
          [('Main', '==', 'm.0chghy', ['olympics.olympic_participating_country.athletes', 'olympics.olympic_athlete_affiliation.sport'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:olympics.olympic_participating_country.athletes ?o1 . ?o1 fb:olympics.olympic_athlete_affiliation.sport ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 50, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 124 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gdp_nominal_per_capita', 'measurement_unit.dated_money_value.valid_date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.gdp_nominal_per_capita ?o1 . ?o1 fb:measurement_unit.dated_money_value.valid_date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 52, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 125 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gdp_nominal', 'measurement_unit.dated_money_value.valid_date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.gdp_nominal ?o1 . ?o1 fb:measurement_unit.dated_money_value.valid_date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 52, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 126 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gni_per_capita_in_ppp_dollars', 'measurement_unit.dated_money_value.valid_date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.gni_per_capita_in_ppp_dollars ?o1 . ?o1 fb:measurement_unit.dated_money_value.valid_date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 32, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 127 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gni_in_ppp_dollars', 'measurement_unit.dated_money_value.valid_date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.gni_in_ppp_dollars ?o1 . ?o1 fb:measurement_unit.dated_money_value.valid_date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 32, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 128 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.diesel_price_liter', 'measurement_unit.dated_money_value.valid_date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.diesel_price_liter ?o1 . ?o1 fb:measurement_unit.dated_money_value.valid_date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 8, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 129 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.merchandise_trade_percent_of_gdp', 'measurement_unit.dated_percentage.rate'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.merchandise_trade_percent_of_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.rate ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 52, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 130 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gdp_growth_rate', 'measurement_unit.dated_percentage.rate'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.gdp_growth_rate ?o1 . ?o1 fb:measurement_unit.dated_percentage.rate ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 102, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 131 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.trade_balance_as_percent_of_gdp', 'measurement_unit.dated_percentage.rate'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.trade_balance_as_percent_of_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.rate ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 50, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 132 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.military_expenditure_percent_gdp', 'measurement_unit.dated_percentage.rate'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.military_expenditure_percent_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.rate ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 48, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 133 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.agriculture_as_percent_of_gdp', 'measurement_unit.dated_percentage.rate'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.agriculture_as_percent_of_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.rate ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 36, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 134 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.high_tech_as_percent_of_manufactured_exports', 'measurement_unit.dated_percentage.rate'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.high_tech_as_percent_of_manufactured_exports ?o1 . ?o1 fb:measurement_unit.dated_percentage.rate ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 24, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 135 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.labor_participation_rate', 'measurement_unit.dated_percentage.rate'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.labor_participation_rate ?o1 . ?o1 fb:measurement_unit.dated_percentage.rate ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 22, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 136 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.deposit_interest_rate', 'measurement_unit.dated_percentage.rate'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.deposit_interest_rate ?o1 . ?o1 fb:measurement_unit.dated_percentage.rate ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 40, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 137 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.prevalence_of_undernourisment', 'measurement_unit.dated_percentage.rate'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.prevalence_of_undernourisment ?o1 . ?o1 fb:measurement_unit.dated_percentage.rate ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 138 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.long_term_unemployment_rate', 'measurement_unit.dated_percentage.rate'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.long_term_unemployment_rate ?o1 . ?o1 fb:measurement_unit.dated_percentage.rate ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 32, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 139 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.part_time_employment_percent', 'measurement_unit.dated_percentage.rate'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.part_time_employment_percent ?o1 . ?o1 fb:measurement_unit.dated_percentage.rate ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 7, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 140 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.brain_drain_percent', 'measurement_unit.dated_percentage.rate'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.brain_drain_percent ?o1 . ?o1 fb:measurement_unit.dated_percentage.rate ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 141 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.merchandise_trade_percent_of_gdp', 'measurement_unit.dated_percentage.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.merchandise_trade_percent_of_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 52, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 142 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gdp_growth_rate', 'measurement_unit.dated_percentage.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.gdp_growth_rate ?o1 . ?o1 fb:measurement_unit.dated_percentage.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 51, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 143 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.trade_balance_as_percent_of_gdp', 'measurement_unit.dated_percentage.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.trade_balance_as_percent_of_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 52, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 144 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.military_expenditure_percent_gdp', 'measurement_unit.dated_percentage.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.military_expenditure_percent_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 24, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 145 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.agriculture_as_percent_of_gdp', 'measurement_unit.dated_percentage.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.agriculture_as_percent_of_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 39, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 146 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.high_tech_as_percent_of_manufactured_exports', 'measurement_unit.dated_percentage.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.high_tech_as_percent_of_manufactured_exports ?o1 . ?o1 fb:measurement_unit.dated_percentage.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 24, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 147 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.labor_participation_rate', 'measurement_unit.dated_percentage.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.labor_participation_rate ?o1 . ?o1 fb:measurement_unit.dated_percentage.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 22, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 148 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.deposit_interest_rate', 'measurement_unit.dated_percentage.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.deposit_interest_rate ?o1 . ?o1 fb:measurement_unit.dated_percentage.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 42, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 149 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.prevalence_of_undernourisment', 'measurement_unit.dated_percentage.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.prevalence_of_undernourisment ?o1 . ?o1 fb:measurement_unit.dated_percentage.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 150 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.long_term_unemployment_rate', 'measurement_unit.dated_percentage.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.long_term_unemployment_rate ?o1 . ?o1 fb:measurement_unit.dated_percentage.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 32, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 151 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.part_time_employment_percent', 'measurement_unit.dated_percentage.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.part_time_employment_percent ?o1 . ?o1 fb:measurement_unit.dated_percentage.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 11, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 152 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.brain_drain_percent', 'measurement_unit.dated_percentage.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.brain_drain_percent ?o1 . ?o1 fb:measurement_unit.dated_percentage.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 153 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.fertility_rate', 'measurement_unit.dated_float.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.fertility_rate ?o1 . ?o1 fb:measurement_unit.dated_float.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 154 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.life_expectancy', 'measurement_unit.dated_float.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.life_expectancy ?o1 . ?o1 fb:measurement_unit.dated_float.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 155 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.co2_emissions_per_capita', 'measurement_unit.dated_metric_ton.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.co2_emissions_per_capita ?o1 . ?o1 fb:measurement_unit.dated_metric_ton.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 156 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.energy_use_per_capita', 'measurement_unit.dated_kgoe.number'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.energy_use_per_capita ?o1 . ?o1 fb:measurement_unit.dated_kgoe.number ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 73, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 157 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gdp_real', 'measurement_unit.adjusted_money_value.adjustment_date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.gdp_real ?o1 . ?o1 fb:measurement_unit.adjusted_money_value.adjustment_date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 158 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gdp_real', 'measurement_unit.adjusted_money_value.adjusted_value'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.gdp_real ?o1 . ?o1 fb:measurement_unit.adjusted_money_value.adjusted_value ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 45, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 159 / 267: {
          [('Main', '==', 'm.0chghy', ['location.location.geolocation', 'location.geocode.latitude'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.location.geolocation ?o1 . ?o1 fb:location.geocode.latitude ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 160 / 267: {
          [('Main', '==', 'm.0chghy', ['location.location.geolocation', 'location.geocode.longitude'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.location.geolocation ?o1 . ?o1 fb:location.geocode.longitude ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 161 / 267: {
          [('Main', '==', 'm.0chghy', ['location.location.adjoin_s', 'location.adjoining_relationship.adjoins'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.location.adjoin_s ?o1 . ?o1 fb:location.adjoining_relationship.adjoins ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 7, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 162 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.places_imported_from', 'location.imports_and_exports.exported_to'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.places_imported_from ?o1 . ?o1 fb:location.imports_and_exports.exported_to ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 163 / 267: {
          [('Main', '==', 'm.0chghy', ['olympics.olympic_participating_country.athletes', 'olympics.olympic_athlete_affiliation.olympics'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:olympics.olympic_participating_country.athletes ?o1 . ?o1 fb:olympics.olympic_athlete_affiliation.olympics ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 19, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 164 / 267: {
          [('Main', '==', 'm.0chghy', ['location.country.national_anthem', 'government.national_anthem_of_a_country.country'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.country.national_anthem ?o1 . ?o1 fb:government.national_anthem_of_a_country.country ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 165 / 267: {
          [('Main', '==', 'm.0chghy', ['location.country.national_anthem', 'government.national_anthem_of_a_country.official_anthem_since'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.country.national_anthem ?o1 . ?o1 fb:government.national_anthem_of_a_country.official_anthem_since ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 166 / 267: {
          [('Main', '==', 'm.0chghy', ['location.country.national_anthem', 'government.national_anthem_of_a_country.anthem'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.country.national_anthem ?o1 . ?o1 fb:government.national_anthem_of_a_country.anthem ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 167 / 267: {
          [('Main', '==', 'm.0chghy', ['sports.sport_country.athletes', 'sports.competitor_country_relationship.country'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:sports.sport_country.athletes ?o1 . ?o1 fb:sports.competitor_country_relationship.country ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 168 / 267: {
          [('Main', '==', 'm.0chghy', ['sports.sport_country.athletes', 'sports.competitor_country_relationship.sports'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:sports.sport_country.athletes ?o1 . ?o1 fb:sports.competitor_country_relationship.sports ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 169 / 267: {
          [('Main', '==', 'm.0chghy', ['sports.sport_country.athletes', 'sports.competitor_country_relationship.competitor'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:sports.sport_country.athletes ?o1 . ?o1 fb:sports.competitor_country_relationship.competitor ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 170 / 267: {
          [('Main', '==', 'm.0chghy', ['sports.sport_country.athletes', 'sports.competitor_country_relationship.tournament'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:sports.sport_country.athletes ?o1 . ?o1 fb:sports.competitor_country_relationship.tournament ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 171 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.net_migration', 'measurement_unit.dated_integer.number'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.net_migration ?o1 . ?o1 fb:measurement_unit.dated_integer.number ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 11, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 172 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.electricity_consumption_per_capita', 'measurement_unit.dated_kilowatt_hour.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.electricity_consumption_per_capita ?o1 . ?o1 fb:measurement_unit.dated_kilowatt_hour.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 51, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 173 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.electricity_consumption_per_capita', 'measurement_unit.dated_kilowatt_hour.number'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.electricity_consumption_per_capita ?o1 . ?o1 fb:measurement_unit.dated_kilowatt_hour.number ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 63, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 174 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.foreign_direct_investment_net_inflows', 'measurement_unit.dated_money_value.amount'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.foreign_direct_investment_net_inflows ?o1 . ?o1 fb:measurement_unit.dated_money_value.amount ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 7, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 175 / 267: {
          [('Main', '==', 'm.0chghy', ['government.governmental_jurisdiction.governing_officials', 'government.government_position_held.jurisdiction_of_office'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:government.governmental_jurisdiction.governing_officials ?o1 . ?o1 fb:government.government_position_held.jurisdiction_of_office ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 176 / 267: {
          [('Main', '==', 'm.0chghy', ['government.governmental_jurisdiction.governing_officials', 'government.government_position_held.basic_title'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:government.governmental_jurisdiction.governing_officials ?o1 . ?o1 fb:government.government_position_held.basic_title ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 7, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 177 / 267: {
          [('Main', '==', 'm.0chghy', ['government.governmental_jurisdiction.governing_officials', 'government.government_position_held.governmental_body'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:government.governmental_jurisdiction.governing_officials ?o1 . ?o1 fb:government.government_position_held.governmental_body ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 178 / 267: {
          [('Main', '==', 'm.0chghy', ['government.governmental_jurisdiction.governing_officials', 'government.government_position_held.legislative_sessions'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:government.governmental_jurisdiction.governing_officials ?o1 . ?o1 fb:government.government_position_held.legislative_sessions ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 43, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 179 / 267: {
          [('Main', '==', 'm.0chghy', ['organization.organization_member.member_of', 'organization.organization_membership.member'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:organization.organization_member.member_of ?o1 . ?o1 fb:organization.organization_membership.member ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 180 / 267: {
          [('Main', '==', 'm.0chghy', ['organization.organization_member.member_of', 'organization.organization_membership.to'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:organization.organization_member.member_of ?o1 . ?o1 fb:organization.organization_membership.to ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 181 / 267: {
          [('Main', '==', 'm.0chghy', ['military.military_combatant.military_commanders', 'military.military_command.military_conflict'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:military.military_combatant.military_commanders ?o1 . ?o1 fb:military.military_command.military_conflict ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 182 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.places_exported_to', 'location.imports_and_exports.imported_from'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.places_exported_to ?o1 . ?o1 fb:location.imports_and_exports.imported_from ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 183 / 267: {
          [('Main', '==', 'm.0chghy', ['user.tsegaran.random.taxonomy_subject.entry', 'user.tsegaran.random.taxonomy_entry.taxonomy'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:user.tsegaran.random.taxonomy_subject.entry ?o1 . ?o1 fb:user.tsegaran.random.taxonomy_entry.taxonomy ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 184 / 267: {
          [('Main', '==', 'm.0chghy', ['military.military_combatant.force_deployments', 'military.force_strength.military_conflict'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:military.military_combatant.force_deployments ?o1 . ?o1 fb:military.force_strength.military_conflict ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 6, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 185 / 267: {
          [('Main', '==', 'm.0chghy', ['military.military_combatant.casualties', 'military.casualties.combatant'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:military.military_combatant.casualties ?o1 . ?o1 fb:military.casualties.combatant ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 10, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 186 / 267: {
          [('Main', '==', 'm.0chghy', ['military.military_combatant.casualties', 'military.casualties.type_of_casualties'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:military.military_combatant.casualties ?o1 . ?o1 fb:military.casualties.type_of_casualties ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 187 / 267: {
          [('Main', '==', 'm.0chghy', ['olympics.olympic_participating_country.medals_won', 'olympics.olympic_medal_honor.olympics'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:olympics.olympic_participating_country.medals_won ?o1 . ?o1 fb:olympics.olympic_medal_honor.olympics ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 28, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 188 / 267: {
          [('Main', '==', 'm.0chghy', ['olympics.olympic_participating_country.medals_won', 'olympics.olympic_medal_honor.event'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:olympics.olympic_participating_country.medals_won ?o1 . ?o1 fb:olympics.olympic_medal_honor.event ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 349, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 189 / 267: {
          [('Main', '==', 'm.0chghy', ['base.popstra.location.arrestee', 'base.popstra.arrest.arrested_person'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:base.popstra.location.arrestee ?o1 . ?o1 fb:base.popstra.arrest.arrested_person ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 190 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.net_migration', 'measurement_unit.dated_integer.year'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.net_migration ?o1 . ?o1 fb:measurement_unit.dated_integer.year ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 11, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 191 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.electricity_consumption_per_capita', 'measurement_unit.dated_kilowatt_hour.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.electricity_consumption_per_capita ?o1 . ?o1 fb:measurement_unit.dated_kilowatt_hour.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 192 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.foreign_direct_investment_net_inflows', 'measurement_unit.dated_money_value.currency'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.foreign_direct_investment_net_inflows ?o1 . ?o1 fb:measurement_unit.dated_money_value.currency ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 193 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.foreign_direct_investment_net_inflows', 'measurement_unit.dated_money_value.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.foreign_direct_investment_net_inflows ?o1 . ?o1 fb:measurement_unit.dated_money_value.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 194 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gender_balance_members_of_parliament', 'measurement_unit.dated_percentage.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.gender_balance_members_of_parliament ?o1 . ?o1 fb:measurement_unit.dated_percentage.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 195 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.population_growth_rate', 'measurement_unit.dated_percentage.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.population_growth_rate ?o1 . ?o1 fb:measurement_unit.dated_percentage.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 196 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.cpi_inflation_rate', 'measurement_unit.dated_percentage.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.cpi_inflation_rate ?o1 . ?o1 fb:measurement_unit.dated_percentage.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 197 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.internet_users_percent_population', 'measurement_unit.dated_percentage.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.internet_users_percent_population ?o1 . ?o1 fb:measurement_unit.dated_percentage.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 198 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.market_cap_of_listed_companies_as_percent_of_gdp', 'measurement_unit.dated_percentage.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.market_cap_of_listed_companies_as_percent_of_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 199 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gross_savings_as_percent_of_gdp', 'measurement_unit.dated_percentage.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.gross_savings_as_percent_of_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Current: 200 / 267
        Checking schema 200 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.health_expenditure_as_percent_of_gdp', 'measurement_unit.dated_percentage.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.health_expenditure_as_percent_of_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 201 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.consumer_price_index', 'measurement_unit.dated_index_value.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.consumer_price_index ?o1 . ?o1 fb:measurement_unit.dated_index_value.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 202 / 267: {
          [('Main', '==', 'm.0chghy', ['government.governmental_jurisdiction.governing_officials', 'government.government_position_held.office_holder'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:government.governmental_jurisdiction.governing_officials ?o1 . ?o1 fb:government.government_position_held.office_holder ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 190, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 203 / 267: {
          [('Main', '==', 'm.0chghy', ['government.governmental_jurisdiction.governing_officials', 'government.government_position_held.office_position_or_title'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:government.governmental_jurisdiction.governing_officials ?o1 . ?o1 fb:government.government_position_held.office_position_or_title ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 11, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 204 / 267: {
          [('Main', '==', 'm.0chghy', ['government.governmental_jurisdiction.governing_officials', 'government.government_position_held.district_represented'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:government.governmental_jurisdiction.governing_officials ?o1 . ?o1 fb:government.government_position_held.district_represented ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 97, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 205 / 267: {
          [('Main', '==', 'm.0chghy', ['government.governmental_jurisdiction.governing_officials', 'government.government_position_held.appointed_by'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:government.governmental_jurisdiction.governing_officials ?o1 . ?o1 fb:government.government_position_held.appointed_by ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 206 / 267: {
          [('Main', '==', 'm.0chghy', ['organization.organization_member.member_of', 'organization.organization_membership.from'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:organization.organization_member.member_of ?o1 . ?o1 fb:organization.organization_membership.from ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 207 / 267: {
          [('Main', '==', 'm.0chghy', ['military.military_combatant.military_commanders', 'military.military_command.military_combatant'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:military.military_combatant.military_commanders ?o1 . ?o1 fb:military.military_command.military_combatant ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 208 / 267: {
          [('Main', '==', 'm.0chghy', ['user.tsegaran.random.taxonomy_subject.entry', 'user.tsegaran.random.taxonomy_entry.high'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:user.tsegaran.random.taxonomy_subject.entry ?o1 . ?o1 fb:user.tsegaran.random.taxonomy_entry.high ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 209 / 267: {
          [('Main', '==', 'm.0chghy', ['military.military_combatant.force_deployments', 'military.force_strength.force_size'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:military.military_combatant.force_deployments ?o1 . ?o1 fb:military.force_strength.force_size ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 210 / 267: {
          [('Main', '==', 'm.0chghy', ['military.military_combatant.force_deployments', 'military.force_strength.resource'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:military.military_combatant.force_deployments ?o1 . ?o1 fb:military.force_strength.resource ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 211 / 267: {
          [('Main', '==', 'm.0chghy', ['military.military_combatant.force_deployments', 'military.force_strength.maximum_force_size'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:military.military_combatant.force_deployments ?o1 . ?o1 fb:military.force_strength.maximum_force_size ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 212 / 267: {
          [('Main', '==', 'm.0chghy', ['military.military_combatant.casualties', 'military.casualties.lower_estimate'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:military.military_combatant.casualties ?o1 . ?o1 fb:military.casualties.lower_estimate ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 9, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 213 / 267: {
          [('Main', '==', 'm.0chghy', ['olympics.olympic_participating_country.medals_won', 'olympics.olympic_medal_honor.country'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:olympics.olympic_participating_country.medals_won ?o1 . ?o1 fb:olympics.olympic_medal_honor.country ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 214 / 267: {
          [('Main', '==', 'm.0chghy', ['olympics.olympic_participating_country.medals_won', 'olympics.olympic_medal_honor.medal'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:olympics.olympic_participating_country.medals_won ?o1 . ?o1 fb:olympics.olympic_medal_honor.medal ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 215 / 267: {
          [('Main', '==', 'm.0chghy', ['base.popstra.location.arrestee', 'base.popstra.arrest.location'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:base.popstra.location.arrestee ?o1 . ?o1 fb:base.popstra.arrest.location ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 216 / 267: {
          [('Main', '==', 'm.0chghy', ['base.popstra.location.vacationers', 'base.popstra.vacation_choice.location'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:base.popstra.location.vacationers ?o1 . ?o1 fb:base.popstra.vacation_choice.location ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 217 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.net_migration', 'measurement_unit.dated_integer.source'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.net_migration ?o1 . ?o1 fb:measurement_unit.dated_integer.source ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 218 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.foreign_direct_investment_net_inflows', 'measurement_unit.dated_money_value.valid_date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.foreign_direct_investment_net_inflows ?o1 . ?o1 fb:measurement_unit.dated_money_value.valid_date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 7, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 219 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gender_balance_members_of_parliament', 'measurement_unit.dated_percentage.rate'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.gender_balance_members_of_parliament ?o1 . ?o1 fb:measurement_unit.dated_percentage.rate ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 8, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 220 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.population_growth_rate', 'measurement_unit.dated_percentage.rate'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.population_growth_rate ?o1 . ?o1 fb:measurement_unit.dated_percentage.rate ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 43, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 221 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.cpi_inflation_rate', 'measurement_unit.dated_percentage.rate'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.cpi_inflation_rate ?o1 . ?o1 fb:measurement_unit.dated_percentage.rate ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 51, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 222 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.internet_users_percent_population', 'measurement_unit.dated_percentage.rate'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.internet_users_percent_population ?o1 . ?o1 fb:measurement_unit.dated_percentage.rate ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 38, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 223 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.market_cap_of_listed_companies_as_percent_of_gdp', 'measurement_unit.dated_percentage.rate'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.market_cap_of_listed_companies_as_percent_of_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.rate ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 24, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 224 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gross_savings_as_percent_of_gdp', 'measurement_unit.dated_percentage.rate'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.gross_savings_as_percent_of_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.rate ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 50, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 225 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.health_expenditure_as_percent_of_gdp', 'measurement_unit.dated_percentage.rate'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.health_expenditure_as_percent_of_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.rate ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 15, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 226 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gender_balance_members_of_parliament', 'measurement_unit.dated_percentage.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.gender_balance_members_of_parliament ?o1 . ?o1 fb:measurement_unit.dated_percentage.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 16, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 227 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.population_growth_rate', 'measurement_unit.dated_percentage.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.population_growth_rate ?o1 . ?o1 fb:measurement_unit.dated_percentage.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 52, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 228 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.cpi_inflation_rate', 'measurement_unit.dated_percentage.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.cpi_inflation_rate ?o1 . ?o1 fb:measurement_unit.dated_percentage.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 51, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 229 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.internet_users_percent_population', 'measurement_unit.dated_percentage.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.internet_users_percent_population ?o1 . ?o1 fb:measurement_unit.dated_percentage.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 19, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 230 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.market_cap_of_listed_companies_as_percent_of_gdp', 'measurement_unit.dated_percentage.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.market_cap_of_listed_companies_as_percent_of_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 24, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 231 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.gross_savings_as_percent_of_gdp', 'measurement_unit.dated_percentage.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.gross_savings_as_percent_of_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 51, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 232 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.health_expenditure_as_percent_of_gdp', 'measurement_unit.dated_percentage.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.health_expenditure_as_percent_of_gdp ?o1 . ?o1 fb:measurement_unit.dated_percentage.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 17, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 233 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.consumer_price_index', 'measurement_unit.dated_index_value.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.consumer_price_index ?o1 . ?o1 fb:measurement_unit.dated_index_value.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 52, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 234 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.consumer_price_index', 'measurement_unit.dated_index_value.index_value'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:location.statistical_region.consumer_price_index ?o1 . ?o1 fb:measurement_unit.dated_index_value.index_value ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 52, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 235 / 267: {
          [('Main', '==', 'm.0chghy', ['government.governmental_jurisdiction.governing_officials', 'government.government_position_held.from'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:government.governmental_jurisdiction.governing_officials ?o1 . ?o1 fb:government.government_position_held.from ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 79, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 236 / 267: {
          [('Main', '==', 'm.0chghy', ['government.governmental_jurisdiction.governing_officials', 'government.government_position_held.to'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:government.governmental_jurisdiction.governing_officials ?o1 . ?o1 fb:government.government_position_held.to ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 76, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 237 / 267: {
          [('Main', '==', 'm.0chghy', ['organization.organization_member.member_of', 'organization.organization_membership.organization'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:organization.organization_member.member_of ?o1 . ?o1 fb:organization.organization_membership.organization ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 11, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 238 / 267: {
          [('Main', '==', 'm.0chghy', ['military.military_combatant.military_commanders', 'military.military_command.military_commander'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:military.military_combatant.military_commanders ?o1 . ?o1 fb:military.military_command.military_commander ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 239 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.places_exported_to', 'location.imports_and_exports.exported_to'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.places_exported_to ?o1 . ?o1 fb:location.imports_and_exports.exported_to ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 240 / 267: {
          [('Main', '==', 'm.0chghy', ['user.tsegaran.random.taxonomy_subject.entry', 'user.tsegaran.random.taxonomy_entry.subject'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:user.tsegaran.random.taxonomy_subject.entry ?o1 . ?o1 fb:user.tsegaran.random.taxonomy_entry.subject ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 241 / 267: {
          [('Main', '==', 'm.0chghy', ['user.tsegaran.random.taxonomy_subject.entry', 'user.tsegaran.random.taxonomy_entry.low'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:user.tsegaran.random.taxonomy_subject.entry ?o1 . ?o1 fb:user.tsegaran.random.taxonomy_entry.low ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 242 / 267: {
          [('Main', '==', 'm.0chghy', ['military.military_combatant.force_deployments', 'military.force_strength.combatant'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:military.military_combatant.force_deployments ?o1 . ?o1 fb:military.force_strength.combatant ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 10, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 243 / 267: {
          [('Main', '==', 'm.0chghy', ['military.military_combatant.force_deployments', 'military.force_strength.date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:military.military_combatant.force_deployments ?o1 . ?o1 fb:military.force_strength.date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 244 / 267: {
          [('Main', '==', 'm.0chghy', ['military.military_combatant.casualties', 'military.casualties.military_conflict'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:military.military_combatant.casualties ?o1 . ?o1 fb:military.casualties.military_conflict ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 6, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 245 / 267: {
          [('Main', '==', 'm.0chghy', ['olympics.olympic_participating_country.medals_won', 'olympics.olympic_medal_honor.medalist'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:olympics.olympic_participating_country.medals_won ?o1 . ?o1 fb:olympics.olympic_medal_honor.medalist ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 396, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 246 / 267: {
          [('Main', '==', 'm.0chghy', ['base.popstra.location.arrestee', 'base.popstra.arrest.offense'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:base.popstra.location.arrestee ?o1 . ?o1 fb:base.popstra.arrest.offense ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 247 / 267: {
          [('Main', '==', 'm.0chghy', ['base.popstra.location.vacationers', 'base.popstra.vacation_choice.vacationer'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:base.popstra.location.vacationers ?o1 . ?o1 fb:base.popstra.vacation_choice.vacationer ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 12, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 248 / 267: {
          [('Main', '==', 'm.0chghy', ['base.mystery.cryptid_observation_location.cryptid_observation_s', 'base.mystery.cryptid_observation.location'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:base.mystery.cryptid_observation_location.cryptid_observation_s ?o1 . ?o1 fb:base.mystery.cryptid_observation.location ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 249 / 267: {
          [('Main', '==', 'm.0chghy', ['symbols.flag_referent.flag', 'symbols.flag_use.flag_user'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:symbols.flag_referent.flag ?o1 . ?o1 fb:symbols.flag_use.flag_user ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 250 / 267: {
          [('Main', '==', 'm.0chghy', ['symbols.flag_referent.flag', 'symbols.flag_use.flag'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:symbols.flag_referent.flag ?o1 . ?o1 fb:symbols.flag_use.flag ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 251 / 267: {
          [('Main', '==', 'm.0chghy', ['symbols.flag_referent.flag', 'symbols.flag_use.from_date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:symbols.flag_referent.flag ?o1 . ?o1 fb:symbols.flag_use.from_date ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 252 / 267: {
          [('Main', '==', 'm.0chghy', ['location.statistical_region.major_exports', 'location.imports_exports_by_industry.industry'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:location.statistical_region.major_exports ?o1 . ?o1 fb:location.imports_exports_by_industry.industry ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 253 / 267: {
          [('Main', '==', 'm.0chghy', ['symbols.coat_of_arms_bearer.coat_of_arms_used', 'symbols.armorial_grant.armiger'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:symbols.coat_of_arms_bearer.coat_of_arms_used ?o1 . ?o1 fb:symbols.armorial_grant.armiger ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 254 / 267: {
          [('Main', '==', 'm.0chghy', ['symbols.coat_of_arms_bearer.coat_of_arms_used', 'symbols.armorial_grant.used_from'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:symbols.coat_of_arms_bearer.coat_of_arms_used ?o1 . ?o1 fb:symbols.armorial_grant.used_from ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 255 / 267: {
          [('Main', '==', 'm.0chghy', ['base.sharing.sharing_location.shared_here', 'base.sharing.sharing_relationship.locations'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:base.sharing.sharing_location.shared_here ?o1 . ?o1 fb:base.sharing.sharing_relationship.locations ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 256 / 267: {
          [('Main', '==', 'm.0chghy', ['sports.sport_country.athletic_performances', 'sports.competitor_competition_relationship.tournament'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:sports.sport_country.athletic_performances ?o1 . ?o1 fb:sports.competitor_competition_relationship.tournament ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 257 / 267: {
          [('Main', '==', 'm.0chghy', ['sports.sport_country.athletic_performances', 'sports.competitor_competition_relationship.medal'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:sports.sport_country.athletic_performances ?o1 . ?o1 fb:sports.competitor_competition_relationship.medal ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 258 / 267: {
          [('Main', '==', 'm.0chghy', ['symbols.coat_of_arms_bearer.coat_of_arms_used', 'symbols.armorial_grant.coat_of_arms'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:symbols.coat_of_arms_bearer.coat_of_arms_used ?o1 . ?o1 fb:symbols.armorial_grant.coat_of_arms ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 259 / 267: {
          [('Main', '==', 'm.0chghy', ['symbols.coat_of_arms_bearer.coat_of_arms_used', 'symbols.armorial_grant.granted_by'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:symbols.coat_of_arms_bearer.coat_of_arms_used ?o1 . ?o1 fb:symbols.armorial_grant.granted_by ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 260 / 267: {
          [('Main', '==', 'm.0chghy', ['base.sharing.sharing_location.shared_here', 'base.sharing.sharing_relationship.method'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:base.sharing.sharing_location.shared_here ?o1 . ?o1 fb:base.sharing.sharing_relationship.method ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 261 / 267: {
          [('Main', '==', 'm.0chghy', ['sports.sport_country.athletic_performances', 'sports.competitor_competition_relationship.competitors'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:sports.sport_country.athletic_performances ?o1 . ?o1 fb:sports.competitor_competition_relationship.competitors ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 12, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 262 / 267: {
          [('Main', '==', 'm.0chghy', ['sports.sport_country.athletic_performances', 'sports.competitor_competition_relationship.rank'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0chghy fb:sports.sport_country.athletic_performances ?o1 . ?o1 fb:sports.competitor_competition_relationship.rank ?o2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 263 / 267: {
          [('Main', '==', 'm.0chghy', ['base.sharing.sharing_location.shared_here', 'base.sharing.sharing_relationship.shares'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:base.sharing.sharing_location.shared_here ?o1 . ?o1 fb:base.sharing.sharing_relationship.shares ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 264 / 267: {
          [('Main', '==', 'm.0chghy', ['base.sharing.sharing_location.shared_here', 'base.sharing.sharing_relationship.system'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:base.sharing.sharing_location.shared_here ?o1 . ?o1 fb:base.sharing.sharing_relationship.system ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 265 / 267: {
          [('Main', '==', 'm.0chghy', ['sports.sport_country.athletic_performances', 'sports.competitor_competition_relationship.country'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:sports.sport_country.athletic_performances ?o1 . ?o1 fb:sports.competitor_competition_relationship.country ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 266 / 267: {
          [('Main', '==', 'm.0chghy', ['sports.sport_country.athletic_performances', 'sports.competitor_competition_relationship.competition'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0chghy fb:sports.sport_country.athletic_performances ?o1 . ?o1 fb:sports.competitor_competition_relationship.competition ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 7, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        262 / 267 coarse schemas kept with ans_size > 0.
      } [0.025s]
      Coarse level ended, resulting in 262 schemas.
    } [0.228s]
    Type level searching (total types = 10): {
      Current: 0 / 262
[{'government.government_agency'}]
      FBHelper: 1870 sub/super type pairs loaded.
[{'government.government_agency'}]
[{'award.award_category'}]
[{'government.governmental_jurisdiction'}]
[{'government.form_of_government'}]
[{'location.administrative_division'}]
[{'base.aareas.schema.administrative_area'}]
[{'base.aareas.schema.administrative_area_type'}]
[{'government.governmental_body'}]
[{'government.government_agency'}]
[{'people.person'}]
[{'military.military_combatant'}]
[{'fictional_universe.fictional_character'}]
[{'organization.organization'}]
[{'sports.sports_team'}]
[{'food.beer'}]
[{'base.thoroughbredracing.thoroughbred_racehorse'}]
[{'biology.animal_breed'}]
[{'finance.currency'}]
[{'language.human_language'}]
[{'internet.top_level_domain'}]
[{'base.uncommon.exception'}]
[{'film.film'}]
[{'base.aareas.schema.administrative_area_type'}]
[{'government.government_office_or_title'}]
[{'government.government'}]
[{'type.datetime'}]
[{'location.location'}]
[{'time.event'}]
[{'military.armed_force'}]
[{'olympics.olympic_games'}]
[{'base.mystery.cryptid'}]
[{'film.film'}]
[{'law.court'}]
[{'location.citytown'}]
[{'type.int'}]
[{'finance.currency'}]
[{'book.newspaper'}]
[{'royalty.monarch'}]
[{'base.aareas.schema.administrative_area'}]
[{'base.aareas.schema.administrative_area_type'}]
[{'time.time_zone'}]
[{'type.float'}]
[{'location.location'}]
[{'book.written_work'}]
[{'organization.organization'}]
[{'organization.organization'}]
[{'tv.tv_series_episode'}]
[{'sports.multi_event_tournament'}]
[{'base.folklore.mythical_creature'}]
[{'music.music_video'}]
[{'cvg.game_version'}]
[{'base.mystery.cryptid_classification'}]
[{'base.charities.charity'}]
[{'measurement_unit.dated_integer'}, {'type.int'}]
[{'business.employment_tenure'}, {'type.datetime'}]
[{'business.employment_tenure'}, {'business.job_title'}]
[{'measurement_unit.dated_integer'}, {'type.datetime'}]
[{'business.employment_tenure'}, {'type.datetime'}]
[{'measurement_unit.dated_integer'}, {'dataworld.information_source'}]
[{'business.employment_tenure'}, {'people.person'}]
[{'business.employment_tenure'}, {'business.employer'}]
[{'organization.organization_relationship'}, {'organization.organization'}]
[{'measurement_unit.dated_integer'}, {'type.int'}]
[{'measurement_unit.dated_integer'}, {'type.int'}]
[{'measurement_unit.dated_integer'}, {'type.datetime'}]
[{'measurement_unit.dated_integer'}, {'type.datetime'}]
[{'measurement_unit.dated_integer'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_integer'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_money_value'}, {'type.float'}]
[{'measurement_unit.dated_money_value'}, {'type.float'}]
[{'measurement_unit.dated_money_value'}, {'type.float'}]
[{'measurement_unit.dated_money_value'}, {'type.float'}]
[{'measurement_unit.dated_money_value'}, {'type.float'}]
[{'measurement_unit.dated_float'}, {'type.float'}]
[{'measurement_unit.dated_float'}, {'type.float'}]
[{'measurement_unit.dated_metric_ton'}, {'type.datetime'}]
[{'measurement_unit.adjusted_money_value'}, {'type.datetime'}]
[{'military.military_combatant_group'}, {'military.military_conflict'}]
[{'military.military_combatant_group'}, {'military.military_combatant'}]
[{'location.religion_percentage'}, {'type.datetime'}]
[{'location.imports_and_exports'}, {'location.statistical_region'}]
[{'location.imports_and_exports'}, {'type.datetime'}]
[{'olympics.olympic_athlete_affiliation'}, {'olympics.olympic_athlete'}]
[{'olympics.olympic_athlete_affiliation'}, {'olympics.olympic_participating_country'}]
[{'measurement_unit.dated_money_value'}, {'finance.currency'}]
[{'measurement_unit.dated_money_value'}, {'finance.currency'}]
[{'measurement_unit.dated_money_value'}, {'finance.currency'}]
[{'measurement_unit.dated_money_value'}, {'finance.currency'}]
[{'measurement_unit.dated_money_value'}, {'finance.currency'}]
[{'measurement_unit.dated_money_value'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_money_value'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_money_value'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_money_value'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_money_value'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_percentage'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_percentage'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_percentage'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_percentage'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_percentage'}, {'dataworld.information_source'}]
      Current: 100 / 262
[{'measurement_unit.dated_percentage'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_percentage'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_percentage'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_percentage'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_percentage'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_percentage'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_percentage'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_float'}, {'type.datetime'}]
[{'measurement_unit.dated_float'}, {'type.datetime'}]
[{'measurement_unit.dated_metric_ton'}, {'type.float'}]
[{'measurement_unit.dated_kgoe'}, {'type.datetime'}]
[{'measurement_unit.dated_kgoe'}, {'dataworld.information_source'}]
[{'measurement_unit.adjusted_money_value'}, {'finance.currency'}]
[{'measurement_unit.adjusted_money_value'}, {'dataworld.information_source'}]
[{'location.religion_percentage'}, {'religion.religion'}]
[{'location.religion_percentage'}, {'type.float'}]
[{'location.imports_and_exports'}, {'finance.currency'}]
[{'location.imports_and_exports'}, {'type.float'}]
[{'olympics.olympic_athlete_affiliation'}, {'olympics.olympic_sport'}]
[{'measurement_unit.dated_money_value'}, {'type.datetime'}]
[{'measurement_unit.dated_money_value'}, {'type.datetime'}]
[{'measurement_unit.dated_money_value'}, {'type.datetime'}]
[{'measurement_unit.dated_money_value'}, {'type.datetime'}]
[{'measurement_unit.dated_money_value'}, {'type.datetime'}]
[{'measurement_unit.dated_percentage'}, {'type.float'}]
[{'measurement_unit.dated_percentage'}, {'type.float'}]
[{'measurement_unit.dated_percentage'}, {'type.float'}]
[{'measurement_unit.dated_percentage'}, {'type.float'}]
[{'measurement_unit.dated_percentage'}, {'type.float'}]
[{'measurement_unit.dated_percentage'}, {'type.float'}]
[{'measurement_unit.dated_percentage'}, {'type.float'}]
[{'measurement_unit.dated_percentage'}, {'type.float'}]
[{'measurement_unit.dated_percentage'}, {'type.float'}]
[{'measurement_unit.dated_percentage'}, {'type.float'}]
[{'measurement_unit.dated_percentage'}, {'type.float'}]
[{'measurement_unit.dated_percentage'}, {'type.float'}]
[{'measurement_unit.dated_percentage'}, {'type.datetime'}]
[{'measurement_unit.dated_percentage'}, {'type.datetime'}]
[{'measurement_unit.dated_percentage'}, {'type.datetime'}]
[{'measurement_unit.dated_percentage'}, {'type.datetime'}]
[{'measurement_unit.dated_percentage'}, {'type.datetime'}]
[{'measurement_unit.dated_percentage'}, {'type.datetime'}]
[{'measurement_unit.dated_percentage'}, {'type.datetime'}]
[{'measurement_unit.dated_percentage'}, {'type.datetime'}]
[{'measurement_unit.dated_percentage'}, {'type.datetime'}]
[{'measurement_unit.dated_percentage'}, {'type.datetime'}]
[{'measurement_unit.dated_percentage'}, {'type.datetime'}]
[{'measurement_unit.dated_percentage'}, {'type.datetime'}]
[{'measurement_unit.dated_float'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_float'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_metric_ton'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_kgoe'}, {'type.float'}]
[{'measurement_unit.adjusted_money_value'}, {'type.datetime'}]
[{'measurement_unit.adjusted_money_value'}, {'type.float'}]
[{'location.geocode'}, {'type.float'}]
[{'location.geocode'}, {'type.float'}]
[{'location.adjoining_relationship'}, {'location.location'}]
[{'location.imports_and_exports'}, {'location.statistical_region'}]
[{'olympics.olympic_athlete_affiliation'}, {'olympics.olympic_games'}]
[{'government.national_anthem_of_a_country'}, {'location.country'}]
[{'government.national_anthem_of_a_country'}, {'type.datetime'}]
[{'government.national_anthem_of_a_country'}, {'government.national_anthem'}]
[{'sports.competitor_country_relationship'}, {'sports.sport_country'}]
[{'sports.competitor_country_relationship'}, {'sports.sport'}]
[{'sports.competitor_country_relationship'}, {'sports.tournament_event_competitor'}]
[{'sports.competitor_country_relationship'}, {'sports.multi_event_tournament'}]
[{'measurement_unit.dated_integer'}, {'type.int'}]
[{'measurement_unit.dated_kilowatt_hour'}, {'type.datetime'}]
[{'measurement_unit.dated_kilowatt_hour'}, {'type.float'}]
[{'measurement_unit.dated_money_value'}, {'type.float'}]
[{'government.government_position_held'}, {'government.governmental_jurisdiction'}]
[{'government.government_position_held'}, {'government.government_office_category'}]
[{'government.government_position_held'}, {'government.governmental_body'}]
[{'government.government_position_held'}, {'government.legislative_session'}]
[{'organization.organization_membership'}, {'organization.organization_member'}]
[{'organization.organization_membership'}, {'type.datetime'}]
[{'military.military_command'}, {'military.military_conflict'}]
[{'location.imports_and_exports'}, {'location.statistical_region'}]
[{'user.tsegaran.random.taxonomy_entry'}, {'user.tsegaran.random.subject_taxonomy'}]
[{'military.force_strength'}, {'military.military_conflict'}]
[{'military.casualties'}, {'military.military_combatant'}]
[{'military.casualties'}, {'military.casualties_type'}]
[{'olympics.olympic_medal_honor'}, {'olympics.olympic_games'}]
[{'olympics.olympic_medal_honor'}, {'olympics.olympic_event_competition'}]
[{'base.popstra.arrest'}, {'base.popstra.celebrity'}]
[{'measurement_unit.dated_integer'}, {'type.datetime'}]
[{'measurement_unit.dated_kilowatt_hour'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_money_value'}, {'finance.currency'}]
[{'measurement_unit.dated_money_value'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_percentage'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_percentage'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_percentage'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_percentage'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_percentage'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_percentage'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_percentage'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_index_value'}, {'dataworld.information_source'}]
[{'government.government_position_held'}, {'government.politician'}]
[{'government.government_position_held'}, {'government.government_office_or_title'}]
[{'government.government_position_held'}, {'government.political_district'}]
      Current: 200 / 262
[{'government.government_position_held'}, {'government.political_appointer'}]
[{'organization.organization_membership'}, {'type.datetime'}]
[{'military.military_command'}, {'military.military_combatant'}]
[{'user.tsegaran.random.taxonomy_entry'}, {'type.float'}]
[{'military.force_strength'}, {'type.int'}]
[{'military.force_strength'}, {'military.military_resource'}]
[{'military.force_strength'}, {'type.int'}]
[{'military.casualties'}, {'type.int'}]
[{'olympics.olympic_medal_honor'}, {'olympics.olympic_participating_country'}]
[{'olympics.olympic_medal_honor'}, {'olympics.olympic_medal'}]
[{'base.popstra.arrest'}, {'base.popstra.location'}]
[{'base.popstra.vacation_choice'}, {'base.popstra.location'}]
[{'measurement_unit.dated_integer'}, {'dataworld.information_source'}]
[{'measurement_unit.dated_money_value'}, {'type.datetime'}]
[{'measurement_unit.dated_percentage'}, {'type.float'}]
[{'measurement_unit.dated_percentage'}, {'type.float'}]
[{'measurement_unit.dated_percentage'}, {'type.float'}]
[{'measurement_unit.dated_percentage'}, {'type.float'}]
[{'measurement_unit.dated_percentage'}, {'type.float'}]
[{'measurement_unit.dated_percentage'}, {'type.float'}]
[{'measurement_unit.dated_percentage'}, {'type.float'}]
[{'measurement_unit.dated_percentage'}, {'type.datetime'}]
[{'measurement_unit.dated_percentage'}, {'type.datetime'}]
[{'measurement_unit.dated_percentage'}, {'type.datetime'}]
[{'measurement_unit.dated_percentage'}, {'type.datetime'}]
[{'measurement_unit.dated_percentage'}, {'type.datetime'}]
[{'measurement_unit.dated_percentage'}, {'type.datetime'}]
[{'measurement_unit.dated_percentage'}, {'type.datetime'}]
[{'measurement_unit.dated_index_value'}, {'type.datetime'}]
[{'measurement_unit.dated_index_value'}, {'type.float'}]
[{'government.government_position_held'}, {'type.datetime'}]
[{'government.government_position_held'}, {'type.datetime'}]
[{'organization.organization_membership'}, {'organization.membership_organization'}]
[{'military.military_command'}, {'military.military_commander'}]
[{'location.imports_and_exports'}, {'location.statistical_region'}]
[{'user.tsegaran.random.taxonomy_entry'}, {'user.tsegaran.random.taxonomy_subject'}]
[{'user.tsegaran.random.taxonomy_entry'}, {'type.float'}]
[{'military.force_strength'}, {'military.military_combatant'}]
[{'military.force_strength'}, {'type.datetime'}]
[{'military.casualties'}, {'military.military_conflict'}]
[{'olympics.olympic_medal_honor'}, {'olympics.olympic_athlete'}]
[{'base.popstra.arrest'}, {'base.popstra.criminal_offense'}]
[{'base.popstra.vacation_choice'}, {'base.popstra.celebrity'}]
[{'base.mystery.cryptid_observation'}, {'base.mystery.cryptid_observation_location'}]
[{'symbols.flag_use'}, {'symbols.flag_referent'}]
[{'symbols.flag_use'}, {'symbols.flag'}]
[{'symbols.flag_use'}, {'type.datetime'}]
[{'location.imports_exports_by_industry'}, {'business.industry'}]
[{'symbols.armorial_grant'}, {'symbols.coat_of_arms_bearer'}]
[{'symbols.armorial_grant'}, {'type.datetime'}]
[{'base.sharing.sharing_relationship'}, {'base.sharing.sharing_location'}]
[{'sports.competitor_competition_relationship'}, {'sports.multi_event_tournament'}]
[{'sports.competitor_competition_relationship'}, {'sports.sport_medal'}]
[{'symbols.armorial_grant'}, {'symbols.coat_of_arms'}]
[{'symbols.armorial_grant'}, {'symbols.heraldry_granting_body'}]
[{'base.sharing.sharing_relationship'}, {'base.sharing.sharing_method'}]
[{'sports.competitor_competition_relationship'}, {'sports.tournament_event_competitor'}]
[{'sports.competitor_competition_relationship'}, {'type.int'}]
[{'base.sharing.sharing_relationship'}, {'base.sharing.sharable_thing'}]
[{'base.sharing.sharing_relationship'}, {'base.sharing.sharing_system'}]
[{'sports.competitor_competition_relationship'}, {'sports.sport_country'}]
[{'sports.competitor_competition_relationship'}, {'sports.tournament_event_competition'}]
      6 typed schemas retrieved from 262 coarse schemas.
      Calculating F1 for 6 typed schemas: {
        Current: 0 / 6
        Checking schema 0 / 6: {
          [('Main', '==', 'm.0chghy', ['location.country.form_of_government']), ('Type', '==', 'government.form_of_government', ['type.object.type'])]
          var_types: [{'government.form_of_government'}]
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:location.country.form_of_government ?o1 . ?o1 fb:type.object.type fb:government.form_of_government . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 3, P = 0.333333, R = 1.000000, F1 = 0.500000
        } [0.000s]
        Checking schema 1 / 6: {
          [('Main', '==', 'm.0chghy', ['government.governmental_jurisdiction.agencies']), ('Type', '==', 'government.government_agency', ['type.object.type'])]
          var_types: [{'government.government_agency'}]
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:government.governmental_jurisdiction.agencies ?o1 . ?o1 fb:type.object.type fb:government.government_agency . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 120, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 2 / 6: {
          [('Main', '==', 'm.0chghy', ['business.business_location.parent_company']), ('Type', '==', 'government.government_agency', ['type.object.type'])]
          var_types: [{'government.government_agency', 'organization.organization'}]
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:business.business_location.parent_company ?o1 . ?o1 fb:type.object.type fb:government.government_agency . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 3 / 6: {
          [('Main', '==', 'm.0chghy', ['government.governmental_jurisdiction.government']), ('Type', '==', 'government.government', ['type.object.type'])]
          var_types: [{'government.government'}]
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:government.governmental_jurisdiction.government ?o1 . ?o1 fb:type.object.type fb:government.government . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 4 / 6: {
          [('Main', '==', 'm.0chghy', ['organization.organization_founder.organizations_founded']), ('Type', '==', 'government.government_agency', ['type.object.type'])]
          var_types: [{'government.government_agency', 'organization.organization'}]
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:organization.organization_founder.organizations_founded ?o1 . ?o1 fb:type.object.type fb:government.government_agency . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 5 / 6: {
          [('Main', '==', 'm.0chghy', ['organization.organization_scope.organizations_with_this_scope']), ('Type', '==', 'government.government_agency', ['type.object.type'])]
          var_types: [{'government.government_agency', 'organization.organization'}]
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0chghy fb:organization.organization_scope.organizations_with_this_scope ?o1 . ?o1 fb:type.object.type fb:government.government_agency . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:16:26] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        4 / 6 typed schemas kept with ans_size > 0.
      } [0.001s]
      Typed level ended, resulting in 266 schemas.
    } [0.022s]
    Time level searching (total times = 0): {
      Current: 0 / 266
      FBHelper: 31940 predicate names loaded.
self.var_time_preds: [{'government.government_agency.date_founded'}]
self.var_time_preds: [{'government.government_agency.date_founded'}]
self.var_time_preds: [{'award.award_category.date_established', 'award.award_category.date_discontinued'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'government.governmental_body.date_formed', 'government.governmental_body.date_dissolved'}]
self.var_time_preds: [{'government.government_agency.date_founded'}]
self.var_time_preds: [{'people.person.date_of_birth'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'organization.organization.date_founded'}]
self.var_time_preds: [{'sports.sports_team.founded'}]
self.var_time_preds: [{'food.beer.first_brewed'}]
self.var_time_preds: [{'base.thoroughbredracing.thoroughbred_racehorse.date_of_death', 'base.thoroughbredracing.thoroughbred_racehorse.foaled'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'internet.top_level_domain.introduced'}]
self.var_time_preds: [set()]
self.var_time_preds: [{'film.film.initial_release_date'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'time.event.start_date', 'time.event.end_date'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'film.film.initial_release_date'}]
self.var_time_preds: [{'law.court.dissolved', 'law.court.founded'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'royalty.monarch.from_date', 'royalty.monarch.to_date'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'book.written_work.date_written', 'book.written_work.copyright_date', 'book.written_work.date_of_first_publication'}]
self.var_time_preds: [{'organization.organization.date_founded'}]
self.var_time_preds: [{'organization.organization.date_founded'}]
self.var_time_preds: [{'tv.tv_series_episode.air_date'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'music.music_video.initial_release_date'}]
self.var_time_preds: [{'cvg.game_version.release_date'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'measurement_unit.dated_integer.year'}, set()]
self.var_time_preds: [{'business.employment_tenure.to', 'business.employment_tenure.from'}, set()]
self.var_time_preds: [{'business.employment_tenure.to', 'business.employment_tenure.from'}, set()]
self.var_time_preds: [{'measurement_unit.dated_integer.year'}, set()]
self.var_time_preds: [{'business.employment_tenure.to', 'business.employment_tenure.from'}, set()]
self.var_time_preds: [{'measurement_unit.dated_integer.year'}, set()]
self.var_time_preds: [{'business.employment_tenure.to', 'business.employment_tenure.from'}, {'people.person.date_of_birth'}]
self.var_time_preds: [{'business.employment_tenure.to', 'business.employment_tenure.from'}, set()]
self.var_time_preds: [{'organization.organization_relationship.from', 'organization.organization_relationship.to', 'organization.organization_relationship.as_of_date'}, {'organization.organization.date_founded'}]
self.var_time_preds: [{'measurement_unit.dated_integer.year'}, set()]
self.var_time_preds: [{'measurement_unit.dated_integer.year'}, set()]
self.var_time_preds: [{'measurement_unit.dated_integer.year'}, set()]
self.var_time_preds: [{'measurement_unit.dated_integer.year'}, set()]
self.var_time_preds: [{'measurement_unit.dated_integer.year'}, set()]
self.var_time_preds: [{'measurement_unit.dated_integer.year'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_float.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_float.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_metric_ton.date'}, set()]
self.var_time_preds: [{'measurement_unit.adjusted_money_value.adjustment_date', 'measurement_unit.adjusted_money_value.measurement_date'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'location.religion_percentage.date'}, set()]
self.var_time_preds: [{'location.imports_and_exports.date'}, set()]
self.var_time_preds: [{'location.imports_and_exports.date'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
      Current: 100 / 266
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_float.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_float.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_metric_ton.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_kgoe.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_kgoe.date'}, set()]
self.var_time_preds: [{'measurement_unit.adjusted_money_value.adjustment_date', 'measurement_unit.adjusted_money_value.measurement_date'}, set()]
self.var_time_preds: [{'measurement_unit.adjusted_money_value.adjustment_date', 'measurement_unit.adjusted_money_value.measurement_date'}, set()]
self.var_time_preds: [{'location.religion_percentage.date'}, set()]
self.var_time_preds: [{'location.religion_percentage.date'}, set()]
self.var_time_preds: [{'location.imports_and_exports.date'}, set()]
self.var_time_preds: [{'location.imports_and_exports.date'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_float.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_float.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_metric_ton.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_kgoe.date'}, set()]
self.var_time_preds: [{'measurement_unit.adjusted_money_value.adjustment_date', 'measurement_unit.adjusted_money_value.measurement_date'}, set()]
self.var_time_preds: [{'measurement_unit.adjusted_money_value.adjustment_date', 'measurement_unit.adjusted_money_value.measurement_date'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'location.imports_and_exports.date'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'government.national_anthem_of_a_country.official_anthem_until', 'government.national_anthem_of_a_country.official_anthem_since'}, set()]
self.var_time_preds: [{'government.national_anthem_of_a_country.official_anthem_until', 'government.national_anthem_of_a_country.official_anthem_since'}, set()]
self.var_time_preds: [{'government.national_anthem_of_a_country.official_anthem_until', 'government.national_anthem_of_a_country.official_anthem_since'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'measurement_unit.dated_integer.year'}, set()]
self.var_time_preds: [{'measurement_unit.dated_kilowatt_hour.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_kilowatt_hour.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'government.government_position_held.from', 'government.government_position_held.to'}, set()]
self.var_time_preds: [{'government.government_position_held.from', 'government.government_position_held.to'}, set()]
self.var_time_preds: [{'government.government_position_held.from', 'government.government_position_held.to'}, {'government.governmental_body.date_formed', 'government.governmental_body.date_dissolved'}]
self.var_time_preds: [{'government.government_position_held.from', 'government.government_position_held.to'}, {'government.legislative_session.date_ended', 'government.legislative_session.date_began'}]
self.var_time_preds: [{'organization.organization_membership.to', 'organization.organization_membership.from'}, set()]
self.var_time_preds: [{'organization.organization_membership.to', 'organization.organization_membership.from'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'location.imports_and_exports.date'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'military.force_strength.date'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'base.popstra.arrest.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_integer.year'}, set()]
self.var_time_preds: [{'measurement_unit.dated_kilowatt_hour.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_index_value.date', 'measurement_unit.dated_index_value.base_period'}, set()]
self.var_time_preds: [{'government.government_position_held.from', 'government.government_position_held.to'}, set()]
self.var_time_preds: [{'government.government_position_held.from', 'government.government_position_held.to'}, set()]
self.var_time_preds: [{'government.government_position_held.from', 'government.government_position_held.to'}, set()]
      Current: 200 / 266
self.var_time_preds: [{'government.government_position_held.from', 'government.government_position_held.to'}, set()]
self.var_time_preds: [{'organization.organization_membership.to', 'organization.organization_membership.from'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'military.force_strength.date'}, set()]
self.var_time_preds: [{'military.force_strength.date'}, set()]
self.var_time_preds: [{'military.force_strength.date'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'base.popstra.arrest.date'}, set()]
self.var_time_preds: [{'base.popstra.vacation_choice.start_date', 'base.popstra.vacation_choice.end_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_integer.year'}, set()]
self.var_time_preds: [{'measurement_unit.dated_money_value.valid_date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_percentage.date'}, set()]
self.var_time_preds: [{'measurement_unit.dated_index_value.date', 'measurement_unit.dated_index_value.base_period'}, set()]
self.var_time_preds: [{'measurement_unit.dated_index_value.date', 'measurement_unit.dated_index_value.base_period'}, set()]
self.var_time_preds: [{'government.government_position_held.from', 'government.government_position_held.to'}, set()]
self.var_time_preds: [{'government.government_position_held.from', 'government.government_position_held.to'}, set()]
self.var_time_preds: [{'organization.organization_membership.to', 'organization.organization_membership.from'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'location.imports_and_exports.date'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'military.force_strength.date'}, set()]
self.var_time_preds: [{'military.force_strength.date'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'base.popstra.arrest.date'}, set()]
self.var_time_preds: [{'base.popstra.vacation_choice.start_date', 'base.popstra.vacation_choice.end_date'}, set()]
self.var_time_preds: [{'base.mystery.cryptid_observation.date'}, set()]
self.var_time_preds: [{'symbols.flag_use.from_date', 'symbols.flag_use.to_date'}, set()]
self.var_time_preds: [{'symbols.flag_use.from_date', 'symbols.flag_use.to_date'}, set()]
self.var_time_preds: [{'symbols.flag_use.from_date', 'symbols.flag_use.to_date'}, set()]
self.var_time_preds: [{'location.imports_exports_by_industry.date'}, set()]
self.var_time_preds: [{'symbols.armorial_grant.used_until', 'symbols.armorial_grant.used_from'}, set()]
self.var_time_preds: [{'symbols.armorial_grant.used_until', 'symbols.armorial_grant.used_from'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'symbols.armorial_grant.used_until', 'symbols.armorial_grant.used_from'}, set()]
self.var_time_preds: [{'symbols.armorial_grant.used_until', 'symbols.armorial_grant.used_from'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'government.government_agency.date_founded'}]
self.var_time_preds: [set()]
self.var_time_preds: [{'organization.organization.date_founded', 'government.government_agency.date_founded'}]
      0 timed schemas retrieved from 266 typed schemas.
      Calculating F1 for 0 timed schemas: {
        0 / 0 timed schemas kept with ans_size > 0.
      } [0.000s]
      Time level ended, resulting in 266 schemas.
    } [0.221s]
    Ordinal level searching (total ordinals = 0): {
      Current: 0 / 266
[{'government.government_agency.date_founded'}]
[{'government.government_agency.date_founded'}]
[{'award.award_category.date_established', 'award.award_category.date_discontinued'}]
[set()]
[set()]
[set()]
[set()]
[set()]
[{'government.governmental_body.date_formed', 'government.governmental_body.date_dissolved'}]
[{'government.government_agency.date_founded'}]
[{'people.person.date_of_birth'}]
[set()]
[set()]
[{'organization.organization.date_founded'}]
[{'sports.sports_team.founded'}]
[{'food.beer.first_brewed'}]
[{'base.thoroughbredracing.thoroughbred_racehorse.date_of_death', 'base.thoroughbredracing.thoroughbred_racehorse.foaled'}]
[set()]
[set()]
[set()]
[{'internet.top_level_domain.introduced'}]
[set()]
[{'film.film.initial_release_date'}]
[set()]
[set()]
[set()]
[set()]
[set()]
[{'time.event.start_date', 'time.event.end_date'}]
[set()]
[set()]
[set()]
[{'film.film.initial_release_date'}]
[{'law.court.dissolved', 'law.court.founded'}]
[set()]
[set()]
[set()]
[set()]
[{'royalty.monarch.from_date', 'royalty.monarch.to_date'}]
[set()]
[set()]
[set()]
[set()]
[set()]
[{'book.written_work.date_written', 'book.written_work.copyright_date', 'book.written_work.date_of_first_publication'}]
[{'organization.organization.date_founded'}]
[{'organization.organization.date_founded'}]
[{'tv.tv_series_episode.air_date'}]
[set()]
[set()]
[{'music.music_video.initial_release_date'}]
[{'cvg.game_version.release_date'}]
[set()]
[set()]
[{'measurement_unit.dated_integer.year'}, set()]
[{'business.employment_tenure.to', 'business.employment_tenure.from'}, set()]
[{'business.employment_tenure.to', 'business.employment_tenure.from'}, set()]
[{'measurement_unit.dated_integer.year'}, set()]
[{'business.employment_tenure.to', 'business.employment_tenure.from'}, set()]
[{'measurement_unit.dated_integer.year'}, set()]
[{'business.employment_tenure.to', 'business.employment_tenure.from'}, {'people.person.date_of_birth'}]
[{'business.employment_tenure.to', 'business.employment_tenure.from'}, set()]
[{'organization.organization_relationship.from', 'organization.organization_relationship.to', 'organization.organization_relationship.as_of_date'}, {'organization.organization.date_founded'}]
[{'measurement_unit.dated_integer.year'}, set()]
[{'measurement_unit.dated_integer.year'}, set()]
[{'measurement_unit.dated_integer.year'}, set()]
[{'measurement_unit.dated_integer.year'}, set()]
[{'measurement_unit.dated_integer.year'}, set()]
[{'measurement_unit.dated_integer.year'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_float.date'}, set()]
[{'measurement_unit.dated_float.date'}, set()]
[{'measurement_unit.dated_metric_ton.date'}, set()]
[{'measurement_unit.adjusted_money_value.adjustment_date', 'measurement_unit.adjusted_money_value.measurement_date'}, set()]
[set(), set()]
[set(), set()]
[{'location.religion_percentage.date'}, set()]
[{'location.imports_and_exports.date'}, set()]
[{'location.imports_and_exports.date'}, set()]
[set(), set()]
[set(), set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
      Current: 100 / 266
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_float.date'}, set()]
[{'measurement_unit.dated_float.date'}, set()]
[{'measurement_unit.dated_metric_ton.date'}, set()]
[{'measurement_unit.dated_kgoe.date'}, set()]
[{'measurement_unit.dated_kgoe.date'}, set()]
[{'measurement_unit.adjusted_money_value.adjustment_date', 'measurement_unit.adjusted_money_value.measurement_date'}, set()]
[{'measurement_unit.adjusted_money_value.adjustment_date', 'measurement_unit.adjusted_money_value.measurement_date'}, set()]
[{'location.religion_percentage.date'}, set()]
[{'location.religion_percentage.date'}, set()]
[{'location.imports_and_exports.date'}, set()]
[{'location.imports_and_exports.date'}, set()]
[set(), set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_float.date'}, set()]
[{'measurement_unit.dated_float.date'}, set()]
[{'measurement_unit.dated_metric_ton.date'}, set()]
[{'measurement_unit.dated_kgoe.date'}, set()]
[{'measurement_unit.adjusted_money_value.adjustment_date', 'measurement_unit.adjusted_money_value.measurement_date'}, set()]
[{'measurement_unit.adjusted_money_value.adjustment_date', 'measurement_unit.adjusted_money_value.measurement_date'}, set()]
[set(), set()]
[set(), set()]
[set(), set()]
[{'location.imports_and_exports.date'}, set()]
[set(), set()]
[{'government.national_anthem_of_a_country.official_anthem_until', 'government.national_anthem_of_a_country.official_anthem_since'}, set()]
[{'government.national_anthem_of_a_country.official_anthem_until', 'government.national_anthem_of_a_country.official_anthem_since'}, set()]
[{'government.national_anthem_of_a_country.official_anthem_until', 'government.national_anthem_of_a_country.official_anthem_since'}, set()]
[set(), set()]
[set(), set()]
[set(), set()]
[set(), set()]
[{'measurement_unit.dated_integer.year'}, set()]
[{'measurement_unit.dated_kilowatt_hour.date'}, set()]
[{'measurement_unit.dated_kilowatt_hour.date'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'government.government_position_held.from', 'government.government_position_held.to'}, set()]
[{'government.government_position_held.from', 'government.government_position_held.to'}, set()]
[{'government.government_position_held.from', 'government.government_position_held.to'}, {'government.governmental_body.date_formed', 'government.governmental_body.date_dissolved'}]
[{'government.government_position_held.from', 'government.government_position_held.to'}, {'government.legislative_session.date_ended', 'government.legislative_session.date_began'}]
[{'organization.organization_membership.to', 'organization.organization_membership.from'}, set()]
[{'organization.organization_membership.to', 'organization.organization_membership.from'}, set()]
[set(), set()]
[{'location.imports_and_exports.date'}, set()]
[set(), set()]
[{'military.force_strength.date'}, set()]
[set(), set()]
[set(), set()]
[set(), set()]
[set(), set()]
[{'base.popstra.arrest.date'}, set()]
[{'measurement_unit.dated_integer.year'}, set()]
[{'measurement_unit.dated_kilowatt_hour.date'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_index_value.date', 'measurement_unit.dated_index_value.base_period'}, set()]
[{'government.government_position_held.from', 'government.government_position_held.to'}, set()]
[{'government.government_position_held.from', 'government.government_position_held.to'}, set()]
[{'government.government_position_held.from', 'government.government_position_held.to'}, set()]
      Current: 200 / 266
[{'government.government_position_held.from', 'government.government_position_held.to'}, set()]
[{'organization.organization_membership.to', 'organization.organization_membership.from'}, set()]
[set(), set()]
[set(), set()]
[{'military.force_strength.date'}, set()]
[{'military.force_strength.date'}, set()]
[{'military.force_strength.date'}, set()]
[set(), set()]
[set(), set()]
[set(), set()]
[{'base.popstra.arrest.date'}, set()]
[{'base.popstra.vacation_choice.start_date', 'base.popstra.vacation_choice.end_date'}, set()]
[{'measurement_unit.dated_integer.year'}, set()]
[{'measurement_unit.dated_money_value.valid_date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_percentage.date'}, set()]
[{'measurement_unit.dated_index_value.date', 'measurement_unit.dated_index_value.base_period'}, set()]
[{'measurement_unit.dated_index_value.date', 'measurement_unit.dated_index_value.base_period'}, set()]
[{'government.government_position_held.from', 'government.government_position_held.to'}, set()]
[{'government.government_position_held.from', 'government.government_position_held.to'}, set()]
[{'organization.organization_membership.to', 'organization.organization_membership.from'}, set()]
[set(), set()]
[{'location.imports_and_exports.date'}, set()]
[set(), set()]
[set(), set()]
[{'military.force_strength.date'}, set()]
[{'military.force_strength.date'}, set()]
[set(), set()]
[set(), set()]
[{'base.popstra.arrest.date'}, set()]
[{'base.popstra.vacation_choice.start_date', 'base.popstra.vacation_choice.end_date'}, set()]
[{'base.mystery.cryptid_observation.date'}, set()]
[{'symbols.flag_use.from_date', 'symbols.flag_use.to_date'}, set()]
[{'symbols.flag_use.from_date', 'symbols.flag_use.to_date'}, set()]
[{'symbols.flag_use.from_date', 'symbols.flag_use.to_date'}, set()]
[{'location.imports_exports_by_industry.date'}, set()]
[{'symbols.armorial_grant.used_until', 'symbols.armorial_grant.used_from'}, set()]
[{'symbols.armorial_grant.used_until', 'symbols.armorial_grant.used_from'}, set()]
[set(), set()]
[set(), set()]
[set(), set()]
[{'symbols.armorial_grant.used_until', 'symbols.armorial_grant.used_from'}, set()]
[{'symbols.armorial_grant.used_until', 'symbols.armorial_grant.used_from'}, set()]
[set(), set()]
[set(), set()]
[set(), set()]
[set(), set()]
[set(), set()]
[set(), set()]
[set(), set()]
[set()]
[{'government.government_agency.date_founded'}]
[set()]
[{'organization.organization.date_founded', 'government.government_agency.date_founded'}]
      0 ordinal schemas retrieved from 266 timed schemas.
      Calculating F1 for 0 ordinal schemas: {
        0 / 0 ordinal schemas kept with ans_size > 0.
      } [0.000s]
      Ordinal level ended, we finally collected 266 schemas.
    } [0.006s]
    [2020-12-03 14:16:27] buffer saved.
    266 schemas successfully saved into [../../runnings/candgen_WebQ/20201202_entity_time_type_ordinal/data/3600-3699/3697_schema].
  } [4m14.194s]
  Entering Q 3698 / 5810 [b'what language do people in czech republic speak?']: {
    Show 2 E + 10 T + 0 Tm + 0 Ord = 12 linkings: {
      #00 Entity: [5, 7) (czech republic) == m.01mjq (Czech_Republic) {'score': 26571.61979, 'source': 0.0}
      #01 Entity: [5, 7) (czech republic) == m.036b7l (Czech_Republic_national_football_team) {'score': 4.859508, 'source': 0.0}
      #02 Type: [1, 2) (language) == language.language_dialect (language dialect) {'sim': 0.917232}
      #03 Type: [5, 7) (czech republic) == location.ru_republic (russian republic) {'sim': 0.892807}
      #04 Type: [1, 2) (language) == computer.programming_language (programming language) {'sim': 0.872471}
      #05 Type: [0, 2) (what language) == language.language_writing_type (language writing type) {'sim': 0.84238}
      #06 Type: [0, 2) (what language) == language.language_writing_system (language writing system) {'sim': 0.839229}
      #07 Type: [1, 2) (language) == language.human_language (human language) {'sim': 0.830001}
      #08 Type: [1, 2) (language) == computer.programming_language_paradigm (programming language paradigm) {'sim': 0.812534}
      #09 Type: [1, 2) (language) == language.language_creator (language creator) {'sim': 0.804178}
      #10 Type: [1, 2) (language) == language.language_family (language family) {'sim': 0.802832}
      #11 Type: [0, 2) (what language) == fictional_universe.fictional_language (language in fiction) {'sim': 0.793377}
    } [0.000s]
    12 link data save to file.
    Coarse level searching (total entities = 2): {
      [Len-1||F1/2] (2020-12-03 14:20:41) {
        Fuzzy query: SELECT DISTINCT ?p1 WHERE { fb:m.01mjq ?p1 ?o1 . }
        [2020-12-03 14:20:41] SPARQL Request: {
          SELECT DISTINCT ?p1 WHERE { fb:m.01mjq ?p1 ?o1 . }
          Query return lines = 114
        } [0.007s]
        Filt_Query_Ret = 47 / 114 ( 0.007s)
      } [0.008s]
      [Len-1||F2/2] (2020-12-03 14:20:41) {
        Fuzzy query: SELECT DISTINCT ?p1 WHERE { fb:m.036b7l ?p1 ?o1 . }
        [2020-12-03 14:20:41] SPARQL Request: {
          SELECT DISTINCT ?p1 WHERE { fb:m.036b7l ?p1 ?o1 . }
          Query return lines = 18
        } [0.013s]
        Filt_Query_Ret = 6 / 18 ( 0.013s)
      } [0.013s]
      [Len-2||F1/2] (2020-12-03 14:20:41) {
        Fuzzy query: SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.01mjq ?p1 ?o1 . ?o1 ?p2 ?o2 . }
        [2020-12-03 14:20:41] SPARQL Request: {
          SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.01mjq ?p1 ?o1 . ?o1 ?p2 ?o2 . }
          Query return lines = 1331
        } [0.178s]
        Filt_Query_Ret = 0 / 1331 ( 0.183s)
      } [0.183s]
      [Len-2||F2/2] (2020-12-03 14:20:41) {
        Fuzzy query: SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.036b7l ?p1 ?o1 . ?o1 ?p2 ?o2 . }
        [2020-12-03 14:20:41] SPARQL Request: {
          SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.036b7l ?p1 ?o1 . ?o1 ?p2 ?o2 . }
          Query return lines = 278
        } [0.064s]
        Filt_Query_Ret = 20 / 278 ( 0.065s)
      } [0.065s]
      73 coarse schemas retrieved from scratch.
      Calculating F1 for 73 coarse schemas: {
        Current: 0 / 73
        Checking schema 0 / 73: {
          [('Main', '==', 'm.01mjq', ['location.country.form_of_government'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.form_of_government ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:41] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.form_of_government ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 1
            Final Answer: {'Parliamentary republic'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.018s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.018s]
        Checking schema 1 / 73: {
          [('Main', '==', 'm.01mjq', ['location.country.official_language'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.official_language ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:41] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.official_language ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 1
            Final Answer: {'Czech Language'}
            Answers = 1, P = 1.000000, R = 1.000000, F1 = 1.000000
          } [0.008s]
          Answers = 1, P = 1.000000, R = 1.000000, F1 = 1.000000
        } [0.008s]
        Checking schema 2 / 73: {
          [('Main', '==', 'm.01mjq', ['location.country.administrative_divisions'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.administrative_divisions ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:41] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.administrative_divisions ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 14
            Final Answer: {'Liberec Region', 'Olomouc Region', 'Ústí nad Labem Region', 'Plzeň Region', 'Vysočina Region', 'Central Bohemian Region', 'Prague', 'Karlovy Vary Region', 'South Bohemian Region', 'Pardubice Region', 'Zlín Region', 'Hradec Králové Region', 'Moravian-Silesian Region', 'South Moravian Region'}
            Answers = 14, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.010s]
          Answers = 14, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.010s]
        Checking schema 3 / 73: {
          [('Main', '==', 'm.01mjq', ['base.infection.location_of_biosafety_facility.biosafety_facility'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.infection.location_of_biosafety_facility.biosafety_facility ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:41] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.infection.location_of_biosafety_facility.biosafety_facility ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 1
            Final Answer: {'Center of Biological Protection'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.006s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.006s]
        Checking schema 4 / 73: {
          [('Main', '==', 'm.01mjq', ['base.biblioness.bibs_location.loc_type'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.biblioness.bibs_location.loc_type ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:41] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.biblioness.bibs_location.loc_type ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 0
            Final Answer: set()
            Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
          } [0.008s]
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.008s]
        Checking schema 5 / 73: {
          [('Main', '==', 'm.01mjq', ['base.biblioness.bibs_location.is_clear'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.biblioness.bibs_location.is_clear ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:41] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.biblioness.bibs_location.is_clear ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 0
            Final Answer: set()
            Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        Checking schema 6 / 73: {
          [('Main', '==', 'm.01mjq', ['base.aareas.schema.administrative_area.administrative_parent'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.aareas.schema.administrative_area.administrative_parent ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.aareas.schema.administrative_area.administrative_parent ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 1
            Final Answer: {'Earth'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.008s]
        Checking schema 7 / 73: {
          [('Main', '==', 'm.01mjq', ['base.aareas.schema.administrative_area.administrative_area_type'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.aareas.schema.administrative_area.administrative_area_type ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.aareas.schema.administrative_area.administrative_area_type ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 1
            Final Answer: {'Sovereign state'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        Checking schema 8 / 73: {
          [('Main', '==', 'm.01mjq', ['base.aareas.schema.administrative_area.short_name'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.aareas.schema.administrative_area.short_name ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.aareas.schema.administrative_area.short_name ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 0
            Final Answer: set()
            Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
          } [0.021s]
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.021s]
        Checking schema 9 / 73: {
          [('Main', '==', 'm.01mjq', ['government.governmental_jurisdiction.government_bodies'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:government.governmental_jurisdiction.government_bodies ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:government.governmental_jurisdiction.government_bodies ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 3
            Final Answer: {'Parliament of the Czech Republic', 'Chamber of Deputies of the Parliament of the Czech Republic', 'Senate of the Parliament of the Czech Republic'}
            Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.006s]
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.006s]
        Checking schema 10 / 73: {
          [('Main', '==', 'm.01mjq', ['government.governmental_jurisdiction.agencies'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:government.governmental_jurisdiction.agencies ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:government.governmental_jurisdiction.agencies ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 4
            Final Answer: {'Czech Republic Ministry of Culture', 'Ministry of Justice', 'Prison Service of the Czech Republic', 'Czech Statistical Office'}
            Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        Checking schema 11 / 73: {
          [('Main', '==', 'm.01mjq', ['location.location.people_born_here'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.location.people_born_here ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.location.people_born_here ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 373
            Final Answer: {'Berthold Bartosch', 'Věra Soukupová', 'Eric Tomfor', 'Kateřina Němcová', 'Jan Zdeněk Bartoš', 'Troy Allen', 'Milan Fano Blatný', 'Radúz Činčera', 'Petr Nárovec', 'Jerry', 'Gabriela Navrátilová', 'Jarmila Müllerová', 'Cory Everson', 'Jiří Vondráček', 'Jiří Kroha', 'Alena Polenská', 'Isaak Löw Hofmann, Edler von Hofmannsthal', 'Miloš Urban', 'Radomír Šimůnek, Sr.', 'Eufrat', 'Milouš Jakeš', 'Ludmila Javorová', 'Václav Blažek', 'Oldřich Nový', 'Jiří Matoušek', 'Jiří Dolejš', 'Silvie Deluxe', 'Zdenka Braunerová', 'Radek Petr', 'Martina Kubesova', 'Milan Hlavsa', 'David Jan Novotný', 'Lukáš Bodeček', 'Vlastimil Harapes', 'Kryštof Harant', 'Roman Kresta', 'Lenka Bartáková', 'Otakar Motejl', 'Jaroslav Navrátil', 'Josef Váchal', 'Pavel Mráz', 'František Fuka', 'Tomáš Vošvrda', 'Antonín Slavíček', 'Bohuslav Balcar', 'Václav Hudeček', 'Martin Štěpánek', 'Michal Ščasný', 'Vladimir Sicak', 'Petr Svoboda', 'Kateřina Jacques', 'Mathias Lerch', 'Josef Chochol', 'František Kaván', 'Václav Prošek', 'Martin Velíšek', 'Jan Novák', 'Tara Radovic', 'Jindřich Štreit', 'Defrancesca Gallardo', 'Nikola Danihelková', 'Nahum Trebitsch', 'Štěpán Rak', 'Jiri Hlinka', 'Zorka Janů', 'Vladimír Novák', 'Václav Chalupa', 'Regina Maršíková', 'Jiří Tibor Novak', 'Nikita Denise', 'Jan Štursa', 'Antonín Bečvář', 'Věra Bílá', 'Jaroslav Kostelecký', 'Helga Hošková-Weissová', 'Samuel Fritz', 'Anna Bayerová', 'Ferdinand N. Kahler', 'Milan Jirásek', 'Petr Mikolanda', 'Jiří Votruba', 'Petr Procházka', 'Karel Čurda', 'Jana Černá', 'Patrik Svoboda', 'Ctirad Uher', 'Tomas Zelenka', 'Melissa Ria', 'Daniela Dobesova', 'Lea De Mae', 'Lucy Bell', 'David Radosta', 'Ivan Mrkvička', 'Jennifer Stone', 'Jaroslav Mach', 'Aleš Hanák', 'Pavla Brantalova', 'Stanislav Libenský and Jaroslava Brychtová', 'František Hrubín', 'Tomáš Pavelka', 'František Běhounek', 'Adam Kubick', 'Václav Hlavatý', 'Václav Hampl', 'Jakub Černý', 'Michaela Fichtnerova', 'Radim Uzel', 'Eva Poloniová', 'Martin Kratochvíl', 'Lena Cova', 'Martin Šonka', 'Josef Jindřich Šechtl', 'Pavel Tichý', 'Eduard Hedvicek', 'Vladimír Valenta', 'Vítězslav Hálek', 'Katerina Smutna', 'Saša Gedeon', 'Jessica Fiorentino', "Joel D'Amici", 'Miroslav Hroch', 'Martin Turnovský', 'Isabella Janacek', 'Adolf Schneeberger', 'Šimon Špidla', 'Patrick Veselsky', 'Kristýna Pastulová', 'Jaroslav Svoboda', 'Robert Van Damme', 'Jean-Baptiste Krumpholz', 'Katy Bleins', 'Veronika Fasterova', 'Emil Weiss', 'Martin Mareček', 'Michal Prokop', 'Prokop František Šedivý', 'Jiří Marek', 'Karolína Nováková', 'Pavel Juráček', 'Kurt Lehovec', 'Kristi Klenot', 'Sage Kirkpatrick', 'Karel Vlach', 'Keana Moire', 'Thomas Dyk', 'Petr Mach', 'Franz Ignaz Molitor', 'Stacy Silver', 'Zdeněk Chalabala', 'Jiří Gemrot', 'Jitka Chlastáková', 'František Janda-Suk', 'Ivan Vyskočil', 'Karel Paukert', 'Kate K.', 'Tera Joy', 'Jan Králík', 'Roman Jun', 'Michal Smola', 'Hannah Black', 'Karel Hruška', 'Daniel Micka', 'Franta Belsky', 'Sabrina Blond', 'Vladimír Roth', 'Rudolf Koppitz', 'Svatopluk Čech', 'Ondřej Cink', 'Lea Jerova', 'Vladimír Páral', 'Michael Žantovský', 'Lea Magic', 'Ondřej Sekora', 'Bronislav Červenka', 'Jiří Polák', 'Jaroslav Huleš', 'Ladislav Kubík', 'Václav Morávek', 'Jan Nepomuk Štěpánek', 'Pavel Kadeřábek', 'Miloslav Navrátil', 'Big Boss', 'Anna Linhartová', 'Karel Michal', 'Karel Klíč', 'Josef Gočár', 'Jan Novotný', 'Anna Pichrtová', 'Vladimír Jiránek', 'Nika Blond', 'Vaclav Vaca', 'Jana Miartusova', 'Eva Olmerová', 'Vladimír Preclík', 'Bedřich Ščerban', 'Tomáš Král', 'Jakub Svoboda', 'Jan Čulík', 'Claudia Claire', 'Tomáš Kazár', 'Soňa Červená', 'Jiří Suchý', 'František Procházka', 'Martin Hilský', 'Kateřina Bartoňová', 'Petr Jákl', 'Hanuš Wihan', 'Rose Kroc', 'Eduard Nápravník', 'Josef Stránský', 'Vladimír Haber', 'Matěj Končal', 'Simone Style', 'Hermína Týrlová', 'David Vaněček', 'Karel Treybal', 'Táňa Fischerová', 'Jan Horáček', 'Naomi', 'Josef Berger', 'Milan Nitrianský', 'Jiří Šlitr', 'Katerina Stehlikova', 'Victoria Sweet', 'Jiří Hájek', 'Hugo Kauder', 'Soňa Nováková', 'Václav Ondřejka', 'Jan Bidrman', 'Jiří Cetkovský', 'Šimon Pánek', 'Lenny Powers', 'Martin Pospíšil', 'Janet Alfano', 'Cenek J. Vrba', 'Tim Hamilton', 'Daniel Herman', 'Edvard Kožušník', 'Jana Mrázková', 'Hugo Iltis', 'Vladimír Růžička', 'iZLER', 'René Andrle', 'Petr Hruška', 'Martin Hyský', 'Jiří Orság', 'Otto Stransky', 'Karel Cudlín', 'Martin Matiášek', 'Pavel Žáček', 'Libor Rouček', 'George Reno', 'Tomáš Nosek', 'Josef Labor', 'Lukáš Matůš', 'Robin Vik', 'Rudolf Těsnohlídek', 'Veronika Tůmová', 'František Bublan', 'David Jelínek', 'Jan Kubiš', 'Kateřina Hošková', 'Miroslav Singer', 'Radek Ťoupal', 'Florian Leopold Gassmann', 'Michael Lüftner', 'Petr Hájek', 'Luke Hamill', 'Christina Jolie', 'Tomáš Hořava', 'Miloslav Gureň', 'Jakub Kohák', 'Alfred Seifert', 'Miroslav Sládek', 'Josef Matěj Navrátil', 'Angelina Love', 'Michal Bárta', 'Jan Nepomuk Kubíček', 'Ladislav Sitenský', 'Mellie Williams', 'Gioia Biel', 'Jaroslav Rössler', 'Catherine Count', 'Prokop the Great', 'Jan Zajac', 'Martin Hurka', 'Michal Krmenčík', 'Jiří Zelenka', 'Petr Stančík', 'Jan G. Švec', 'Lenka Jelinková', 'Milan Cabrnoch', 'Jaroslav Věšín', 'Ivo Strejček', 'Jan Koukal', 'Milos Makovec', 'Petr Čermák', 'Václav Riedlbauch', 'Václav Rabas', 'Krystal de Boor', 'Milada Součková', 'Libor Nováček', 'Chantal Ferrera', 'Josef Velda', 'Jana Sýkorová', 'Kamil Lhoták', 'Tereza Srbova', 'Adam Zarsky', 'Petr Holík', 'Josef Šťáva', 'Tomáš Kratochvíl', 'Filip Trejbal', 'Václav Láska', 'Evžen Rošický', 'Alois Rašín', 'František Xaver Dušek', 'Mac Hong Quan', 'Chance Caldwell', 'Jaroslav Vanek', 'Radka Kovaříková', 'František Šolc', 'Miloslav Ištvan', 'Luboš Sluka', 'Pavel Svoboda', 'Sharon Wild', 'Otakar Švec', 'Lucinka', 'Alois Musil', 'Svatoslav Ton', 'Michaela Kudláčková', 'Henry Kucera', 'Eva Bartoňová', 'Jaroslav Čermák', 'Iva Pekarkova', 'Pavel Pavel', 'George Basten', 'Jack Roys', 'Tomáš Konečný', 'Ludmila Peterková', 'Ota Fukárek', 'Ralph Benatzky', 'Petra Procházková', 'T. F. Šimon', 'Pavel Složil', 'Teodor Rotrekl', 'Ladislav Beran', 'Michaela Fukačová', 'Zdeněk Fibich', 'Martin Hrustak', 'Jana Sedláčková', 'Andrej Sustr', 'František Tikal', 'Bedřich Moldan', 'Anita Queen', 'Jaromír Štětina', 'Marie Kettnerová', 'Tomáš Netopil', 'Nina Kornikova', 'Ondřej Neff', 'Sandra Kleinová', 'Barbora Kovarikova', 'Váša Příhoda', 'Veronika Drahotová', 'Martin Prokop', 'Marek Kopelent', 'Michal Nguyen', 'Vlastimil Daníček', 'Jessica Dee', 'Adam Lacko', 'Jana Veselá', 'Jan Šverma', 'Lenka Ptáčníková', 'Jaroslav Janiš'}
            Answers = 373, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.015s]
          Answers = 373, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.015s]
        Checking schema 12 / 73: {
          [('Main', '==', 'm.01mjq', ['location.location.partially_contains'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.location.partially_contains ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.location.partially_contains ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 14
            Final Answer: {'Beskids', 'Euroregion Egrensis', 'Euroregion Beskydy', 'Cieszyn Silesia Euroregion', 'Euroregion Pradziad', 'Euroregion Glacensis', 'Euregio Bayerischer Wald-Böhmerwald-Sumava', 'Euroregion Neisse-Nisa-Nysa', 'Euroregion Silesia', 'Euroregion Dobrawa', 'Sudetes', 'Euroregion LABE/ELBE', 'Euroregion Bílé-Biele Karpaty', 'Euregio Silva Nortica'}
            Answers = 14, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 14, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.008s]
        Checking schema 13 / 73: {
          [('Main', '==', 'm.01mjq', ['sports.sports_team_location.teams'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:sports.sports_team_location.teams ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:sports.sports_team_location.teams ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 4
            Final Answer: {'Czech Republic national football team', 'Czech Republic national handball team', "Czech Republic women's national volleyball team", "Czech Republic men's national volleyball team"}
            Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.010s]
          Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.010s]
        Checking schema 14 / 73: {
          [('Main', '==', 'm.01mjq', ['olympics.olympic_athlete_affiliation.athlete'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:olympics.olympic_athlete_affiliation.athlete ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:olympics.olympic_athlete_affiliation.athlete ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 1
            Final Answer: {'Robert Reichel'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.005s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.005s]
        Checking schema 15 / 73: {
          [('Main', '==', 'm.01mjq', ['base.locations.countries.continent'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.locations.countries.continent ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.locations.countries.continent ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 1
            Final Answer: {'Europe'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.009s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.010s]
        Checking schema 16 / 73: {
          [('Main', '==', 'm.01mjq', ['food.beer_country_region.beers_from_here'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:food.beer_country_region.beers_from_here ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:food.beer_country_region.beers_from_here ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 52
            Final Answer: {'Krusovice Royal Black', 'Prague Kisz Bier', 'Urquell Eisbrau Czech', 'Cerná Hora Tas', 'Starobrno Premium Lager', 'Náchod Primátor 24%', 'Vratislavice', 'Pivovar Pardubice Pardubicky Porter', 'Krusovice Imperial', 'U Fleku', 'Cerná Hora Ležák', 'Měšťanský Pivovar Boheme 1795', 'Ostravar Premium', 'Starobrno Červený drak (Red Dragon)', 'Cerná Hora Kvasar (Light)', 'Měšťanský Pivovar Czech Rebel Beer', 'Prague Branik', 'Bernard Svetly Lezak', 'Velké Popovicke Kozel Premium Czech Lager', 'Bernard Speciální Cerné pivo', 'Jihomoravské Pivovany/Vyškov Generál', 'Praske Pivovar Vratislav Lager (Tesco)', 'Nymburk Gold Bohemia', 'Cerná Hora Granát', 'Gambrinus Plzen', 'Hostan Praga Pilsner', 'Náchod Primátor Premium Náchod NV', 'Rakovnik Bakalar', 'Jihomoravské Pivovany/Vyškov Havran', 'Lobkowicz Lobkov', 'Budějovický měšťanský Samson Premium Svétlý Ležák/Pale Lager', 'Herold Czech Premium Lager', 'Pivovar Novo Paka Kumburak', 'Pilsner Urquell', 'Czech Beer Jezek Bronze', 'Cerná Hora Páter', 'Firebrand Czech Lager', 'Vratislavice Pivovar Konrad Eso', 'Svijany Rytír', 'Budweiser Budvar Premium Czech Lager', 'Náchod Primátor 15% Jubilejni Ležák Polotmavy/Jubilee Dark Lager', 'Herold Bohemian Black Lager/Cerny Lezak', 'Pivovar Novo Paka Granat', 'Regent (Southbohemian Breweries plc) Black Regent', 'Prague Staropramen', 'Anon (Co-op) Czech Lager', 'B.B.N.P. Czechvar Premium Czech Lager', 'Budweiser Budvar', 'Měšťanský Pivovar Rebel Originál Premium', 'Lobkowicz Premium Czech Lager', 'Cerná Hora Black Hill Pivni Aperitiv', 'Samson Breweries Crystal Diplomat Dark'}
            Answers = 52, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.017s]
          Answers = 52, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.017s]
        Checking schema 17 / 73: {
          [('Main', '==', 'm.01mjq', ['biology.breed_origin.breeds_originating_here'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:biology.breed_origin.breeds_originating_here ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:biology.breed_origin.breeds_originating_here ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 4
            Final Answer: {'Bohemian Shepherd', 'Cesky Fousek', 'Cesky Terrier', 'Pražský Krysařík'}
            Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.004s]
          Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.005s]
        Checking schema 18 / 73: {
          [('Main', '==', 'm.01mjq', ['location.country.currency_used'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.currency_used ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.currency_used ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 1
            Final Answer: {'Czech koruna'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.004s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.004s]
        Checking schema 19 / 73: {
          [('Main', '==', 'm.01mjq', ['location.country.languages_spoken'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.languages_spoken ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.languages_spoken ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 13
            Final Answer: {'Slovak Language', 'Russian Language', 'Greek Language', 'Polish Language', 'Hungarian language', 'Czech Language', 'Serbian language', 'German Language', 'Bulgarian Language', 'Romani language', 'Croatian language', 'Rusyn Language', 'Ukrainian Language'}
            Answers = 13, P = 0.076923, R = 1.000000, F1 = 0.142857
          } [0.017s]
          Answers = 13, P = 0.076923, R = 1.000000, F1 = 0.142857
        } [0.017s]
        Checking schema 20 / 73: {
          [('Main', '==', 'm.01mjq', ['location.country.internet_tld'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.internet_tld ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.internet_tld ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 1
            Final Answer: {'cz'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        Checking schema 21 / 73: {
          [('Main', '==', 'm.01mjq', ['location.country.first_level_divisions'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.first_level_divisions ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.first_level_divisions ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 14
            Final Answer: {'Liberec Region', 'Olomouc Region', 'Ústí nad Labem Region', 'Plzeň Region', 'Vysočina Region', 'Central Bohemian Region', 'Prague', 'Karlovy Vary Region', 'South Bohemian Region', 'Pardubice Region', 'Zlín Region', 'Hradec Králové Region', 'Moravian-Silesian Region', 'South Moravian Region'}
            Answers = 14, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.005s]
          Answers = 14, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.005s]
        Checking schema 22 / 73: {
          [('Main', '==', 'm.01mjq', ['base.uncommon.topic.exceptions'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.uncommon.topic.exceptions ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.uncommon.topic.exceptions ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 2
            Final Answer: {'City/Town/Village should pertain to Ghana, since City/Town/Village subdivides Ghanaian Municipal District.', 'The type Czech Oblast does not specify where instances may appear.'}
            Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        Checking schema 23 / 73: {
          [('Main', '==', 'm.01mjq', ['base.aareas.schema.administrative_area.subdividing_type'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.aareas.schema.administrative_area.subdividing_type ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.aareas.schema.administrative_area.subdividing_type ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 1
            Final Answer: {'Czech region'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.008s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.008s]
        Checking schema 24 / 73: {
          [('Main', '==', 'm.01mjq', ['government.governmental_jurisdiction.government_positions'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:government.governmental_jurisdiction.government_positions ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:government.governmental_jurisdiction.government_positions ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 3
            Final Answer: {'President of the Czech Republic', 'Chair of the Chamber of Deputies of the Parliament of the Czech Republic', 'Prime Minister of the Czech Republic'}
            Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.008s]
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.008s]
        Checking schema 25 / 73: {
          [('Main', '==', 'm.01mjq', ['location.dated_location.date_founded'])]
          var_types: None
          SELECT DISTINCT ?o1 WHERE { fb:m.01mjq fb:location.dated_location.date_founded ?o1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 WHERE { fb:m.01mjq fb:location.dated_location.date_founded ?o1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 1
            Final Answer: {'1993'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        Checking schema 26 / 73: {
          [('Main', '==', 'm.01mjq', ['location.location.contains'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.location.contains ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.location.contains ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 6528
            Final Answer: {'Višňová', 'Kamenná Lhota', 'Kratochvilka', 'Kynžvart Castle', 'Dobřichovice', 'Stochov', 'Keblov', 'Jenišov', 'Martinice u Onšova', 'Štěchovice Reservoir', 'Věchnov', 'Bohumilice', 'Skrchov', 'Sebečice', 'Malé Žernoseky', 'Lešany', 'Krásněves', 'Masaryk University', 'Tyra', 'Višňová (Příbram District)', 'Lhota-Vlasenice', 'Nový Oldřichov', 'Klimkovice', 'Kralice na Hané', 'Bystré', 'Vykáň', 'Chuderov', 'Starý Poddvorov', 'Běleč (Kladno District)', 'Dobratice', 'Oponešice', 'Vitčice', 'Zahrádka', 'Přibyslav', 'Petrovice II', 'Uhřice', 'Dolní Žďár', 'Dlouhá Stráň', 'Kosov', 'Nepolisy', 'Mohelno', 'Žíšov', 'Brandýs nad Orlicí', 'Čelákovice', 'Libníč', 'Menhartice', 'Zadní Třebaň', 'Záříčí', 'Hluboké Mašůvky', 'Rychvald', 'Blansko', 'Travčice', 'Soběhrdy', 'Báňovice', 'Vraclav', 'Březí nad Oslavou', 'Jedlany', 'Macocha Gorge', 'Pětihosty', 'Kleť Observatory', 'Chotiměř', 'Bobnice', 'Ústup', 'Kdousov', 'Jinočany', 'Býškovice', 'Merklín (Karlovy Vary District)', 'Podbořany', 'Dlouhoňovice', 'Radostín', 'Mokrovousy', 'Kotopeky', 'Otín', 'Chýnice', 'Osek nad Bečvou', 'Zhoř u Tábora', 'Krmelín', 'Starý Šachov', 'Hradec Králové Observatory', 'Police nad Metují', 'Oslavička', 'Moraveč', 'Rychnov u Jablonce nad Nisou', 'Klášterec nad Ohří', 'Malá Hraštice', 'Josefův Důl', 'Písková Lhota (Nymburk District)', 'Skryje', 'Knínice u Boskovic', 'Dymokury', 'Žernovník', 'Bílá Lhota', 'Doňov', 'Brzkov', 'Rynárec', 'Pankrác', 'Kyšice', 'Chudoslavice', 'Drahelčice', 'Vlčí Habřina', 'Ještěd Tower', 'Vrbatův Kostelec', 'Borovy', 'Malý Beranov', 'Jívka', 'Panoší Újezd', 'Puńców', 'Rataje', 'Milíčov', 'Dolní Bludovice', 'Bohušov', 'Otvovice', 'Prague 21', 'Kámen', 'Nedabyle', 'Velká Dobrá', 'Borkovice', 'Kostomlátky', 'Libiš', 'Hostomice', 'Lubník', 'Radějovice (Prague-East District)', 'Plch', 'Karlov', 'Brná nad Labem', 'Větrný Jeníkov', 'Jestřebí (Česká Lípa District)', 'Újezdec', 'Meziříčí', 'Novosedlice', 'Nechvalín', 'Dětkovice', 'Líšnice', 'Sentice', 'Batňovice', 'Kalec', 'Krátošice', 'Dolní Zálezly', 'Daskabát', 'Kvítkov', 'Jáchymov', 'Bošice', 'Velký Bor', 'Třebětice', 'Nová Ves nad Nisou', 'Majetín', 'Jilem', 'Hostišová', 'Čermná nad Orlicí', 'Háje (Příbram District)', 'Vranovice', 'Hutisko-Solanec', 'Rasošky', 'Křoví', 'Suchdol', 'Louňovice pod Blaníkem', 'Všestary', 'Žeraviny', 'Laškov', 'Božice', 'Krušovice (Rakovník District)', 'Hudčice', 'Horní Vilémovice', 'Tábor', 'Petroupim', 'Černá', 'Měrotín', 'Kyjovice', 'Jablonná', 'Doupě', 'Luka', 'Ženklava', 'Morkovice-Slížany', 'Lipinka', 'Karlovice', 'Krásný Dvůr', 'Milotice nad Opavou', 'Hůrky', 'Labská Stráň', 'Pomezí nad Ohří', 'Radostov', 'Katusice', 'Nečín', 'Křenov', 'Tetín', 'Leskovec nad Moravicí', 'Cekov', 'Vrchovnice', 'Jankov', 'Turnov', 'Doksy', 'Syrovátka', 'Chrudichromy', 'Dobříč (Prague-West District)', 'Sirá', 'Němčice', 'Záhorovice', 'Oplany', 'Ceske Budejovice Airport', 'Čestice (Rychnov nad Kněžnou District)', 'Tipsport Arena', 'Lukov', 'Sedlatice', 'Zvíkovec', 'Sokoleč', 'Bolatice', 'Svatopluk Čech Bridge', 'Rozhovice', 'Kudlovice', 'Záblatí', 'Vratislavice nad Nisou', 'Heřmaničky', 'Pavlovice', 'Jílovice', 'Žákava', 'Vrskmaň', 'Háj u Duchcova', 'Štětí', 'Košíky', 'Michalovice', 'Bukovec', 'Železná Ruda', 'Janov (Rychnov nad Kněžnou District)', 'Kaly', 'Vápovice', 'Meziříčko', 'Korkyně', 'Řestoky', 'Chvaletice', 'Běchovice', 'Dubí', 'Kropáčova Vrutice', 'Hrutov', 'Racková', 'Bystrá', 'Letonice', 'Libošovice', 'Telnice', 'Hošťalovice', 'Písty', 'Drmoul', 'Sněžka', 'Vysoký Chlumec', 'Loza', 'Františkovy Lázně', 'Poruba', 'Vranová', 'Prádlo', 'Dvůr Králové nad Labem', 'Ryžoviště', 'Bezdědovice', 'Dolany (Náchod District)', 'Sedlice', 'Střemy', 'Prague 4', 'Kamenné Žehrovice', 'Čechtín', 'Sádek', 'Huštěnovice', 'Libřice', 'Novosedly', 'Přelovice', 'Branky', 'Hubenov', 'Světce', 'Stalin Monument', 'Přemyslovice', 'Chrášťovice', 'Hradčany-Kobeřice', 'Chodouň', 'Hříšice', 'Komořany', 'Levín', 'Domaželice', 'Vícemil', 'Lomnice nad Lužnicí', 'Uhřínov', 'Řeka', 'Fryčovice', 'Libočany', 'Most', 'Kornice', 'Dobřív', 'Hlavatce', 'Urbanice', 'Ráj', 'Lužná', 'Droužkovice', 'Zvolenovice', 'Vysoké Mýto', 'Havraň', 'Radslavice', 'Stará Říše', 'Vícov', 'Odrava', 'Zalužany', 'Velké Dářko', 'Slavoňov', 'Czechoslovakian Grand Prix', 'Vělopolí', 'Řepín', 'Mošnov', 'Trhanov', 'Skuhrov (Jablonec nad Nisou District)', 'Raková u Konice', 'Petrovičky (Jičín District)', 'Chroboly', 'Horní Těšice', 'Sudslava', 'Jinolice', 'Městečko Trnávka', 'Počenice-Tetětice', 'Dlouhá Brtnice', 'Libochovany', 'Anenská Studánka', 'Mukařov', 'College of Polytechnics Jihlava, main campus', 'Mistrovice', 'Bory', 'Heřmaň', 'Žirovnice', 'Zábřeh', 'Bílovice-Lutotín', 'Víchová nad Jizerou', 'Sedlčany', 'Nevid', 'Vápenný Podol', 'Charvatce', 'Kozly', 'Benešov u Semil', 'Chlumec nad Cidlinou', 'Lipina', 'Koryta (Mladá Boleslav District)', 'Machov', 'Ostrožská Nová Ves', 'Hlína', 'Markvartice (Jičín District)', 'Orlík Dam', 'Nová Lhota', 'Postřelmůvek', 'Medlov', 'Dýšina', 'Starovičky', 'Řetůvka', 'Václavovice', 'Poniklá', 'Třemešné', 'Královské Poříčí', 'Hořešovice', 'Zborovy', 'Lomy', 'Hroubovice', 'Budyně', 'Hejnice', 'Slavonice', 'Srubec', 'Teplice', 'Nučice (Prague-West District)', 'Horní Suchá', 'Dubany', 'Svojkov', 'Osíčko', 'Úsilov', 'Horní Domaslavice', 'Modlíkov', 'Zlín', 'Klokočí', 'Litochovice', 'Dobrá Voda u Českých Budějovic', 'Liberec', 'Vranov', 'Tvarožná', 'Otice', 'Růžďka', 'Studénka', 'Deštnice', 'Vodochody Airport', 'Velenice (Nymburk District)', 'Bučovice', 'Chvalovice', 'Sudějov', 'Ždánice', 'Trnovany', 'Radkovice u Budče', 'Mešno', 'Tlumačov', 'Strachotice', 'Suchodol, Czech Republic', 'Jihovýchod', 'Oplocany', 'Netřebice (Nymburk District)', 'Zdobín', 'Těškov', 'Vikantice', 'Kněžičky (Nymburk District)', 'Municipal House', 'Ovčáry', 'Raškovice', 'Mostek (Trutnov District)', 'Čkyně', 'Šebrov-Kateřina', 'Stránka (Mělník District)', 'Brloh', 'Slatiny', 'Černousy', 'Ratboř', 'Tupadly (Mělník District)', 'Chotěmice', 'Velká Lhota', 'Kampa Island', 'Chotýšany', 'Horní Smrčné', 'Kostelec u Heřmanova Městce', 'Korozluky', 'Uhersko', 'Nesovice', 'Pasečnice', 'Včelná', 'Jestřabí v Krkonoších', 'Dolce', 'Pustina', 'Sloveč', 'Karlštejn', 'Blatnice pod Svatým Antonínkem', 'Zádolí', 'Lažany', 'Tanvald', 'Strančice', 'Záboří', 'Krnsko', 'Halenkov', 'Lipůvka', 'Želízy', 'Křelovice', 'Žernov (Semily District)', 'Přišimasy', 'Zblovice', 'Ořechov', 'Radějovice', 'Domašín', 'Moravia', 'Koupě', 'Mořina', 'Blažovice', 'Vestec (Nymburk District)', 'Zájezd (Kladno District)', 'Ruda', 'Radotice', 'Česká Lípa', 'Sazovice', 'Pacetluky', 'Vyšehněvice', 'Golčův Jeníkov', 'Mirošov', 'Koněšín', 'Vážany', 'Rabštejnek Castle', 'Česká Metuje', 'Velká Bystřice', 'Císařov', 'Újezdeček', 'South Bohemian Region', 'Straky', 'Chvalatice', 'Skřivany', 'Jeníkovice', 'Benátky nad Jizerou', 'Běleč', 'Cheb Airport', 'Údlice', 'Tuchoměřice', 'Varvažov', 'Lochovice', 'Hradešín', 'Kacanovy', 'Dobrovítov', 'Bohdalov', 'Louny', 'Lhotsko', 'Nová Dědina', 'Věcov', 'Křemže', 'Stanoviště', 'Dolní Dobrouč', 'Zátor', 'Drhovy', 'Valašská Senice', 'Dobroutov', 'University of Economics, Prague', 'Červená Lhota Castle', 'Chudenín', 'Kladeruby', 'Choustníkovo Hradiště', 'Karle', 'Radim', 'Hluboká', 'Dolní Branná', 'Rozdrojovice', 'Víska u Jevíčka', 'Loučná pod Klínovcem', 'Olomouc', 'Bučina', 'Nové Sady', 'Kobylisy Shooting Range', 'Sudovo Hlavno', 'Příštpo', 'Žulová', 'Levý Hradec', 'Nýrsko', 'Kněžice', 'Chorušice', 'Břvany', 'Nalžovské Hory', 'Uhlířská Lhota', 'Dolní Lhota', 'Říčky v Orlických horách', 'Borovnička', 'Olšovice', 'Staré Místo', 'Přední Kopanina', 'NUTS Střední Čechy', 'Struhařov (Prague-East District)', 'Vlhošť', 'Malý Bor', 'Podbřežice', 'Všepadly', 'Pozděchov', 'Lhánice', 'Tis u Blatna', 'Bořislav', 'Šitbořice', 'Krchleby (Nymburk District)', "Bedrich Schwarzenberg's Forestry College and Secondary Forestry School", 'Church of Saint Procopius, Žižkov', 'Vonoklasy', 'Sobětuchy', 'Břest', 'Věřňovice', 'Librantice', 'Sádek (Příbram District)', 'Baliny', 'Strakonice', 'Noviny pod Ralskem', 'Kadolec', 'Slaný', 'Karlova Studánka', 'Kozmice', 'Rabyně', 'Vápno', 'Dohalice', 'Lužice', 'Dobrá Voda', 'Siřejovice', 'Dílce', 'Řásná', 'Ss. Cyril and Methodius Cathedral', 'Čejov', 'Milíře', 'Mochtín', 'Čím', 'Široká Niva', 'Nedachlebice', 'Dubicko', 'Česká Bělá', 'Janov (Rakovník District)', 'Nymburk', 'Drahenice', 'Brzánky', 'Vlčí', 'Týniště', 'Velká Turná', 'Újezd u Černé Hory', 'Šanov (Rakovník District)', 'Drahanovice', 'Selibice', 'České Meziříčí', 'Našiměřice', 'Miroslav', 'Vanov', 'Ostrov', 'Podolí I', 'Strašnov', 'Drahonice', 'Radíč', 'Bujanov', 'Kostice', 'Lejšovka', 'Sedlejov', 'Veltrusy', 'Černovice', 'Kroměříž', 'Mydlovary', 'Běhařov', 'Košťany', 'Kozojedy (Jičín District)', 'Gruna', 'Buchlovice', 'Čížkov', 'Lodhéřov', 'Polště', 'Svatá', 'Březsko', 'Kostomlaty nad Labem', 'Nejdek', 'Frýdlant', 'Hoštejn', 'Vídeň', 'Sudislav nad Orlicí', 'Zachotín', 'Šternberk', 'Branov', 'Strašín', 'Plískov', 'Vodňany', 'Hačky', 'Stárkov', 'Hartinkov', 'Skalice u České Lípy', 'Strážnice', 'Mutějovice', 'Rychnovek', 'Starovice', 'Troubsko', 'Šerkovice', 'Řetová', 'Vrdy', 'Holice', 'Dobšín', 'Březovice', 'Vilémov', 'Choteč (Prague-West District)', 'Markvartice', 'Mažice', 'Doubravy', 'Doubravčice', 'Budišov nad Budišovkou', 'Třemešná', 'Biskupice-Pulkov', 'Červená Voda', 'Horní Řepčice', 'Jindřichovice pod Smrkem', 'Provodov', 'Petříkov (Prague-East District)', 'Banking Institute / College of Banking', 'Veselice', 'Týniště nad Orlicí', 'Rybnice', 'Hlavečník', 'Bezvěrov', 'Výrovice', 'Havlovice', 'Terešov', 'Chrudimka', 'Jasenná (Náchod District)', 'Hradištko (Prague-West District)', 'Vysoká Libyně', 'Velká Skrovnice', 'Ostružno (Jičín District)', 'Dolní Rychnov', 'Drahoňův Újezd', 'Nespeky', 'Drahkov', 'Prusy-Boškůvky', 'Netřebice', 'Rudka', 'Dolní Libochová', 'Vysoké Pole', 'Božanov', 'Čechy pod Kosířem', 'Skřinářov', 'Zdislavice', 'Týček', 'Skrýchov u Malšic', 'Michálkovice', 'Sebuzín', 'Kamenný Malíkov', 'Popovičky', 'Úpice', 'Teplice nad Bečvou', 'Syřenov', 'Lhota u Olešnice', 'Mlékojedy', 'Horní Pěna', 'Rtyně v Podkrkonoší', 'Světí', 'Přešovice', 'Bochoř', 'Toušice', 'Podolsko Bridge', 'Brodek u Konice', 'Žleby', 'Kostelec nad Labem', 'Křížkový Újezdec', 'Otnice', 'Dalečín', 'Šumavské Hoštice', 'Dětenice', 'Klejnárka', 'Olbramkostel', 'Borovnice (Trutnov District)', 'Hradešice', 'Tři Studně', 'Petrovice u Karviné', 'Všeruby', 'Cheznovice', 'Blšany', 'Kostěnice', 'Bartošovice', 'Lipov', 'Cetoraz', 'Svárov', 'Střelná', 'Všeň', 'Bukovice', 'Brodec', 'Útěchovičky', 'Kaceřov', 'Jezdovice', 'Dřínov (Mělník District)', 'Křivoklát', 'Klokočná', 'Bylany', 'Lišany', 'Petrovice', 'Obora, Plzeň-North', 'Plužná', 'Kolešov', 'Velký Vřešťov', 'Oucmanice', 'Kateřinice', 'Janov nad Nisou', 'Panské Dubenky', 'Litenčice', 'Loučná nad Desnou', 'Bílichov', 'Strážiště (Mladá Boleslav District)', 'Dolní Těšice', 'Lom u Tachova', 'Láz (Příbram District)', 'Tichonice', 'Starý Mateřov', 'Skapce', 'Petrovice I', 'University of Ostrava', 'Běrunice', 'Dlouhý Újezd', 'Branišov', 'Ctiměřice', 'Roudnice nad Labem', 'Hořenice', 'Hostějov', 'Paseka', 'Dětský Island', 'Rosička', 'Horní Lhota', 'Tlustice', 'Vidonín', 'Chotutice', 'Stehlovice', 'Rájec', 'Zalešany', 'Vyskytná', 'Cehnice', 'Břeclav', 'Smrk', 'Rybniště', 'Nevolice', 'Čechočovice', 'Podůlší', 'Neuměř', 'Trstěnice', 'Nová Ves (Sokolov District)', 'Neubuz', 'Bítovčice', 'Netvořice', 'Jasenice', 'Cotkytle', 'Ratibořské Hory', 'Strýčice', 'Dolní Lutyně', 'Chuchelná', 'Zakřany', 'Smědčice', 'Chrastava', 'Dolní Pohleď', 'Krásný Dvůr Castle', 'Kunkovice', 'Čenkov', 'Klučov', 'Choťovice', 'Otov', 'Liptál', 'Orličky', 'Rychnov na Moravě', 'Prusinovice', 'Veletov', 'Koválovice-Osíčany', 'Šlapanov', 'Lichkov', 'Vyšehoří', 'Rohozec (Kutná Hora District)', 'Chlum Svaté Maří', 'Linhartice', 'Vacovice', 'Tvrdonice', 'Podůlšany', 'Zvěstov', 'Ježov', 'Cejle', 'Velim', 'Řídelov', 'Věž', 'Bílčice', 'Těchařovice', 'Tasov', 'Tučín', 'Zděchov', 'Zálužice', 'Kobylá nad Vidnavkou', 'Barchov', 'Jablonné v Podještědí', 'Libodřice', 'Otradov', 'Kunčina', 'Dobřenice', 'Sulíkov', 'Žlutava', 'Lomnice', 'Libkov', 'Staňkovice', 'Smrčná', 'Vratislávka', 'Bezměrov', 'Drahobudice', 'Čikov', 'Bítov Castle', 'Kulířov', 'Janovice', 'Miličín', 'Křivsoudov', 'Lázně Bělohrad', 'Pavlíkov', 'Vojtěchov', 'Prysk', 'Štítov', 'Trboušany', 'Střezetice', 'Pomezí', 'Měník', 'Dolní Domaslavice', 'Malečov', 'Krásensko', 'Hazlov', 'Lazy', 'Soběšice', 'Žďár nad Orlicí', 'Těšany', 'Nebřehovice', 'Peřimov', 'Bošilec', 'Hýskov', 'Zvole', 'Zaječice', 'Krhovice', 'Měkynec', 'Bystřice (Jičín District)', 'Cikháj', 'Hrubý Jeseník', 'Dobřany (Rychnov nad Kněžnou District)', 'Nesvačilka', 'Klobouky u Brna', 'Žernov', 'Horní Němčí', 'Cebiv', 'Horní Třešňovec', 'Budíškovice', 'Židovice (Jičín District)', 'Horní Libchava', 'Lysice', 'Veliká Ves', 'Bystrovany', 'Příkrý', 'Dolní Nivy', 'Slatinky', 'Hojsova Stráž', 'Nový Vestec', 'Vlkoš', 'Klášterec nad Orlicí', 'Ludvíkov', 'Rovná (Sokolov District)', 'Biskoupky', 'Bezděkov pod Třemšínem', 'Prosíčka', 'Mastník', 'Rodvínov', 'Znětínek', 'Odrovice', 'Tutleky', 'Přísnotice', 'Děkanovice', 'Krupá (Rakovník District)', 'Náměšť na Hané', 'Patokryje', 'Ivaň', 'Rádlo', 'Hronov', 'Písařov', 'Chotovice', 'Žďár', 'Leštinka', 'Morávka', 'Vrčeň', 'Nahořany (Náchod District)', 'Vysočina', 'Čečelice', 'Chotusice', 'Krakovany (Kolín District)', 'Academy of Performing Arts in Prague', 'Boharyně', 'Myslkovice', 'Jinín', 'Hlučín', 'Rožmitál na Šumavě', 'Lhota u Vsetína', 'Dobřeň', 'Vysoká u Příbramě', 'Nová Pláň', 'Hejtmánkovice', 'Traplice', 'Nemochovice', 'Rozstání', 'Běštín', 'Daňkovice', 'Perálec', 'Old Jewish Cemetery, Prague', 'Pozdeň', 'Vyžice', 'Budvar Arena', 'Kuřim', 'Město Touškov', 'Špičky', 'Kozlany', 'Vernířovice', 'Museum Kampa', 'Dešov', 'Sovětice', 'Zástřizly', 'Jersín', 'Loucká', 'Žižice', 'Dyje', 'Moutnice', 'Hradečno', 'Orlice', 'Opočno', 'Kyselovice', 'Kunětice Mountain Castle', 'Klec', 'Tálín', 'Kestřany', 'Lestkov', 'Slavhostice', 'Prodašice', 'Liberec Town Hall', 'Březůvky', 'Tisem', 'Bečva', 'Tolštejn Castle', 'Lelekovice', 'Dačice', 'Bukovany (Příbram District)', 'Modřišice', 'Rohov', 'Oslavice', 'Hlušice', 'Caslav Airport', 'Nelepeč-Žernůvka', 'Rudná pod Pradědem', 'Janské Lázně', 'Samotišky', 'Byšice', 'Kalhov', 'Veselíčko', 'Matrix Klub', 'Roudná', 'Velké Albrechtice', 'Ražice', 'Jestřebí', 'Švábov', 'Starosedlský Hrádek', 'Brno', 'Třemošnice', 'Velká Bíteš', 'Ostrovec', 'Roseč', 'Cholina', 'Hostín u Vojkovic', 'Hranice', 'Ponědraž', 'Mlékosrby', 'Hať', 'Libeň', 'Štěpánovice', 'Martínkovice', 'Velký Chlumec', 'Tochovice', 'Vižina', 'Kostelec nad Černými lesy', 'Šaplava', 'Arnoltice', 'Veselí nad Lužnicí', 'Choustník', 'Nové Dvory', 'Nevřeň', 'Tursko (Czech Republic)', 'Budětice', 'Lomnička', 'Věstín', 'Syrov', 'Bor', 'Čistá (Rakovník District)', 'Hrabůvka', 'Výšovice', 'Zlatníky-Hodkovice', 'Třanovice', 'Bečice', 'Libovice', 'Chrášťany (Rakovník District)', 'Úžice, Kutná Hora', 'Velké Hoštice', 'Nevcehle', 'Lučice', 'Kosmonosy', 'Milovice', 'Malá Morávka', 'Oslov', 'Dolní Řasnice', 'Vidochov', 'Dalovice (Karlovy Vary District)', 'Hoslovice', 'Neveklov', 'Ostrov u Bezdružic', 'Štíty', 'Hrušky', 'Dobrná', 'Suchá Loz', 'Semice', 'Pěčice', 'Trokavec', 'Hlohová', 'Velečín', 'Boskovice', 'Medlovice', 'Otročiněves', 'Pacov', 'Troskotovice', 'Slavětín', 'Cep', 'Hluchová', 'Výkleky', 'Kurovice', 'Skalička', 'Pňovice', 'Pravčice', 'Horní Podluží', 'Nečtiny', 'Litice nad Orlicí', 'Trhové Dušníky', 'Vracov', 'South Moravian Region', 'Bukovice (Náchod District)', 'Snovídky', 'Ostružná', 'Horní Poříčí', 'Lukavec u Hořic', 'Velká Chmelištná', 'Chřibská', 'Malovice', 'Třebíč District', 'Dědice', 'Čestlice', 'Horní Beřkovice', 'Bdeněves', 'Severovýchod', 'Hevlín', 'Zlobice', 'Tetov', 'Dobrovice', 'Lovčice', 'Ludíkov', 'Bílovice nad Svitavou', 'Fryštát', 'Staré Ždánice', 'Dolní Břežany', 'Chomutov', 'Dolní Sokolovec', 'Horní Žukov', 'Mladošovice', 'Mokré', 'Černčice (Náchod District)', 'Frahelž', 'Letkov', 'Hroznatín', 'Kosičky', 'Trhová Kamenice', 'Karviná', 'Opatovice nad Labem', 'University of Pardubice', 'Slabčice', 'Žabonosy', 'Topolna transmitter', 'Jedlová', 'Hvozdnice (Prague-West District)', 'Svatobořice-Mistřín', 'Mahouš', 'Borušov', 'Velká Jesenice', 'Doudleby', 'Ježovy', 'Nosislav', 'Veltruby', 'Višňové', 'Pochvalov', 'Tachov (Česká Lípa District)', 'Ořech', 'Svídnice (Rychnov nad Kněžnou District)', 'Kořenov', 'Ktiš', 'Sadská', 'Sadová', 'Nezdenice', 'Chabeřice', 'Modrá', 'Paršovice', 'Ptení', 'Lično', 'Sedletín', 'Sibřina', 'Návojná', 'Seč', 'Chrudim', 'Horní Jiřetín', 'Vamberk', 'Batelov', 'Dražíč', 'Prunéřov Power Station', 'Žirov', 'Lišnice', 'Havraníky', 'Slaná (Semily District)', 'Zlonín', 'Horní Kněžeklady', 'Myslibořice', 'Chrást (Příbram District)', 'Rodná', 'Stará Ves (Bruntál District)', 'Hrušová', 'Dolní Rožínka', 'Hodějice', 'Mikuleč', 'Sobíňov', 'Tupesy', 'Okřešice', 'Nebory', 'Mezná', 'Muglinov', 'Dolní Dubňany', 'Svatý Jan pod Skalou', 'Písečné', 'Mariánské Radčice', 'Toužim', 'Domašov nad Bystřicí', 'Hladké Životice', 'Hrabišín', 'Královice', 'Jevíčko', 'Vrbice (Rychnov nad Kněžnou District)', 'Březejc', 'Maurelle Island', 'Mlýnské Struhadlo', 'Sojovice', 'Prostřední Poříčí', 'Otovice (Karlovy Vary District)', 'Choťánky', 'Žabeň', 'Sousedovice', 'Vražkov', 'Knyk', 'Praha hlavní nádraží', 'Vevčice', 'Stupava', 'Horní Dubňany', 'Tchořovice', 'Grabštejn', 'Golden Angel', 'Prague 3', 'Říčany', 'Kojátky', 'Bradlec (Mladá Boleslav District)', 'Jičín', 'Bílý Újezd', 'Kolaje', 'Přední Výtoň', 'Lačnov', 'Stod', 'Jetřichov', 'Nedašova Lhota', 'Brno University of Technology', 'Potůčky', 'Pustá Rybná', 'Horní Bojanovice', 'Karlovy Vary Region', 'Sedliště', 'Koberovy', 'Děpoltovice', 'Bohuňovice', 'Moravany', 'Květov', 'Blažkov', 'Lodín', 'Hluk', 'Vinary', 'Žampach', 'Čenkov u Bechyně', 'Vsetín', 'Žerčice', 'Bojkovice', 'Třebešice', 'Trnávka', 'Konská', 'Jubilee Synagogue', 'Charváty', 'Radnice', 'Babice', 'Třebonín', 'Kočín', 'Milín', 'Brantice', 'Senice na Hané', 'Lkáň', 'Kozomín', 'Kojál radio transmitter', 'Namest Airport', 'Hrejkovice', 'Velký Luh', 'Vranová Lhota', 'Hřibojedy', 'Brozany nad Ohří', 'Měnín', 'Bušanovice', 'Horní Tošanovice', 'Bratronice (Kladno District)', 'Kojkovice', 'Blanice', 'Olší', 'Trnová (Prague-West District)', 'Náměšť nad Oslavou', 'Hojkov', 'Krasová', 'Stružná', 'Rovensko', 'Dobrá Voda u Pacova', 'Horka Domky', 'Vráž', 'Milotice nad Bečvou', 'Prague 22', 'Heřmanov', 'Divadlo na Fidlovačce', 'Vidice', 'Bítov (Nový Jičín District)', 'Tuř', 'Volenice', 'Dolní Brusnice', 'Bukovno', 'Olešnice (Semily District)', 'Křižanov', 'Pohorská Ves', 'Cerekvice nad Loučnou', 'Klácelka', 'Přepeře', 'Jakubovice', 'Slavětice', 'Bojanovice (Prague-West District)', 'Neděliště', 'Kraborovice', 'Halámky', 'Jestřabí Lhota', 'Špilberk Castle', 'Hrádek', 'Malá Skála', 'Zbůch', 'Všeradov', 'Hošťka', 'Malšice', 'Psáry', 'Moravské Budějovice', 'Boršice', 'Oznice', 'Pribram Airport', 'Vysoká nad Labem', 'Velké Bílovice', 'Lenora', 'Sobotka', 'Liběšice', 'Brankovice', 'Dobříč', 'Podmokly', 'Buková hora TV Tower', 'Lety', 'Opava', 'Vrbno nad Lesy', 'Javornice', 'Žehušice', 'Chotěbuz', 'Lednice–Valtice Cultural Landscape', 'Obytce', 'Kunín', 'Nedašov', 'Silesian Ostrava Castle', 'Šenov u Nového Jičína', 'Sedlice (Příbram District)', 'Bačalky', 'University of New York, Prague', 'Pustějov', 'Oslnovice', 'Košíře', 'Kunčičky', 'Velké Přítočno', 'Bukovina u Přelouče', 'Chomle', 'Útěchovice', 'Malotice', 'Šebestěnice', 'Honezovice', 'Lhoty u Potštejna', 'Děčany', 'Dolní Morava', 'Čejkovice (Kutná Hora District)', 'Klapý', 'Ropičanka', 'Rybníček', 'Přední Zborovice', 'Líté', 'Lidmaň', 'Kbel, Kolín', 'Velký Malahov', 'Ponědrážka', 'Tvarožná Lhota', 'Potštejn', 'Velká Hleďsebe', 'Czech Republic motorcycle Grand Prix', 'Bochov', 'Bruzovice', 'Praskolesy', 'Sviny', 'Hořovice Castle', 'Křišťanov', 'Kolinec', 'Rožmberk nad Vltavou', 'Hradiště', 'Budkov', 'Dolní Moravice', 'Nové Dvory (Kutná Hora District)', 'Zubčice', 'Závraty', 'Vlastec', 'Kořenice', 'Jinačovice', 'Kytlice', 'Litíč', 'Modlany', 'Bílé Poličany', 'Moravičany', 'Ostrožská Lhota', 'Rohatec', 'Bednárec', 'Dalovice', 'Poběžovice', 'Velichovky', 'Lhota pod Hořičkami', 'Hluboké Dvory', 'Radkova Lhota', 'Valašské Příkazy', 'Kutrovice', 'Poříčí nad Sázavou', 'Kruh', 'Lužce', 'Neprobylice', 'Oplot', 'Křižánky', 'Bušovice', 'Dvory nad Lužnicí', 'Ostrov (Příbram District)', 'Radostná pod Kozákovem', 'Kadaň', 'Turovec', 'Kbely Airport', 'Suchov', 'Přebuz', 'Hlubyně', 'Sudetenland', 'Prušánky', 'Vitějovice', 'Postoloprty', 'Jimramov', 'Křinice', 'Hlubočky', 'Telč', 'Deštné v Orlických horách', 'Ludgeřovice', 'Dolenice', 'Březová nad Svitavou', 'Rejvíz', 'Kváskovice', 'Hrabětice', 'Hřibiny-Ledská', 'Povrly', 'Libuň', 'Postřelmov', 'Svatý Jan nad Malší', 'Žlutice', 'Životice', 'Karpentná', 'Štichov', 'Maisel Synagogue', 'Vojslavice', 'Oldřišov', 'Dlažov', 'Vavřinec', 'Vráto', 'Skorkov', 'Vojkovice (Mělník District)', 'Prague 1', 'Křešice', 'Prague 7', 'Nemile', 'Čilá', 'Klamoš', 'Žebrák', 'Jablůnka', 'Bohuslávky', 'Valšov', 'Miřejovice', 'Kunemil', 'Stražisko', 'Pátek', 'Rudná', 'Honbice', 'Chrast', 'Kačlehy', 'Radkov', 'Pulečný', 'Řevničov', 'Žádovice', 'Ondřejov', 'Nová Říše', 'Rokytňany', 'Mimoň', 'Clementinum', 'Řepeč', 'Žinkovy', 'Žihobce', 'Nepomuk', 'Horní Počaply', 'Dudín', 'Homole u Panny', 'Nová Ves u Chýnova', 'Dražovice', 'Rožmberk Castle', 'Krňany', 'Semněvice', 'Měrovice nad Hanou', 'Jemnice', 'Church of Our Lady before Týn', 'Onšov', 'Spořice', 'Úhořilka', 'Sedlečko u Soběslavě', 'Volfartice', 'Svárov (Kladno District)', 'Stojice', 'Suchovršice', 'Okřínek', 'Třebešice (Kutná Hora District)', 'Buková', 'Chotěšov Abbey', 'Bílence', 'Hlohovčice', 'Levínská Olešnice', 'Svratka', 'Kostelní Lhota', 'Krupka', 'Nová Ves u Jarošova', 'Fulnek', 'Týnišťko', 'Nebílovy Castle', 'Rešice', 'Kobylnice (Mladá Boleslav District)', 'Obrnice', 'Úhřetická Lhota', 'Jeseník', 'Ohrazenice (Příbram District)', 'Louka u Litvínova', 'Krásná Hora', 'Ježená', 'Svatý Mikuláš', 'Chotoviny', 'Podomí', 'Senice', 'Milasín', 'Koruna', 'Skalka u Doks', 'Pozořice', 'Chlum u Třeboně', 'Káraný', 'Vraný', 'Hlasivo', 'Hraběšín', 'Vesce', 'Veselí nad Moravou', 'Butoves', 'Třeštice', 'Palacký University, Olomouc', 'Česká Čermná', 'Šaratice', 'Hamrštejn', 'Chornice', 'Němčičky', 'Pěčín', 'Suchý', 'Vysoké Veselí', 'Třeština', 'Plzeň Region', 'Šumice', 'Konětopy', 'Vracovice', 'Zdice', 'Psárov', 'Mašovice', 'Prague 12', 'Suchá Lhota', 'Předmíř', 'Kožichovice', 'Žichovice', 'Bohemian Paradise', 'Mezivrata', 'University of Veterinary and Pharmaceutical Sciences Brno', 'Dolní Újezd', 'Česká Skalice', 'Makov', 'Žďárec', 'Pokřikov', 'Špindlerův Mlýn', 'Široký Důl', 'Velká Štáhle', 'Nevězice', 'Vršovice', 'Smilovice (Rakovník District)', 'Podhradí', 'Měčín', 'Rančířov', 'Úboč', 'Suchohrdly u Miroslavi', 'Lažánky', 'Sulejovice', 'Třebosice', 'Kotenčice', 'Postřižín', 'Dědová', 'Čečelovice', 'Velký Valtinov', 'Spomyšl', 'Kosoř', 'Žáky', 'Sány', 'Vřeskovice', 'Benešovice', 'Bohunice', 'Modřovice', 'Bolešiny', 'Kotvrdovice', 'Jizerka', 'Zápy', 'Podmyče', 'Břevnov Monastery', 'Jamné', 'Kuroslepy', 'Svinčany', 'Těně', 'Nová Včelnice', 'Ostašov', 'Drhovice', 'Probulov', 'Štědrá', 'Smržice', 'Třešť', 'Dolany (Mělník District)', 'Zálší', 'Obora', 'Poustka (Cheb District)', 'Lampertice', 'Bransouze', 'Desná', 'Janovice nad Úhlavou', 'Líbeznice', 'Dolní Hbity', 'Zaječí', 'Kostomlaty pod Řípem', 'Ovesná Lhota', 'Černvír', 'Prosenická Lhota', 'Kunvald', 'Pětikozly', 'Předotice', 'Chýnov', 'Kokory', 'Kovanice', 'Šarovy', 'Libice nad Doubravou', 'Modrá Hůrka', 'Slapy', 'Buchlovice Castle', 'Dolní Kalná', 'Smržovka', 'Horní Police', 'Vysoká (Mělník District)', 'Krnov', 'Horní Radechová', 'Kbelany', 'Rožnov pod Radhoštěm', 'Pec', 'Roztoky u Jilemnice', 'Lysovice', 'Dolní Datyně', 'Pšov', 'Litobratřice', 'Luboměř', 'Kuchařovice', 'Katovice', 'Kamenné Zboží', 'Tisová', 'Řenče', 'Strašice', 'Zadní Zhořec', 'Býkov-Láryšov', 'Češov', 'Jánský vrch', 'Strenice', 'Dobromilice', 'Podivín', 'Hodonín', 'Líně', 'Kuničky', 'Kolešovice', 'Velatice', 'Černčice', 'Litošice', 'Dolní Podluží', 'Tomas Bata University in Zlín', 'Buková u Příbramě', 'Damnice', 'Dolní Kralovice', 'Hora Svaté Kateřiny', 'Řitonice', 'Žerotín', 'Česká', 'Čichalov', 'Únětice (Prague-West District)', 'Lípa nad Orlicí', 'Šunychl', 'Břasy', 'Mšené-lázně', 'Libějovice', 'Lednice', 'Úhlava', 'Kozojedy', 'Košťálov', 'Luhačovice', 'Kvítkovice', 'Zbrašín', 'Spojil', 'Holašovice', 'Lobeč', 'Líšný', 'Vrané nad Vltavou', 'Budeč', 'Hudlice', 'Kyje (Jičín District)', 'Radíkov', 'Nupaky', 'Černíkov', 'Horosedly', 'Habří', 'Lipová-lázně', 'Jívoví', 'Stará Voda (Cheb District)', 'Maňovice', 'Načeradec', 'Raná', 'Vojkovice', 'Honětice', 'Krásno', 'Pláně', 'Přestavlky u Čerčan', 'Ratenice', 'Valkeřice', 'Horšice', 'Kramolna', 'Bošovice', 'Staříč', 'Kostelany nad Moravou', 'Čakovičky', 'Buk', 'Třebenice', 'Domažlice', 'Davle', 'Rozvadov', 'Samšín', 'Pec pod Sněžkou', 'Kosova Hora', 'Tuchoraz', 'Nemyšl', 'Jedovnice', 'Veverské Knínice', 'Panenský Týnec', 'Hilton Prague', 'Kovač (Jičín District)', 'Lanžov', 'Kamenná Horka', 'Svojetín', 'Nesvačily', 'Kostelní Vydří', 'Rabí', 'Úvaly', 'Kejnice', 'Liteň', 'Dlouhá Lhota', 'Dolní Bělá', 'Černilov', 'Tišice', 'Nová Role', 'Čejč', 'Doubravice nad Svitavou', 'Příčina', 'Stránecká Zhoř', 'Okrouhlá Radouň', 'Nová Sídla', 'Skalice nad Svitavou', 'Horní Kruty', 'Tetín (Jičín District)', 'Úherce', 'Předhradí', 'Třesov', 'Soběslav', 'Mladeč', 'Hurtova Lhota', 'Omice', 'Radimovice u Tábora', 'Bašnice', 'Krty-Hradec', 'Nový Ples', 'Valy (Cheb District)', 'Holýšov', 'Ujkovice', 'Loučany', 'Darkov', 'Hvožďany', 'Bulovka', 'Smolotely', 'Čechy', 'Kotovice', 'Křišťanovice', 'Lichoceves', 'Dehtáře', 'Výprachtice', 'Litohoř', 'Karlín', 'Žarošice', 'Kvasiny', 'Borovnice', 'Valdštejn Castle', 'Radostín nad Oslavou', 'Chvatěruby', 'Dyjákovice', 'Uhy (Kladno District)', 'Bochovice', 'Halenkovice', 'Opatovice I', 'Benešov', 'Hrazany', 'Černava', 'Šťáhlavy', 'Sukorady', 'Hospříz', 'Hynčice', 'Tatobity', 'Stáj', 'Krásné', 'Česká Kamenice', 'Důl', 'Zvěrkovice', 'Oráčov', 'Klášter Hradiště nad Jizerou', 'Nová Cerekev', 'Kmetiněves', 'Velké Meziříčí', 'Horní Myslová', 'Rybníky (Příbram District)', 'Radětice (Příbram District)', 'Kněžice (Nymburk District)', 'Syrovice', 'Mileč', 'Byzhradec', 'Michle', 'Otěšice', 'Nový Rychnov', 'Litostrov', 'Hrčava', 'Kovářská', 'Horní Řasnice', 'Konecchlumí', 'Dlouhopolsko', 'Činěves', 'Hrabová', 'Bílá Hlína', 'Přibice', 'Hobšovice', 'Malíč', 'Brodek u Prostějova', 'Ludmírov', 'Jizerní Vtelno', 'Nový Knín', 'Nestrašovice', 'Úhošť', 'Jihozápad', 'Sulkovec', 'Hostouň', 'Srbeč', 'Třebíč', 'Rymice', 'Plenkovice', 'Proseč pod Křemešníkem', 'Řimovice', 'Tetčice', 'Bousín', 'Kunovice Airport', 'Brno–Tuřany Airport', "St. Barbara's Church, Kutná Hora", 'Dolní Benešov', 'Městečko (Rakovník District)', 'Nýrov', 'Stebno', 'Spytihněv', 'Kocbeře', 'Tvrdkov', 'Heršpice', 'Třebíz', 'Horní Olešnice', 'Mladkov', 'Veliš', 'Mikulov Castle', 'Jarov', 'Věžovatá Pláně', 'Borovany', 'Śląskie Kamienie', 'Kočí, Czech Republic', 'Těchlovice', 'Cerhovice', 'Dolní Chvatliny', 'Nekmíř', 'Mladějovice', 'Horní Slivno', 'Slavíkovice', 'Myštěves', 'Praha Masarykovo nádraží', 'Kdyně', 'Dukovany', 'Strážná', 'Ovesné Kladruby', 'Horka nad Moravou', 'Opařany', 'Paseky nad Jizerou', 'Milčice (Nymburk District)', 'Jaroměř', 'Střezimíř', 'Břežany (Rakovník District)', 'Býšť', 'Jakubov u Moravských Budějovic', 'Nový Přerov', 'Záhornice', 'Kyškovice', 'Bykoš', 'Příchovice', 'Volyňka', 'Rpety', 'Hlupín', 'Pokojov', 'Klenčí pod Čerchovem', 'Olbramov', 'Řípec', 'Bělčice', 'Třebešov', 'Vrhaveč', 'Nové Sedlo', 'Stonava', 'Lukavec', 'Tuchořice', 'Vrbka', 'Vysoká Pec', 'Osice', 'Klučenice', 'Bílý Potok', 'Hajnice', 'Horní Lideč', 'Radešín', 'Sudice', 'Tehov (Prague-East District)', 'Vydří', 'Neveklovice', 'Broumy', 'Panenská Rozsíčka', 'Drahov', 'Hamr', 'Čelčice', 'Luby', 'Kurovice Castle', 'Hlohovec', 'Čáslavsko', 'Stošíkovice na Louce', 'Uničov', 'Brněnec', 'Konárovice', 'Úherčice', 'Vítkovice (Semily District)', 'Čímice', 'Otvice', 'Ovčáry (Mělník District)', 'Blšany u Loun', 'Mcely', 'Bořetín', 'Štěpánov', 'Úhřetice', 'Český Rudolec', 'Žítková', 'Bukovinka', 'Příkazy', 'Hradčany', 'Koleč', 'Pustiměř', 'Liboměřice', 'Urbanov', 'Železnice', 'Černuc', 'Zubří', 'Borovno', 'Kněževes (Prague-West District)', 'Pernarec', 'Dasný', 'Zhoř', 'Velehrad', 'Chvalkovice (Náchod District)', 'Ctidružice', 'Hrušovany u Brna', 'Jaroslavice', 'Líšina', 'Homole', 'Ohaveč', 'Újezd u Přelouče', 'Štěpánov nad Svratkou', 'Krhov', 'Dobřejovice', 'Kašperské Hory', 'Ctiboř', 'Trosky Castle', 'Radonín', 'Cerekvička-Rosice', 'Chodov (Karlovy Vary District)', 'Újezd u Chocně', 'Jevany', 'Rohovládova Bělá', 'Dřevnovice', 'Ludkovice', 'All Czech municipalities J - M', 'Zastávka', 'Jistebnice', 'Crhov', 'Brandýsek', 'Valeč', 'Domoušice', 'Hlavenec', 'Předín', 'Myslív', 'Kratonohy', 'Martiněves', 'Radkovice u Hrotovic', 'Valašské Meziříčí', 'Jaroměřice nad Rokytnou', 'Kozolupy', 'Charles University in Prague', 'Třebsko', 'Libňatov', 'Březová (Karlovy Vary District)', 'Slovanka', 'Dolní Bezděkov', 'Bašť', 'Mírovka', 'Únětice', 'Lubná', 'Horka I', 'Grunta', 'Ševětín', 'Králický Sněžník', 'Velké Přílepy', 'Václavice', 'Nová Pec', 'Borovník', 'Proruby', 'Vražné', 'Sedlec-Prčice', 'Chyšky', 'Rapotice', 'Růžená', 'Dalešice', 'Podhradní Lhota', 'Hradec Kralove Airport', 'Grymov', 'Spa towns in the Czech Republic', 'Vokov', 'Božejov', 'Alojzov', 'Kaliště', 'Vatín', 'Škvorec', 'Mirotice', 'Vysokov', 'Stráž pod Ralskem', 'Babice nad Svitavou', 'Vepřová', 'Líšná', 'Stařeč', 'Bukovník', 'Karlova Koruna Chateau', 'Brtnička', 'Měňany', 'Hostan Arena', 'Kohoutov', 'Rebešovice', 'Bříství', 'Partutovice', 'Dolany', 'Žamberk', 'Dolní Heřmanice', 'Máslojedy', 'Bílovec', 'Lešetice', 'Želiv', 'Leskovice', 'Radovesnice I', 'Záchlumí', 'Obořiště', 'Bečváry', 'Nezdřev', 'Klokočov', 'Podolanka, Czech Republic', 'Deštná', 'Vimperk', 'Jasenice, Zadar County', 'Čankovice', 'Choryně', 'Příluka', 'Čachrov', 'Kostelany', 'Hořičky', 'Mířkov', 'Tupadly (Kutná Hora District)', 'Mladoňovice', 'Račice (Rakovník District)', 'Kovalovice', 'Milevsko', 'Čečovice', 'Habartice', 'Severozápad', 'Ciboušov', 'Křtomil', 'Šemnice', 'Nebužely', 'Metylovice', 'Záměl', 'Polánka', 'Brušperk', 'Slezské Rudoltice', 'Herálec', 'Pačejov', 'Prameny', 'Hory (Karlovy Vary District)', 'Veltěže', 'Běchary', 'Rodinov', 'Dvory (Nymburk District)', 'Orlické hory', 'Skvrňov', 'Hladová zeď', 'Malá Štáhle', 'Práče', 'Bořanovice', 'Kubšice', 'Trnava', 'Zábrdí', 'Roztoky (Rakovník District)', 'Pohled', 'Braškov', 'Údrnice', 'Buřenice', 'Všestudy', 'Píšť', 'Křelov-Břuchotín', 'Nelahozeves', 'Třebestovice', 'Sendražice', 'Nicov', 'Dražůvky', 'Krumsín', 'Velký Ratmírov', 'Čtyřkoly', 'Horní Líštná', 'Lovčičky', 'Mohelnice', 'Kojice', 'Sosnová', 'Pernštejnské Jestřabí', 'Zachrašťany', 'Provodín', 'Ždírec nad Doubravou', 'Dolní Loučky', 'Libkovice pod Řípem', 'Dolní Lažany', 'Libušín', 'Vlastiboř', 'Verušičky', 'Vysoký Újezd', 'Bobrůvka', 'Brťov-Jeneč', 'Cerekvice nad Bystřicí', 'Strážek', 'Úmonín', 'Polomí', 'Kamenice nad Lipou', 'Přívrat', 'Cetechovice', 'Mořice', 'Pašovice', 'Sněžné (Rychnov nad Kněžnou District)', 'Židlochovice', 'Dolní Třebonín', 'Moravská Nová Ves', 'Vodranty', 'Haluzice', 'Stará Paka', 'Záryby', 'Vranovice (Příbram District)', 'Písečná', 'Drnovice', 'Ledeč nad Sázavou', 'Skočice', 'Ivančice', 'German Charles-Ferdinand University', 'Vrábče', 'Pesvice', 'Kondrac', 'Dobré Pole', 'Kunratice u Cvikova', 'Křečovice', 'Lučany nad Nisou', 'Kluky', 'Horní Dubenky', 'Hladov', 'Dolní Roveň', 'Rochov', 'Dražičky', 'Březina (Jičín District)', 'Kladky', 'Střeň', 'Choteč', 'Vestec (Prague-West District)', 'Hamry', 'Klášter', 'Egerberk', 'Svatý Jan', 'Ronov nad Doubravou', 'Kamberk', 'Lety (Prague-West District)', 'Domašov', 'Kaničky', 'Stavěšice', 'Studený', 'Sobědruhy', 'Jiřetín pod Jedlovou', 'Třeboc', 'Zákolany', 'Chotovice (Česká Lípa District)', 'Lovosice', 'Radonice', 'Vrbičany', 'Jičín Airport', 'Chrášťany', 'Blazice', 'Jemníky', 'Stráž', 'Rudoltice', 'Bzenec', 'Slavičky', 'Světlá nad Sázavou', 'Cerhonice', 'Pečice', 'Teplá', 'Hamr na Jezeře', 'Hořany (Nymburk District)', 'Hrobčice', 'Orlová', 'Božetice', 'Javor', 'Trnové Pole', 'Hovorany', 'Svatá Maří', 'Nížkovice', 'Želivsko', 'Chrášťany (Prague-West District)', 'Vyskytná nad Jihlavou', 'Miletín', 'Nemíž', 'Okrouhlá (Česká Lípa District)', 'Volárna', 'Adršpach-Teplice Rocks', 'Kostelec u Holešova', 'Úštěk', 'Černěves', 'Karolín', 'Běhařovice', 'Adršpach', 'Chocomyšl', 'Horní Bečva', 'Pokojovice', 'Josefov', 'Bílá Třemešná', 'Luká', 'Felbabka', 'Hrušovany nad Jevišovkou', 'Kundratice', 'Chotěnov', 'Ústí', 'Sudoměřice u Bechyně', 'Letohrad', 'Zádveřice-Raková', 'Písek Gate', 'Žitenice', 'Leoš Janáček Airport Ostrava', 'Ústrašín', 'Libáň', 'Jarpice', 'Boudy', 'Račetice', 'Ústí nad Orlicí', 'Jirkov', 'Josefov (Sokolov District)', 'Bramberk', 'Oborná', 'Odunec', 'Vendryně', 'Chlumany', 'Červený Hrádek', 'Perná', 'Tovačov', 'Pravlov', 'Útušice', 'Šatov', 'Jevišovka', 'Ladná', 'Drahlín', 'Bílsko', 'Velké Karlovice', 'Žermanice', 'Senorady', 'Stráž nad Nežárkou', 'Abertamy', 'Habřina', 'Horní Branná', 'Stradouň', 'Tuchlovice', 'Evaň', 'Ublo', 'Strážné', 'Budětsko', 'Žalhostice', 'Prosenice', 'Český Krumlov', 'Třtice', 'Kladeruby nad Oslavou', 'Kožlany', 'Bechyně', 'Strunkovice nad Blanicí', 'Holín', 'Křekov', 'Radíkovice', 'Nemojov', 'Zvěřínek', 'Útvina', 'Bradlecká Lhota', 'Bělá pod Pradědem', 'Štarnov', 'Sukorady (Jičín District)', 'Šléglov', 'Újezd pod Troskami', 'Zdíkov', 'Lošany', 'Velký Rybník', 'Sokolov', 'Čejetice', 'Čerčany', 'Kunice', 'Láz', 'Předslav', 'Vejprnice', 'Czech and Slovak Federal Republic', 'Opočno Castle', 'Tuřany (Kladno District)', 'Skalná', 'Lesnice', 'Unín', 'Skalice (Hradec Králové District)', 'Čestice', 'Stéblová', 'Břežany II', 'Kostelní Hlavno', 'Dlouhá Třebová', 'Slavkov pod Hostýnem', 'Prosetín', 'Vejvanovice', 'Vidlatá Seč', 'Záluží', 'Bertramka', 'Nové Hamry', 'Štěpánkovice', 'Libotov', 'Kralice nad Oslavou', 'Lhotice', 'Týn nad Vltavou', 'Třeboň', 'Stružinec', 'Biřkov', 'Kožlí', 'Oslavany', 'Český Dub', 'Zahájí', 'Kelčany', 'Sulice, Czech Republic', 'Vodice', 'Hostýn', 'Korytná', 'Lužec nad Vltavou', 'Srnojedy', 'Bošín', 'Braňany', 'Kučerov', 'Krčmaň', 'Bezdružice', 'Helvíkovice', 'Milíčovice', 'Bukovina nad Labem', 'Tasovice', 'Ejpovice', 'Majdalena', 'Ostrata', 'Seninka', 'Očihov', 'Jezbořice', 'Křenek (Prague-East District)', 'Střelice', 'Pěčnov', 'Nová Ves v Horách', 'Kout na Šumavě', 'Příkosice', 'Lesní Hluboké', 'Tři Sekery', 'Klatovec', 'Hrob', 'Lubné', 'Hnojník', 'Žeranovice', 'Drahonín', 'Veselý Žďár', 'Vlkov (Náchod District)', 'Brdy', 'Chudčice', 'Salačova Lhota', 'Střítež nad Bečvou', 'Jablonné nad Orlicí', 'Radostice', 'Senožaty', 'Dřevěnice', 'Přerov', 'Albrechtice nad Orlicí', 'Nebílovy', 'Kojčice', 'Vidice (Kutná Hora District)', 'Karlova Ves (Rakovník District)', 'Slavkov u Brna', 'Býšovec', 'Jarcová', 'Nenačovice', 'Bušín', 'Maple Mountains', 'Stříbrná', 'Nemyčeves', 'Chlum', 'Všejany', 'Salaš', 'Falkenštejn Castle', 'Cvrčovice (Kladno District)', 'Olešenka', 'Kelníky', 'Třebušín', 'Lískovice', 'Mistřovice', 'Vyškovec', 'Třebovice', 'Šance Dam', 'Věžnice', 'Drábské světničky', 'Horní Brusnice', 'Zájezdec', 'Rodkov', 'Mrlínek', 'Šedivec', 'Supíkovice', 'Stará Voda (Hradec Králové District)', 'Černýšovice', 'Přehvozdí', 'Zhořec', 'Ježkovice', 'Kovářov', 'Myslinka', 'Spělkov', 'Šebkovice', 'Vrbice (Nymburk District)', 'Žabovřesky', 'Zlatá Olešnice', 'Semechnice', 'Mirovice', 'Vračovice-Orlov', 'Bácovice', 'Boňkov', 'Neplachov', 'Štáblovice', 'Metuje', 'Blatno', 'Čížkrajice', 'Chodovlice', 'Vémyslice', 'Libenice', 'Nevratice', 'Štítná nad Vláří-Popov', 'Bystřice pod Lopeníkem', 'Czech Silesia', 'Vševily', 'Žižkovo Pole', 'Nové Bránice', 'Štichovice', 'Milešov (Příbram District)', 'Ostrá (Nymburk District)', 'Roštění', 'Tři Dvory', 'Skalice', 'Svatoslav', 'Neuměřice', 'Carpathian Mountains', 'Rakůvka', 'Krásný Les', 'Chříč', 'Petrovice (Příbram District)', 'Krucemburk', 'Hřivínův Újezd', 'Pavlínov', 'Dyjákovičky', 'Příbram na Moravě', 'Loučka', 'Kasejovice', 'Náchod', 'Rotava', 'Čachovice', 'Topolany', 'Jakubčovice nad Odrou', 'Anglo-American College', 'Všechlapy', 'Hrusice', 'Hřivice', 'Chodská Lhota', 'Luštěnice', 'Slatinice', 'Petrůvka', 'Krásná Ves', 'Otrokovice', 'Srch', 'Pyšel', 'Zvánovice', 'Smilovice (Mladá Boleslav District)', 'Krty', 'Holetín', 'Domašov u Šternberka', 'Lazníky', 'Velké Opatovice', 'Rožďalovice', 'Chlistov', 'Křimov', 'Ješetice', 'Skuteč', 'Nová Ves (Mělník District)', 'Hrotovice', 'Nikolčice', 'Vír', 'Rokycany', 'Čistěves', 'Chářovice', 'Dyleň', 'Maršovice', 'Doubravník', 'Chotěbudice', 'Krouna', 'Písková Lhota', 'Rájec-Jestřebí', 'Nelešovice', 'Černolice', 'Drachkov', 'Sezemice (Mladá Boleslav District)', 'Unčín', 'Dasnice', 'Přední kout', 'Hněvín Castle', 'Stadice', 'Voděrady (Rychnov nad Kněžnou District)', 'Dolní Vilémovice', 'Králova Lhota (Rychnov nad Kněžnou District)', 'Šumbark', 'Kunčice', 'Malá Víska', 'Bravantice', 'Landštejn Castle', 'Bukvice (Jičín District)', 'Vítkov', 'Žeretice', 'Břehy', 'Slezská Ostrava', 'Opatov', 'Mutěnice', 'Czech University of Agriculture Prague', 'Vrbátky', 'Tuřice', 'Slatina (Kladno District)', 'Budíkovice', 'Osičky', 'Mochov', 'Poběžovice u Holic', 'Schořov', 'Potěhy', 'Krasíkov', 'Černožice', 'Valchov', 'Skořenice', 'Zahořany', 'Chudenice', 'Tuřany (Cheb District)', 'I. Czech Lawn Tennis Club', 'Strachujov', 'Cítov', 'Skalka', 'Mladotice', 'Šilheřovice', 'Tašov', 'České Libchavy', 'České Heřmanice', 'Kunžak', 'Palonín', 'Církvice (Kolín District)', 'Nedrahovice', 'Markvartovice', 'Hracholusky (Rakovník District)', 'Vlksice', 'Jarohněvice', 'Všekary', 'Vidče', 'Bousov', 'Lážovice', 'Kněževes', 'Krahulčí', 'Libějice', 'Křtiny', 'Týnec', 'Institute of Finance and Administration', 'Podivice', 'Dubno (Příbram District)', 'Ostravice', 'Hvožďany (Příbram District)', 'Strukov', 'Želenice (Kladno District)', 'Tismice', 'Podlesí (Příbram District)', 'Příseka', 'Radenice', 'Jetřichovice', 'Hošťálková', 'Boršov nad Vltavou', 'Třebějice', 'Dlouhá Lhota (Mladá Boleslav District)', 'Kuřimská Nová Ves', 'Velký Týnec', 'Dobruška', 'Hodkovice nad Mohelkou', 'Předboj', 'Česká Ves', 'Uhelná Příbram', 'Krakovec', 'Beroun', 'Košín', 'Horní Meziříčko', 'Rašovice', 'Polička', 'Kobeřice', 'Chlebičov', 'Nové Veselí', 'Skotnice', 'Rožná', 'Trhový Štěpánov', 'Žďár nad Metují', 'Chromeč', 'Luleč', 'Frymburk', 'Mořinka', 'Spálené Poříčí', 'Dunajovice', 'Pravy', 'Vysoké nad Jizerou', 'Kostelec na Hané', 'Býčkovice', 'Kunčice nad Labem', 'Medlice', 'Bezuchov', 'Čachotín', 'Dobříš', 'Dolní Vilímeč', 'Valdíkov', 'Kačice', 'Oprostovice', 'Bujesily', 'Lužnice', 'Skrbeň', 'Klobuky', 'Pohleď', 'Zdětín', 'Prague 2', 'Poděšín', 'České Lhotice', 'Škoda Auto University', 'Líšnice (Prague-West District)', 'Smilovy Hory', 'Milý', 'Bohumín', 'Slapsko', 'Chýstovice', 'Sviadnov', 'Chotiněves', 'Ločenice', 'Přimda', 'Milešín', 'Horní Kamenice', 'Počaply (Příbram District)', 'Zubrnice', 'Nová Ves (Rychnov nad Kněžnou District)', 'Horní Vltavice', 'Pěnčín (Jablonec nad Nisou District)', 'Komárno', 'Sudoměř (Mladá Boleslav District)', 'Studánka', 'Tyrka', 'Tišnov', 'Žďárná', 'Sluhy', 'Zlatá', 'Libochovičky', 'Přívětice', 'Droužetice', 'Pašinka', 'Jehnědí', 'Pohoří (Prague-West District)', 'Kytín', 'Přestavlky', 'Uherské Hradiště', 'Hynčina', 'Trotina', 'Liboš', 'Bernartice', 'Svobodné Heřmanice', 'Pištín', 'Petkovy', 'Slopné', 'Nadějov', 'Blížejov', 'Dolní Tošanovice', 'Dobrochov', 'Bolehošť', 'Hájek (Karlovy Vary District)', 'Skoronice', 'Trubská', 'North Bohemia', 'Smilovice', 'Polní Voděrady', 'Koclířov', 'Sepekov', 'Mutěnín', 'Humpolec', 'Světec', 'Stříbrné Hory', 'Moravian-Silesian Region', 'Česká Kubice', 'Velešín', 'Hořešovičky', 'Tatce', 'Buš (Prague-West District)', 'Zavlekov', 'Březová-Oleško', 'Smečno', 'Křičeň', 'Albrechtice v Jizerských horách', 'Pertoltice', 'Drysice', 'Straškov-Vodochody', 'Sejřek', 'Dřevohostice', 'Únějovice', 'Svojkovice', 'Javorník', 'Trojanovice', 'Petrov', 'Odolena Voda', 'Nové Heřminovy', 'Zaloňov', 'Church of Saint Maurice', 'Kařez', 'Doubravička', 'Prlov', 'Býchory', 'Zabrušany', 'Chlumec', 'Bezděz Castle', 'Letňany', 'Olbramice', 'Ohrobec', 'Řeřichy', 'Stašov', 'Rohozná', 'Lavičné', 'Nasavrky', 'Lhota (Kladno District)', 'Sudoměřice u Tábora', 'Libotenice', 'Loučim', 'Chyňava', 'Staré Hradiště', 'Prague 14', 'Čermná', 'Milavče', 'Dříteň', 'Vápenná', 'Jabloňany', 'Lhota u Lysic', 'Nusle', 'Vojníkov', 'Borovina', 'Velké Kunětice', 'Měrunice', 'Holčovice', 'Troubky-Zdislavice', 'Ostrovec-Lhotka', 'Stařechovice', 'Martínkov', 'Obříství', 'Ostrov nad Oslavou', 'Jílové u Držkova', 'Kuňovice', 'Cheb', 'Svinošice', 'Měšín', 'Dolní Čermná', 'Ostředek', 'Lesonice', 'Vlčková', 'Nový Šaldorf-Sedlešovice', 'Násedlovice', 'RKS Liblice 2', 'Neustupov', 'Klínovec', 'Pila (Karlovy Vary District)', 'Rohatsko', 'Staré Bříště', 'Štětkovice', 'Březské', 'Pečky', 'Chodov', 'Černiv', 'Church of Our Lady Victorious', 'Hradec', 'Velké Žernoseky', 'Polná', 'Starkoč (Kutná Hora District)', 'Ruda (Rakovník District)', 'Benešov nad Ploučnicí', 'Chudíř', 'Horka u Staré Paky', 'Křižínkov', 'Vrbno pod Pradědem', 'Malá Vrbka', 'Jihlávka', 'Úlice', 'Horní Moštěnice', 'Vysoké Studnice', 'Hlinná', 'Vanovice', 'Smržov', 'Třebětín', 'Chaloupky', 'Bavory', 'Český Jiřetín', 'Hybrálec', 'Xaverov', 'Želešice', 'Veliká Ves (Prague-East District)', 'Oselce', 'Svojetice', 'Struhařov', 'Horní Nětčice', 'Masojedy', 'Valtice', 'Štěchov', 'Chotětov', 'Kozlov', 'Včelákov', 'Loreta', 'Třebařov', 'Chlumčany', 'Rostoklaty', 'Přibyslavice', 'Valašská Bystřice', 'Velké Němčice', 'Bohdíkov', 'Horní Loučky', 'Horní Cerekev', 'Velešovice', 'Kochánky', 'Červená Lhota', 'Horušice', 'Hořepník', 'Syrovín', 'Smilkov', 'Žiželice', 'Němčovice', 'Libel (Rychnov nad Kněžnou District)', 'Libišany', 'Staňkovice (Kutná Hora District)', 'Strahovice', 'Andělská Hora', 'Theresienstadt concentration camp', 'Nový Bydžov', 'Zámrsk', 'Pohoří (Rychnov nad Kněžnou District)', 'Troubelice', 'Vřesová', 'Suchomasty', 'Žernovice', 'Milostín', 'Děkov', 'Rouchovany', 'Hradec Králové', 'Nový Jimramov', 'Vysoké Popovice', 'Rakovice', 'Domeček', 'Archlebov', 'Hlavňovice', 'Vlastiboř (Jablonec nad Nisou District)', 'Nivnice', 'Osoblaha', 'Dolní Poustevna', 'Velké Chvojno', 'Strání', 'Nový Bor', 'Blešno', 'Dobročkovice', 'Valašská Polanka', 'Stanislavice', 'Soběnov', 'Bohatice (Česká Lípa District)', 'Snědovice', 'Branžež', 'Potštát', 'Břežany', 'Podveky', 'Chlum-Korouhvice', 'Vrážné', 'Pyšely', 'Rybná nad Zdobnicí', 'Frýdlant nad Ostravicí', 'Petrohrad', 'Hrušovany', 'Rohy', 'Masaryk Circuit', 'Jesenice (Příbram District)', 'Bohutín (Příbram District)', 'Palace Moravia', 'Horní Město', 'Vrchovany', 'Kateřinky', 'Chotěboř', 'Paseky', 'Vigantice', 'Bojanovice', 'Újezd u Svatého Kříže', 'Mysletín', 'Šubířov', 'Dolánky nad Ohří', 'Hrušov', 'Věrovany', 'Myslovice', 'Přerov nad Labem', 'Říp Mountain', 'Rajhradice', 'Bystré (Rychnov nad Kněžnou District)', 'Staré Buky', 'Staré Hamry', 'Klenová', 'Rousínov', 'Mařenice', 'Sendraž', 'Zbizuby', 'Moldava', 'Baťa Canal', 'Přezletice', 'Velké Hydčice', 'Podluhy', 'Nový Malín', 'Kařízek', 'Petráveč', 'Nový Jáchymov', 'Chvalšiny', 'Stříbřec', 'Okrouhlice', 'Liblín', 'Březina', 'Prostějov', 'Holotín', 'Žilov', 'Bubovice', 'Ratíškovice', 'Křenovy', 'Běšiny', 'Záhoří', 'Krasonice', 'Tomice', 'Řícmanice', 'Dlouhá Loučka', 'Březnice', 'Zadní Vydří', 'Kokořín', 'Jeřice', 'Mokrosuky', 'Teplice nad Metují', 'Doubice', 'Chomýž', 'Slatina nad Úpou', 'Konice', 'Protivanov', 'Třemošná', 'Bohdalín', 'Lipec', 'Moravské Knínice', 'Chlumy', 'Olešník', 'Velké Hamry', 'Míšov', 'Horní Planá', 'Dešná', 'Štěnovice', 'Přehýšov', 'Trojovice', 'Slunečná', 'Žacléř', 'Zlukov', 'Loukov (Mladá Boleslav District)', 'Holešov', 'Rašovice (Kutná Hora District)', 'Citice', 'National Technical Museum', 'Kozojídky', 'Pětipsy', 'Kozárov', 'Prague Aviation Museum, Kbely', 'Mnichovo Hradiste Airport', 'Mezno', 'Vítějeves', 'Nová Paka', 'Staré Hrady', 'Kájov', 'Rozkoš', 'Uherský Brod', 'Haňovice', 'Autodrom Most', 'Roudno', 'Mikulůvka', 'Brandýs nad Labem-Stará Boleslav', 'Kanina', 'Petrovice (Hradec Králové District)', 'Jivno', 'Řemíčov', 'Skřípov', 'Hluchov', 'Čeminy', 'Velká nad Veličkou', 'Bratrušov', 'Skorošice', 'Hulice', 'Žalany', 'Pravonín', 'Sobčice', 'Kbelnice, Jičín', 'Bitozeves', 'Svatojanský Újezd', 'Svojšín', 'Skomelno', 'Suchý Důl', 'Huntířov', 'Zemětice', 'Klabava', 'Husí Lhota', 'Jordán Pond', 'Bečov nad Teplou', 'Smrček', 'Dolní Pěna', 'Tvrzice', 'Rozsochatec', 'Výškov', 'Lišov', 'Vlachovo Březí', 'Miloňovice', 'Jedousov', 'Mělník', 'Pilsen', 'Sychrov', 'Osek', 'Újezd u Brna', 'Oskava', 'Bocanovice', 'Ostrava', 'Psáře', 'Blížkovice', 'Jívová', 'Dražice', 'Suchohrdly', 'Býčí skála Cave', 'Šlapanice', 'Jeneč', 'Těrlicko', 'Ohníč', 'Hořiněves', 'Church of Saints Cyril and Methodius', 'Neratovice', 'Šardice', 'Dolní Chabry', 'Dobrá', 'Čerťák', 'Brníčko', 'Malčín', 'Drunče', 'Plesná', 'Rybitví', 'Březolupy', 'Úsuší', 'Kunratice', 'Malé Březno', 'Zbožíčko', 'Kozojedy (Prague-East District)', 'Tržek', 'Drahotín', 'Niměřice', 'Vysílač Krašov', 'Staré Heřminovy', 'Rochlov', 'Obědkovice', 'Štipoklasy', 'Bratčice (Kutná Hora District)', 'Havlíčkova Borová', 'Hostinné', 'Kynšperk nad Ohří', 'Deblín', 'Pustověty', 'Hředle', 'Radobýl', 'Úmyslovice', 'Zruč nad Sázavou', 'Podlešín', 'Veselí', 'Velké Janovice', 'Plchov', 'Horní Lomná', 'Křeč', 'Uhelná', 'Chmelná', 'Sedliště (Jičín District)', 'Mnichovice', 'Chomutice', 'Velký Třebešov', 'Hluboké', 'Chleby', 'Morašice', 'Kuželov', 'Valdice', 'Mikulášovice', 'Hrubý Jeseník (Nymburk District)', 'Trubín', 'Hoštice-Heroltice', 'Malá Bystřice', 'Chraštice', 'Sobkovice', 'Mříčná', 'Drásov (Příbram District)', 'Metropolitan University Prague', 'Kokašice', 'Sopřeč', 'Dub nad Moravou', 'Služátky', 'Zběšičky', 'Olešnice', 'Světice', 'Čižice', 'Nebovidy', 'Střížov', 'Sopotnice', 'Zámrsky', 'Kašnice', 'Loučky', 'Korolupy', 'Stvolová', 'Vrbice (Jičín District)', 'Černíky', 'Hvozdec', 'Dolní Dvořiště', 'Hodětín', 'Vranov nad Dyjí', 'Moravský Krumlov', 'Nítkovice', 'Choratice', 'Prague 8', 'Dolní Marklovice', 'Stanovice', 'Police', 'Koberovice', 'Bohuslavice u Zlína', 'University of International and Public Relations Prague', 'Vinec, Czech Republic', 'Vědomice', 'Pražmo', 'Třebívlice', 'Věžná', 'Židovice', 'Tučapy', 'Neumětely', 'Soběšín', 'Kročehlavy', 'Prague 13', 'Prasek', 'Kněždub', 'Semily', 'Katov', 'Jezernice, Czech Republic', 'Čelechovice na Hané', 'Dívčice', 'Dubenec', 'Lčovice', 'Tištín', 'Černá u Bohdanče', 'Rakovník', 'Mutkov', 'Obyčtov', 'Cholenice', 'Čakov', 'Březová', 'Rabakov', 'Slavětín nad Metují', 'Lipno Dam', 'Peč', 'Strachoňovice', 'Oseček', 'Krásná Hora nad Vltavou', 'Habrovany', 'Číchov', 'Stołowe Mountains', 'Malonty', 'Skorkov (Mladá Boleslav District)', 'Vitice', 'Boršice u Blatnice', 'Měšice', 'Hazmburk', 'Všechovice', 'Libavské Údolí', 'Horní Maršov', 'Lánov', 'Nové Město pod Smrkem', 'Putimov', 'Děhylov', 'Obrubce', 'Čeperka', 'Neratov', 'Kvilda', 'Kačina', 'Rtyně nad Bílinou', 'Úvalno', 'Vrchoslavice', 'Rajhrad', 'Tišnovská Nová Ves', 'Družec', 'Adamov', 'Stanovice (Karlovy Vary District)', 'Černá Voda', 'Říkov', 'Trpín', 'Komorovice', 'Velké Pavlovice', 'Okříšky', 'Sobíšky', 'Rybník', 'Volduchy', 'Jindřichovice (Sokolov District)', 'Velký Beranov', 'Omlenice', 'Předměřice nad Labem', 'Mosty u Českého Těšína', 'Ledvice', 'Chožov', 'Libníkovice', 'Číčovice', 'Vlkaneč', 'Nová Buková', 'Světlá Hora', 'Držkov', 'Černouček', 'Mokrá-Horákov', 'Nový Telečkov', 'Žákovice', 'Lnáře', 'Janová', 'Hluboš', 'Brniště', 'Roudné', 'Jickovice', 'Tavíkovice', 'Chrustenice', 'Mišovice', 'Mělčany', 'Pivkovice', 'Řídeč', 'Jedomělice', 'Ondřejov Observatory', 'Lešná', 'Kejžlice', 'Lubnice', 'Náprstek Museum', 'Kostelní Myslová', 'Přestanov', 'Nošovice', 'Synalov', 'Arnolec', 'Hotel Crowne Plaza Prague', 'Staré Křečany', 'Česká Rybná', 'Broumov Airport', 'Mirošovice', 'Vápenice', 'Močovice', 'Čečkovice', 'Nová Ves pod Pleší', 'Jenišovice (Jablonec nad Nisou District)', 'Nemyslovice', 'Králova Lhota', 'Býkovice', 'Dolní Bousov', 'Kobylí', 'Bordovice', 'Soutice', 'Jesenice (Prague-West District)', 'Rumburk', 'Beňov', 'Řehlovice', 'Tuklaty', 'Kojetín', 'Hrubá Skála', 'Rapšach', 'Červenka', 'Hýsly', 'Hořesedly', 'Kubova Huť', 'Soběkury', 'Kouřim', 'Dolní Dunajovice', 'Lochenice', 'University of South Bohemia České Budějovice, main campus', 'Šetějovice', 'Chotilsko', 'Jiřice u Miroslavi', 'Hornosín', 'Rudice', 'Central Moravia', 'Smolné Pece', 'Vlčeves', 'Zbilidy', 'Cetkovice', 'Ostrovačice', 'Janůvky', 'Heraltice', 'Javůrek', 'Vranovice-Kelčice', 'Lomec', 'Jalubí', 'Korouhev', 'All Czech municipalities A - I', 'A&W Business School, Prague', 'Plazy', 'Slavkov Castle', 'Nimpšov', 'Horní Věstonice', 'Brtnice', 'Rohoznice', 'Radimovice u Želče', 'Zderaz', 'Litvínovice', 'Přibyslav (Náchod District)', 'Svébohov', 'Tovéř', 'Sloup', 'Vyšehořovice', 'Dolní Dvůr', 'Skuhrov', 'Kublov', 'Třebusice', 'Milonice', 'Brno International Business School', 'Čeradice', 'Nebahovy', 'Hostivice', 'Přísečná', 'Rozseč', 'Roudnice', 'Nový Dům', 'Lipová', 'Kyšice (Kladno District)', 'Bukovina', 'Osová Bítýška', 'Senička', 'Prosečné', 'Vokovice', 'Kounov (Rychnov nad Kněžnou District)', 'NUTS Moravskoslezsko', 'Prague 6', 'Šebetov', 'Nová Ves u Nového Města na Moravě', 'Nové Město nad Metují', 'Horní Bludovice', 'Těchonín', 'Zahnašovice', 'Volary', 'Úsilné', 'Čerňovice', 'Kadov', 'Olšany u Prostějova', 'Teplýšovice', 'Kňovice', 'Hrubčice', 'Vinařice (Mladá Boleslav District)', 'Čelechovice', 'Vidim, Czech Republic', 'Staré Sedliště', 'Příčovy', 'Sýkořice', 'Zvěrotice', 'Košice (Kutná Hora District)', 'Mezilesí', 'Kladníky', 'Skřipel', 'Malšín', 'Hlubočany', 'Černov', 'Borkovany', 'Černíkovice', 'Ochoz u Brna', 'Hradce', 'Lišice', 'Libchavy', 'Křešín (Příbram District)', 'Podbřezí', 'Damníkov', 'Mladý Smolivec', 'Lhota Rapotina', 'Puklice', 'Vrahovice', 'Miskovice', 'Velké Popovice', 'Tmaň', 'Vilantice', 'Plumlov', 'Zbytiny', 'Malé Svatoňovice', 'Zbenice', 'Osvračín', 'Lazníčky', 'Viničné Šumice', 'Černín', 'Strážov', 'Dobrčice', 'Moravskoslezský Kočov', 'Čistá u Horek', 'Kostelec nad Vltavou', 'Průhonice', 'Bartoušov', 'Bartošovice v Orlických horách', 'Kujavy', 'Vilémovice', 'Mníšek pod Brdy', 'Sedloňov', 'Pchery', 'Želenice', 'Nová Ves u Světlé', 'Hněvnice', 'Kryry', 'Kladno', 'Dolní Němčí', 'Vartnov', 'Radvanice', 'Jeseník nad Odrou', 'Zahrádky', 'Valeč (Karlovy Vary District)', 'Sloup v Čechách', 'Bořenovice', 'Svibice', 'Dobřichov', 'Proseč', 'Rovná', 'Razová', 'Třibřichy', 'České Petrovice', 'Hojovice', 'Chlístov (Rychnov nad Kněžnou District)', 'Dynín', 'Ostřetice', 'Výžerky', 'Střevač', 'Bynovec', 'Ústí nad Labem Region', 'Rohenice', 'Dřešín', 'Kamenný Újezd', 'Mratín', 'Bohdalec', 'Trusnov', 'Moravský Písek', 'Ondratice', 'Přílepy', 'Pržno', 'Opolany', 'Mnichov (Cheb District)', 'Verneřice', 'Kyselka', 'Malše', 'All Czech municipalities S - Ž', 'Slatina', 'Dubné', 'Bechlín', 'Horní Stropnice', 'Konstantinovy Lázně', 'Nedvězí', 'Dřenice', 'Zliv', 'Páleč', 'Ostrovánky', 'Ohaře', 'Řisuty', 'Kochánov', 'Jitkov', 'Mariánské Lázně', 'Radešínská Svratka', 'Hořovičky', 'Broumov', 'Blažim', 'Vohančice', 'Město Albrechtice', 'Pačlavice', 'Technical University of Ostrava', 'Horní Bradlo', 'Slušovice', 'Olešnice (Rychnov nad Kněžnou District)', 'Lukavice (Rychnov nad Kněžnou District)', 'Martinov', 'Ještěd-Kozákov Ridge', 'Suchdol (Kutná Hora District)', 'Radovesnice II', 'Plandry', 'Kladruby', 'Potvorov', 'Dubenec (Příbram District)', 'Hruška', 'Přeskače', 'Černá v Pošumaví', 'Horčápsko', 'Vidov', 'Peruc', 'Domamil', 'Žabčice', 'Lesná', 'Žalkovice', 'Staré Město', 'Zbraslav', 'Lochousice', 'Kanice', 'Leskovec', 'Hroznětín', 'Martinice', 'Štěměchy', 'Daleké Dušníky', 'Raspenava', 'Nová Ves nad Lužnicí', 'Srby', 'Moravské Bránice', 'Svitava', 'Hostěradice', 'Bezděkov', 'Pardubice Airport', 'Dolní Olešnice', 'Dřetovice', 'Brodek u Přerova', 'Únanov', 'Všetaty (Rakovník District)', 'Jenštejn', 'Kamenec', 'Řídký', 'Buzice', 'Dražeň', 'Pohnání', 'Nová Ves', 'Bohuslavice nad Vláří', 'Zaječov', 'Skopytce', 'Osík', 'Hojanovice', 'Vchynice', 'Stožice', 'Želeč', 'Střížovice', 'Chuchelna', 'Vřesovice', 'Lazinov', 'Rudimov', 'Řečice', 'Grešlové Mýto', 'Český Těšín', 'Libětice', 'Měcholupy', 'Nusle Bridge', 'Kraslice', 'Morkůvky', 'Mohelnice nad Jizerou', 'Zlončice', 'Kralupy nad Vltavou', 'Horní Dvořiště', 'Vysoká Pec (Karlovy Vary District)', 'Hromnice', 'Osov', 'Malhostovice', 'Hrobce', 'Vršce', 'Zářecká Lhota', 'Cidlina', 'Třebohostice', 'Turkovice', 'Holubov', 'Křepenice', 'Horní Rožínka', 'Ubušínek', 'Braníškov', 'Horní Skrýchov', 'Kočov', 'Kutná Hora', 'Krásná Lípa', 'Novosedly nad Nežárkou', 'Krumvíř', 'Zimní stadion Karlovy Vary', 'Časy', 'Vrbová Lhota', 'Pamětice', 'Újezd u Tišnova', 'Bílý Kámen', 'Šimanov', 'Vepříkov', 'Konopiště', 'Lesůňky', 'Třebotov', 'Rudolec', 'Malíkov', 'Ohnišťany', 'Drahany', 'Podsedice', 'Kluky (Kutná Hora District)', 'Boží Dar', 'Ctiněves', 'Džbánice', 'Nadějkov', 'Luže', 'Fryšava pod Žákovou horou', 'Malhotice', 'Jindřichov', 'Morávka Dam', 'Veselá', 'Libouchec', 'Senomaty', 'Lány', 'Přepeře (Semily District)', 'Nevojice', 'Blevice', 'Nebanice', 'Vítonice', 'Praskačka', 'Chotěšice', 'Hlušovice', 'Mladějov na Moravě', 'Štramberk', 'Zbuzany', 'Přídolí', 'Svídnice', 'Veleň', 'Bratkovice', 'Sedlnice', 'Nenkovice', 'Bělkovice-Lašťany', 'Skřečoň', 'Lipová (Cheb District)', 'Poleň', 'Osečany', 'Mořkov', 'Silůvky', 'Nedvědice', 'Odřepsy', 'Kopřivnice', 'Loužnice', 'Šumperk', 'Loukov', 'Zašovice', 'Chotěšov', 'Byšičky', 'Dolní Lochov', 'Libice nad Cidlinou', 'Temešvár', 'Okřesaneč', 'Šebířov', 'Švábenice', 'Vílanec', 'Dětřichov u Moravské Třebové', 'Staré Hobzí', 'Polešovice', 'Orlické Podhůří', 'Suchá', 'Semín', 'Moravian Gate', 'Petřvald', 'Včelnička', 'Sloupno', 'Luková', 'Čebín', 'Hřensko', 'Horní Hoštice', 'Žlebské Chvalovice', 'Kraselov', 'Loštice', 'Ralsko', 'Příčina (Rakovník District)', 'Zvoleněves', 'Březina (Mladá Boleslav District)', 'Mojné', 'Blatec', 'Polom', 'Popůvky', 'Sběř', 'Vitín', 'Týn nad Bečvou', 'Počepice', 'Libín', 'Chrastavec', 'Vlkovice (Cheb District)', 'Růžová', 'Prachovice', 'Rajnochovice', 'Zásmuky', 'Vejvanov', 'Sazená', 'Vyskeř', 'Horní Studénky', 'Libochovice', 'Bojanov', 'Nový Dvůr (Nymburk District)', 'Zábrodí', 'Malešovice', 'Chotíkov', 'Kostelec', 'Dobrkovice', 'Pustá Kamenice', 'Rakvice', 'Čáslavice', 'Slezská Harta Dam', 'Plchovice', 'Veleslavín', 'Slaník', 'Ponětovice', 'Choltice', 'Šelešovice', 'Unkovice', 'Hrobice', 'Albrechtice', 'Radhostice', 'Pavlovice u Kojetína', 'Znojmo', 'Málkov', 'Kounov (Rakovník District)', 'Loučovice', 'Herink', 'Norberčany', 'Loukovice', 'Šárovcova Lhota', 'Milešovka', 'Vrbčany', 'Mokrý Lom', 'Lenešice', 'Němčice nad Hanou', 'Olbramovice', 'Nová Bystřice', 'Oleška', 'Bukovina u Čisté', 'Těmice', 'Dobřínsko', 'Horky (Kutná Hora District)', 'Zvotoky', 'Dlouhá Lhota (Příbram District)', 'Žatčany', 'Číhalín', 'Houska Castle', 'Deer Park Žehušice', 'Lštění', 'Třebihošť', 'Květinov', 'Chlumín', 'Křesetice', 'Svojanov', 'Kopřivná', 'Osiky', 'Ptice', 'Obruby', 'Holubice', 'Košařiska', 'Vyšní Lhoty', 'Lomnice (Sokolov District)', 'Kamenná', 'Kojetice', 'Litomyšl', 'Račice, Czech Republic', 'Lhotka u Radnic', 'Babylon', 'Vísky', 'Mezihoří', 'Brambory', 'Veverská Bítýška', 'Vratimov', 'Buštěhrad', 'Častohostice', 'Bednáreček', 'Machová', 'Němčice (Kolín District)', 'Cítoliby', 'Chelčice', 'Želkovice', 'Bílovice', 'Želechovice', 'Bílina', 'Želnava', 'Bukovany', 'Mnichovo Hradiště', 'Konojedy', 'Mlýny', 'Cetyně', 'Letiny', 'Podmoklany', 'Borač', 'Bruntál', 'Bakov nad Jizerou', 'Božičany', 'Vinohrady', 'Liptaň', 'Nezvěstice', 'Malenice', 'Hora Svatého Šebestiána', 'Štěkeň', 'Vrbovec', 'Úněšov', 'Zbelítov', 'Hvězdonice', 'Neurazy', 'Horní Kozolupy', 'Tiffin University Prague', 'Vinaře', 'Jesenice', 'Úholičky', 'Votice', 'Dolní Krupá', 'Zbýšov', 'Kokořín Castle', 'Všemyslice', 'Chraberce', 'Tatenice', 'Sněžné', 'Labuty', 'Kozly (Česká Lípa District)', 'Ždánov', 'Trpísty', 'Koštice', 'Okrouhlá (Cheb District)', 'Chřenovice', 'Otmíče', 'Statenice', 'Svéradice', 'Kratušín', 'Vrančice', 'Brňany', 'Hvězdlice', 'Baška', 'Modřice', 'Převýšov', 'Dublovice', 'Chleny', 'Kozlovice', 'Libchyně', 'Tečovice', 'Vítanov', 'Klenovice na Hané', 'Pernštejn Castle', 'Křtěnov', 'Nová Ves u Leštiny', 'Olomouc Synagogue', 'Janáček Academy of Music and Performing Arts', 'Statutory city', 'Dunice', 'Oskořínek', 'Tísek', 'Loket', 'Nákří', 'Dnešice', 'Drahouš', 'Hraničné Petrovice', 'Spáňov', 'Borek (Jičín District)', 'Čenkovice', 'Všenory', 'Křetín', 'Jankovice', 'Dolní Beřkovice', 'Leškovice', 'Hrdibořice', 'Veveří Castle', 'Mouchnice', 'Grygov', 'Zahořany (Prague-West District)', 'Chabařovice', 'Kamenný Most (Kladno District)', 'Kožušice', 'Domanín', 'Močerady', 'Uherský Ostroh', 'Kamýk nad Vltavou', 'Přerubenice', 'Blaník', 'Horní Radouň', 'Bojiště', 'Rokytnice nad Rokytnou', 'Olešnice v Orlických horách', 'Borotice', 'Kobeřice u Brna', 'Karolinka', 'Bítov', 'Ležáky', 'Libá', 'Suchdol nad Odrou', 'Bělušice (Kolín District)', 'Vojkovice (Karlovy Vary District)', 'Louňovice', 'Kornatice', 'Kouty (Nymburk District)', 'Pivín', 'Frýdštejn Castle', 'Horky', 'Lopeník', 'Všehrdy', 'Svratouch', 'Vlkava', 'Žárovná', 'Pucov', 'Diana', 'Horní Čermná', 'Nezamyslice', 'Holoubkov', 'Svémyslice', 'Velký Újezd', 'Lhůta', 'Semanín', 'Rokytá', 'Žatec', 'Malenovice', 'Libědice', 'Prosiměřice', 'Velké Hostěrádky', 'Hrádek nad Nisou', 'Bulhary', 'Dolní Lukavice', 'Ruprechtov', 'Nižbor', 'Hvězdoňovice', 'Čepřovice', 'Počítky', 'Moravský Žižkov', 'Dobelice', 'Vlkov', 'Vacov', 'Újezd u Sezemic', 'Olšovec', 'Jablunkov', 'Pňovany', 'Horní Ředice', 'Blovice', 'Ruda nad Moravou', 'Vrátno', 'Studnice (Náchod District)', 'Domoraz', 'Milenov', 'Dolní Hradiště', 'Bohutice', 'Podlesí', 'New Town Hall, Ostrava', 'Šumvald', 'Horní Bukovina', 'Ocmanice', 'Slatina nad Zdobnicí', 'Kelč', 'Paskov', 'Bělá (Semily District)', 'Havířov', 'Horská Kvilda', 'Litichovice', 'Pertoltice pod Ralskem', 'Westmoravian College Třebíč', 'Stříbrnice', 'Jevišovice', 'Ústí nad Labem', 'Branice', 'Slapy (Prague-West District)', 'Šabina', 'Hajany', 'Bernardov', 'Zdeňkov', 'Voděrady', 'Sovinec', 'Vanůvek', 'Vlčtejn', 'Březí', 'Nový Jičín', 'Rokytovec', 'Sivice', 'Břidličná', 'Jiřetín pod Bukovou', 'Benetice', 'Bělá', 'Štěnovický Borek', 'Úsobrno', 'Vlastislav', 'Provodovice', 'Chýšť', 'Kukle', 'Hlincová Hora', 'Janov', 'Lužany', 'Nehodiv', 'Horní Němčice', 'Sadov', 'Bohutín', 'Citov', 'Pasohlávky', 'Benecko', 'Rušinov', 'Zdobnice', 'Studená', 'Tršice', 'Heřmánky', 'Ústrašice', 'Drhovle', 'Chrtníč', 'Dubčany', 'Prokopov', 'Kamenec u Poličky', 'Kobylice', 'Kyjov', 'Kuřimany', 'Panenské Břežany', 'Jindřichův Hradec', 'Frýdek-Místek', 'Vikýřovice', 'Chlístovice', 'Křečkov', 'Kunčina Ves', 'Horní Slatina', 'Ostrolovský Újezd', 'Lipník', 'Toužetín', 'Horní Blatná', 'Vojnův Městec', 'Guty', 'Libořice', 'Pavlice', 'Šluknov', 'Jámy', 'Čučice', 'Pazderna', 'Prakšice', 'Těšovice (Sokolov District)', 'Svatý Jiří', 'Hořice na Šumavě', 'Semčice', 'Třebovle', 'Starý Bydžov', 'Horní Ves', 'Studené', 'Loket Castle', 'Mirkovice', 'Netunice', 'Velhartice', 'Horní Bříza', 'Kaznějov', 'Smolnice', 'Strojetice', 'Častolovice', 'Příbram', 'Kraj', 'Jíloviště', 'Plešnice', 'Horní Lukavice', 'Radotín', 'Úbislavice', 'Červená Hora', 'Hostašovice', 'Černíny', 'Zlátenka', 'Klecany', 'Skalsko', 'Spešov', 'Malá Losenice', 'Rychnov nad Kněžnou', 'Bavoryně', 'Ošelín', 'Lesní Jakubov', 'Ledce (Kladno District)', 'Druhanov', 'Olešná', 'Křečhoř', 'Horní Paseka', 'Šestajovice (Prague-East District)', 'Svijany', 'Veltrusy Mansion', 'Bratčice', 'Mysletice', 'Velké Všelisy', 'Dolní Líštná', 'Hamry nad Sázavou', 'Víska', 'Kvasice', 'Netolice', 'Čejkovice', 'Veselé', 'Újezdec (Mělník District)', 'Druztová', 'Domousnice', 'Předslavice', 'Mezouň', 'Roblín', 'Cizkrajov', 'Pelhřimov', 'Luženičky', 'Zlechov', 'Leština', 'Podkopná Lhota', 'Stonařov', 'Humburky', 'Neslovice', 'Rýmařov', 'Úterý', 'Šonov', 'Líský', 'Dolní Studénky', 'Roztoky u Semil', 'Nové Hrady', 'Předenice', 'Vejprty', 'Šišma', 'Dvory', 'Ostrov u Macochy', 'Lhotky (Mladá Boleslav District)', 'Drnek, Czech Republic', 'Blatnička', 'Osové', 'Vrbice', 'Šakvice', 'Otročín', 'Vysoké Chvojno', 'Hlízov', 'Jiřice (Nymburk District)', 'Větrušice', 'Zvíkov', 'Moravská Třebová', 'Třebichovice', 'Úslava', 'Diváky', 'Dobršín', 'Jílové u Prahy', 'Písek', 'Brumov', 'Hnátnice', 'Račice', 'Dobkovice', 'Hostětice', 'Václavy', 'Bezděkov nad Metují', 'Lučina', 'Strachotín', 'Lomnice nad Popelkou', 'Stožec', 'Jiříkovice', 'Strmilov', 'Pňov-Předhradí', 'Kurdějov', 'Lančov', 'Jestřebí (Náchod District)', 'Václavov u Bruntálu', 'Jesenec', 'Poděvousy', 'Hrabyně', 'Lukášov', 'Lhota pod Libčany', 'Nedomice', 'Ždírec', 'Seletice', 'Malá Veleň', 'Lhotka (Frýdek-Místek District)', 'Srbice', 'Kněžmost', 'Zdechovice', 'Dřísy', 'Merklín', 'Holedeč', 'Pařezov', 'Velká Bukovina', 'Ratměřice', 'Lyžbice', 'Myštice', 'Balkova Lhota', 'Svépravice', 'Barchovice', 'Senetářov', 'Velká Kraš', 'Hartmanice', 'Dřevčice', 'Klešice', 'Malá Morava', 'Klínec', 'Zdounky', 'Zlámanec', 'Dlouhá Ves', 'Rašín', 'Křižanovice', 'Štítary', 'Skršín', 'Nový Bohumín', 'Stěžery', 'Přítluky', 'Máslovice', 'Dambořice', 'Opatovec', 'Kajot Arena', 'Hostětín', 'Prasklice', 'Lipno', 'Martinice v Krkonoších', 'Putim', 'Dolní Zimoř', 'Hlásnice', 'Litultovice', 'Bořitov', 'Hrdlív', 'Paračov', 'Rokytnice nad Jizerou', 'Starý Hrozenkov', 'Vystrčenovice', 'Lukoveček', 'Výčapy', 'Bílkovice', 'Kuks', 'Litoměřice', 'Vlastějovice', 'Šestajovice (Náchod District)', 'Kučeř', 'Tuněchody', 'Želetava', 'Jabkenice', 'Church of Saint Michael', 'Hejná', 'Poříčí u Litomyšle', 'Cvikov', 'Bavorov', 'Kouty', 'Pastviny', 'Slatina, Nový Jičín District', 'Nezabudice', 'Návsí', 'Klenovice', 'Horní Dunajovice', 'Hoštice', 'Nový Kramolín', 'Svitavy', 'Bystřice pod Hostýnem', 'Džbánov', 'Selmice', 'Bystřec', 'Vortová', 'Čermákovice', 'Dolní Kounice', 'Bartovice', 'Pálovice', 'Mackovice', 'Nížkov', 'Řepníky', 'Mladá Vožice', 'Mrzky', 'Jeviněves', 'Komorní Lhotka', 'Plav', 'Okrouhlička', 'Řepov', 'Ještěd', 'Kaplice', 'Starý Kolín', 'Bludov', 'Nový Hrozenkov', 'Přeštěnice', 'Trnávka (Nový Jičín District)', 'Ohrazenice', 'Srnín', 'Malšovice', 'Keblice', 'Prerov Airport', 'Rokytno', 'Volevčice', 'Pudlov', 'Olovnice (Mělník District)', 'Dobřany', 'Čelistná', 'Bohemia', 'Svrkyně', 'Petrovice (Rakovník District)', 'Nové Město na Moravě', 'Podolí', 'Ludvíkovice', 'Zduchovice', 'Dobroměřice', 'Prštice', 'Litohošť', 'Hřebečníky', 'Okounov', 'Kardašova Řečice', 'Medonosy', 'Velké Tresné', 'Sezimovo Ústí', 'Velká Losenice', 'Plavy', 'Smíchov', 'Kopidlo', 'Vlašim', 'Poběžovice u Přelouče', 'Frenštát pod Radhoštěm', 'Branišovice', 'Zahrádky (Česká Lípa District)', 'Pernink', 'Měděnec', 'Dubá', 'Rokytnice', 'Dobšice (Nymburk District)', 'Uzenice', 'Lom', 'Ketkovice', 'Rozsochy', 'Mistřice', 'Kvíčovice', 'Bílov (Nový Jičín District)', 'Soběsuky', 'Čechtice', 'Štítina', 'Vlasatice', 'Havlíčkův Brod Airport', 'Úsov', 'Dušníky', 'Zámostí-Blata', 'Rudolice nad Bílinou', 'Jirny', 'Strážný', 'Leština u Světlé', 'Měchenice', 'Drážov', 'Blažejovice', 'Turovice', 'Stranný', 'Rakousy', 'Zbečno', 'Vysoký kámen', 'Trnová', 'Krásné Údolí', 'Malé Kyšice', 'Střítež', 'Hnačov', 'Strunkovice nad Volyňkou', 'Hrdlořezy (Mladá Boleslav District)', 'Palkovice', 'Dětřichov nad Bystřicí', 'Bělov', 'Pastuchovice', 'Kozojedy (Rakovník District)', 'Bohdašín (Rychnov nad Kněžnou District)', 'Dobříkov', 'Pojbuky', 'Hartvíkovice', 'Jasenná', 'Strašov', 'Dobronín', 'Hanušovice', 'Ptýrov', 'Chvaleč', 'Arneštovice', 'Lhotka', 'Dubice', 'Přeštice', 'Podhorní Újezd a Vojice', 'Boleboř', 'Zlín Region', 'Zadní Chodov', 'Horní Slavkov', 'Prague 11', 'Dobev', 'Jeníkov', 'Petrůvky', 'University of West Bohemia', 'Brumovice', 'Trutnov', 'Oldřiš', 'Makotřasy', 'Vrchlabí', 'Svojšice (Příbram District)', 'Vranovská Ves', 'Brnířov', 'Sychrov Castle', 'Radenín', 'Milhostov', 'Ledečko', 'Doupov Mountains', 'Březno', 'Sobotovice', 'Pšánky', 'Svinaře', 'Srbsko', 'Hlinsko', 'Vinařice', 'Zavidov', 'Hospozín', 'Vlčkovice v Podkrkonoší', 'Přelouč', 'Mysliboř', 'Milešovice', 'Bořetice', 'Střílky', 'Služovice', 'Nové Strašecí', 'Libčice nad Vltavou', 'Holasice', 'Kovanec', 'Vysočany', 'Újezd', 'Rudolfov', 'Sobotín', 'Chyše', 'Blatná', 'Radkovice', 'Osečná', 'Hradec-Nová Ves', 'Lubě', 'Děčín', 'Hvozd (Rakovník District)', 'Mouřínov', 'Radvanec', 'Díly', 'Železné', 'Malinová (Rakovník District)', 'Vyklantice', 'Kunětice Mountain', 'Dětřichov', 'Železná', 'Koloveč', 'Rudník', 'Koryta', 'University of Hradec Králové', 'Pardubice', 'Radošovice', 'Vacenovice', 'Lásenice', 'Staré Město pod Landštejnem', 'Krabčice', 'Rohoznice (Jičín District)', 'Bzová', 'Hředle (Rakovník District)', 'Tatiná', 'Austrian Silesia', 'Benešov nad Černou', 'Chvalkovice', 'Val', 'City Tower', 'Třebelovice', 'Čmelíny', 'Krašovice', 'Míčov-Sušice', 'Staré Sedlo', 'Starý Jičín', 'Lisov', 'Silesian University', 'Kožušany-Tážaly', 'Kovčín', 'Broadway Theatre', 'Žáravice', 'Radovesice', 'Dolní Radechová', 'Lipnice', 'Krajková', 'Boreč', 'Jičíněves', 'Vlčice', 'Čepí', 'Rovečné', 'Bobrová', 'Dvorce', 'Bořice', 'Moravský Beroun', 'Dívčí Kopy', 'Rusava', 'Ktová', 'Read Island', 'Těšovice', 'Chodouny', 'Kunštát', 'Meziměstí', 'Nemotice', 'Tulešice', 'Žumberk', 'Radvanice (Trutnov District)', 'Planá', 'Střemošice', 'Velké Březno', 'Úpohlavy', 'Studnice', 'Zlatá Koruna', 'Nýřany', 'Oldřich Oak', 'Řehenice', 'Lobodice', 'Jiřice u Moravských Budějovic', 'Staňkov', 'Tojice', 'Tis', 'Roprachtice', 'Horní Habartice', 'Mečichov', 'Jiříkov', 'Prackovice nad Labem', 'Hradec nad Svitavou', 'Velenov', 'Horní Benešov', 'Káranice', 'Počátky', 'Bohdalovice', 'Orlík nad Vltavou', 'Skuhrov nad Bělou', 'Lipí', 'Osečnice', 'Nemanice', 'Žim', 'Ropice', 'Bradáčov', 'Skašov', 'Labské Chrčice', 'České Středohoří', 'Vrchotovy Janovice', 'Jizbice', 'Prostiboř', 'Velký Karlov', 'Klučov (Kolín District)', 'Dolní Lomná', 'Sokolnice', 'Blatce', 'Svaté Pole', 'Lipník (Mladá Boleslav District)', 'Dub', 'Dětmarovice', 'Bitov', 'Koryčany', 'Zábeštní Lhota', 'Ostroměř', 'Chvalnov-Lísky', 'Lužec nad Cidlinou', 'Ploučnice', 'Souňov', 'Újezd u Plánice', 'Ždánice (Kolín District)', 'Chroustovice', 'Horka II', 'Únehle', 'Nová Ves u Bakova', 'Lipno nad Vltavou', 'Plaveč', 'Huslenky', 'Chrást', 'Pohorovice', 'Bačkovice', 'Dománovice', 'Blanné', 'Kadlín', 'Janoušov', 'Seloutky', 'Moravecké Pavlovice', 'Radiměř', 'Horní Břečkov', 'Písek (Hradec Králové District)', 'Pravice', 'Chocerady', 'Nýdek', 'Lutopecny', 'Běleč nad Orlicí', 'Krchleby (Rychnov nad Kněžnou District)', 'Paběnice', 'Boubín', 'Vstiš', 'Blatnice', 'Křídlůvky', 'Vraňany', 'Dzbel', 'Bratronice', 'Bánov', 'Hněvkovice', 'Kuřimské Jestřabí', 'Vícenice u Náměště nad Oslavou', 'Heřmanice u Oder', 'Prostějovičky', 'Vladislav', 'Bílov', 'Tisá', 'Lukovany', 'Red Church', 'Onomyšl', 'Hlohovice', 'Dívčí Hrad', 'Dobrohošť', 'Šípy', 'Slavičín', 'Zbiroh', 'Bělá pod Bezdězem', 'Určice', 'Prachatice', 'ČEZ Aréna', 'Otaslavice', 'Kost Castle', 'Lipoltice', 'Dubnice', 'Hvozdnice', 'Česká Třebová', 'Borohrádek', 'Bačkov', 'Kameničná', 'Postupice', 'Bohemian Switzerland', 'Mžany', 'Chvalčov', 'Krompach', 'Film School in Pisek', 'Němětice', 'Rozhraní', 'Ivan Hlinka Stadion', 'Stropešín', 'Petrovice u Sušice', 'Strupčice', 'Lažiště', 'Černošín', 'Lázně Kynžvart', 'Rakov', 'Havlíčkův Brod', 'Pozlovice', 'Bystřice nad Pernštejnem', 'Provodov-Šonov', 'Kroučová', 'Zašová', 'Třtěnice', 'Plánice', 'Hluboká nad Vltavou', 'Červený Kostelec', 'Dobrá Voda u Hořic', 'Hroznová Lhota', 'Lhenice', 'Čížov', 'Pelechy', 'Modrava', 'Ochoz', 'Mrákov', 'Níhov', 'Bezděz (Česká Lípa District)', 'Holohlavy', 'Mladá Boleslav', 'Ludslavice', 'Nová Telib', 'Kvílice', 'Podyjí National Park', 'Perštejn', 'Lhotka nad Labem', 'Naloučany', 'Otmarov', 'Milotice', 'Zábřezí-Řečice', 'Miřetice', 'Louka', 'International Baptist Theological Seminary', 'Ohrozim', 'Zelená Hora', 'Solnice', 'Oleško', 'Tvorovice', 'Vrutice', 'Mrlina', 'Malé Přítočno', 'Nejepín', 'Cathedral of St. Bartholomew', 'Sytno', 'Vlačice', 'Jíkev', 'Kostelec (Jičín District)', 'Jizera Mountains', 'Kobylnice (Kutná Hora District)', 'Cvrčovice', 'Brno-Slatina', 'Starý Plzenec', 'Ždírec (Česká Lípa District)', 'Hostěrádky-Rešov', 'Jabloňov', 'Prague 5', 'Červené Poříčí', 'Prague 9', 'Úlibice', 'Uhlířské Janovice', 'Prague State Opera', 'Duchcov Chateau', 'Klíčany', 'Minice', 'Lichnov', 'Dubovice', 'Přechovice', 'Moravské Málkovice', 'Les Platons', 'Světlík', 'Zlosyň', 'Lupenice', 'Proboštov', 'Bříza', 'Most Holy Trinity Church, Fulnek', 'Čisovice', 'Středokluky', 'Holovousy (Jičín District)', 'Pavlov', 'Tušovice', 'Pístina', 'Rousměrov', 'Hněvčeves', 'Hodonice', 'Habartov', 'Sulimov', 'Střelské Hoštice', 'Mikulovice', 'Františkov nad Ploučnicí', 'Vysoké', 'Operation Anthropoid', 'Slatiňany', 'Běloky', 'Kosořice', 'Jablonec nad Jizerou', 'Dvakačovice', 'Žehuň', 'Kunějovice', 'Dřínov', 'Výsluní', 'Karlovy Vary', 'Myslín', 'Val (Rychnov nad Kněžnou District)', 'Studenec', 'Mrsklesy', 'Okarec', 'Štěchovice', 'Čimelice', 'Sázava', 'Vendolí', 'Synkov-Slemeno', 'Brandov', 'Ivanovice na Hané', 'Dobronice u Bechyně', 'Teplička (Karlovy Vary District)', 'Modletice', 'Cathedral of the Divine Saviour', 'Pohledy', 'Čilec', 'Kašava', 'Volanice', 'Hlinka', 'Křižanovice u Vyškova', 'Šenov', 'Strhaře', 'Nechvalice', 'Drobovice', 'Biskupice', 'Račiněves', 'Krajníčko', 'Štoky', 'Hodice', 'Oldřichovice', 'Mladějov', 'Bítouchov', 'Valašské Klobouky', 'Závist', 'Hostovlice', 'Rusín', 'Vysoká Srbská', 'Žihle', 'Králův Dvůr', 'Fryšták', 'Dolní Věstonice', 'Hraničky', 'Vlčnov', 'Řepice', 'Stará Červená Voda', 'Černošice', 'Běstovice', 'Zhoř u Mladé Vožice', 'Stružnice', 'Květná', 'Nepomyšl', 'Městec Králové', 'Dolní Stakory', 'Polkovice', 'Lipovec', 'Svésedlice', 'Kravaře (Česká Lípa District)', 'Jan Evangelista Purkyně University in Ústí nad Labem', 'Závada', 'Hosty', 'Louky', 'Chyšná', 'Kamenice', 'Horní Životice', 'Losiná', 'Duchcov', 'Zálezlice', 'Dolní Habartice', 'Kladruby nad Labem', 'Světnov', 'Horní Kalná', 'Krašlovice', 'Libež', 'Trpišovice', 'Borotín', 'Tisovec', 'Nedakonice', 'Velvary', 'Břestek', 'Lhota pod Radčem', 'Suchdol nad Lužnicí', 'Tymákov', 'Heřmánkovice', 'Čížová', 'Kolín', 'Škrdlovice', 'Chropyně', 'Zdelov', 'Číčenice', 'Senohraby', 'Pluhův Žďár', 'Jarošov', 'Dříteč', 'Jimlín', 'Chvojenec', 'Držková', 'Hřebeč (Kladno District)', 'Bernartice nad Odrou', 'Pěnčín', 'Ráječko', 'Skořice', 'Háje nad Jizerou', 'Podmoky', 'Sázavka', 'Závišice', 'Prostřední Bečva', 'Bohdaneč', 'Slověnice', 'Hostěnice', 'Horní Smržov', 'Polepy', 'Kosořín', 'Zvole (Prague-West District)', 'Puclice', 'Libina', 'Dolní Přím', 'Rojetín', 'Křešín', 'Bohdalice-Pavlovice', 'Zálesí', 'Drahňovice', 'Pavlovice u Přerova', 'Číhaň', 'Olšany Cemetery', 'Ráby', 'Chrastavice', 'Všemina', 'Bozkov', 'Načešice', 'Hůry', 'Budíkov', 'Nalžovice', 'Mezholezy', 'Nechanice', 'Tlučná', 'Hovorčovice', 'Banín', 'Přepychy', 'Ptenín', 'Dobrovíz', 'Mnetěš', 'Zborov', 'Pravda Castle', 'Žlunice', 'Bohuňov', 'Vincencov', 'Darkovice', 'Útěchovice pod Stražištěm', 'Železný Brod', 'Český Brod', 'Mýto', 'Dubňany', 'Píšťany', 'Trnov', 'Libeř', 'Řečany nad Labem', 'Dřínov (Kladno District)', 'Manětín', 'Radhošť', 'Úlehle', 'Nové Dvory (Příbram District)', 'Nárameč', 'Částkov', 'Sedlec (Mladá Boleslav District)', 'Hukvaldy', 'Medový Újezd', 'Bystrá nad Jizerou', 'Hradec nad Moravicí', 'Petřvald (Nový Jičín District)', 'Kalek', 'Stříbrná Skalice', 'Tehov', 'Slavošov', 'Lanžhot', 'Pardubice Region', 'Podmoky (Nymburk District)', 'Brod nad Dyjí', 'Klíny', 'Šindelová', 'Rybí', 'Dolní Město', 'Vodslivy', 'Svojšice', 'Institute of Chemical Technology in Prague', 'Kameničky', 'Polnička', 'Životice u Nového Jičína', 'Sušice', 'Dejvice', 'Bezděčí u Trnávky', 'Trstěnice (Cheb District)', 'Mačkov', "Štefánik's Observatory", 'Ostopovice', 'Oloví', 'Mukařov (Prague-East District)', 'Lahošť', 'Košík', 'Litoboř', 'North Bohemian Basin', 'Chocnějovice', 'Topolná', 'Lhota u Příbramě', 'Harrachov', 'Plavsko', 'Hříškov', 'Pilgrimage Church of Saint John of Nepomuk', 'Moravec', 'Bohuslavice (Náchod District)', 'Vysoký Újezd (Hradec Králové District)', 'Sirákov', 'Krahulov', 'Chlumek', 'Choceň', 'Drslavice', 'Puchlovice', 'Horní Bezděkov', 'Střítež nad Ludinou', 'Vysoká Lhota', 'Všesulov', 'Nové Vilémovice', 'Libecina', 'Berštejn Castle', 'Bohostice', 'Velká Deštná', 'Budyně nad Ohří', 'Bdín', 'Okna (Česká Lípa District)', 'Semtěš', 'Křenovice', 'Žerůtky', 'Prague Václav Havel Airport', 'Jenišovice', 'Křemešník', 'Sobeslav Airport', 'Malá Úpa', 'Žďár (Rakovník District)', 'Zvíkov Castle', 'Frýdštejn', 'Antonín Dvořák Museum', 'Černá Hora', 'Kaňovice', 'Zvíkovské Podhradí', 'Mrákotín', 'Mlečice', 'Popelín', 'Nekoř', 'Plasy', 'Krasíkovice', 'Tichov', 'Soběraz', 'Zajíčkov', 'Bílsko u Hořic', 'Víceměřice', 'Protivín', 'Valtrovice', 'Besednice', 'Račice nad Trotinou', 'Lázně Jeseník', 'Velká Lečice', 'Chroustov (Nymburk District)', 'Radkovy', 'Lašovice', 'Chlístov', 'Rosice', 'Sluštice', 'Obory, Czech Republic', 'Komárovice', 'Sezemice', 'Vodochody', 'Bžany', 'Budislav', 'Valdek Castle', 'Úhonice', 'Sovínky', 'Kostomlaty pod Milešovkou', 'Chotěvice', 'Meziboří', 'Stračov', 'Němčany', 'Zelenecká Lhota', 'Jilemnice', 'Kolomuty', 'Polní Chrčice', 'Budiměřice', 'Korno', 'Roupov', 'Velká Chuchle', 'Bohaté Málkovice', 'Račice-Pístovice', 'Těrlicko Dam', 'Bukov', 'Bystročice', 'Pšovlky', 'Libomyšl', 'Hořín', 'Nová Ves nad Popelkou', 'Uhřičice', 'Jetětice', 'Dírná', 'Nižní Lhoty', 'Záboří nad Labem', 'Ledenice', 'Šanov', 'Vernéřovice', 'Nová Ves u Chotěboře', 'Prague', 'Vroutek', 'Židněves', 'Krakov (Rakovník District)', 'Holenice', 'Rožmitál pod Třemšínem', 'Stolany', 'Radčice (Jablonec nad Nisou District)', 'Kšely', 'Nové Mitrovice', 'Polevsko', 'Dolní Lánov', 'Všeradice', 'Kozárovice', 'Habry', 'Libuš', 'Kojatice', 'Lázně Bohdaneč', 'Věteřov', 'Mokrouše', 'Bystřany', 'Lhota (Prague-East District)', 'Lutonina', 'Boršov', 'Dobříň', 'Maršov', 'Mikulčice', 'Jestřabí', 'Úsobí', 'Libčeves', 'Doubrava', 'Živanice', 'Velemín', 'Horní Jelení', 'Kozel Castle', 'Jamolice', 'Chobot', 'Tvořihráz', 'Chýně', 'Brada-Rybníček', 'House of the Black Madonna', 'Maršovice (Jablonec nad Nisou District)', 'Knovíz', 'Senec', 'Chotýčany', 'Chodová Planá', 'Ostřetín', 'Velká Amerika', 'Přešťovice', 'Velké Petrovice', 'Veřovice', 'Horní Libochová', 'Křesín', 'Kolšov', 'Milovice u Hořic', 'Čaková', 'Mankovice', 'Řikonín', 'Borová Lada', 'Hvozd', 'Sazomín', 'Bělušice', 'Milíkov', 'All Czech municipalities N - Ř', 'Poštovice', 'Vitiněves', 'Mosty u Jablunkova', 'Rohle', 'Jaroměřice', 'Samšina', 'Žďárky', 'Žabovřesky nad Ohří', 'Ouběnice', 'Lidice', 'Krchleby', 'Lhota', 'Týnec nad Sázavou', 'Habrůvka', 'Heřmanovice', 'Vojtanov', 'Vnorovy', 'Nová Ves I', 'Dolní Bojanovice', 'Velká Buková', 'Otinoves', 'Čeladná', 'Přehořov', 'Srbská Kamenice', 'Nový Poddvorov', 'Těchobuz', 'Křepice', 'Temelín Nuclear Power Station', 'Bystřice', 'Svijany Brewery', 'Nepomuk (Příbram District)', 'Hnojice', 'Vintířov', 'Kopidlno', 'Jenčice', 'Záhoří (Semily District)', 'Kamenný Přívoz', 'Kněžnice', 'Soběchleby', 'Opočnice', 'Hrdějovice', 'Poděbrady', 'Sehradice', 'Staré Smrkovice', 'Borotice (Příbram District)', 'Brumov-Bylnice', 'Lechovice', 'Kacákova Lhota', 'Čáslav', 'Jistebník', 'Zárubice', 'Aš', 'Dolní Suchá', 'Třebom', 'Nyklovice', 'Roztoky', 'Hořovice', 'Valy', 'Pertoltice (Kutná Hora District)', 'Všenice', 'Vlachovice', 'Boháňka', 'Kramolín', 'Dolní Bečva', 'Hošťálkovy', 'Academy of Fine Arts in Prague', 'Chržín', 'Letovice', 'Mírová pod Kozákovem', 'Central Bohemian Region', 'Nežárka', 'Mokošín', 'Krejnice', 'Slup', 'Líšťany', 'Kamýk', 'Uherčice', 'Vestec (Náchod District)', 'Polesí', 'Vrcovice', 'Bítovany', 'Velká Chyška', 'Dlažkovice', 'Mostek', 'Mírov', 'Hodslavice', 'Mezina', 'Velichov', 'Narysov', 'Boseň', 'Chodský Újezd', 'Horažďovice', 'Sloupnice', 'Řepiště', 'Strážovice', 'Czech Technical University in Prague', 'Církvice (Kutná Hora District)', 'Očelice', 'Liberec Region', 'Niva', 'Srní', 'Nišovice', 'Opatovice', 'Telecí', 'Kotlasy', 'Raková', 'Nová Ves u Mladé Vožice', 'Borovná', 'Benátky', 'Nezdice na Šumavě', 'Bedřichov', 'Chabařovice Lake', 'Rejštejn', 'Koroužné', 'Rokytnice v Orlických horách', 'Jeníčkova Lhota', 'Lipník nad Bečvou', 'Chocenice', 'Hatín', 'Hlince', 'Malý Újezd', 'Švihov', 'Mašťov', 'Stojčín', 'Milejovice', 'Obrataň', 'Dobšice', 'Študlov', 'Bohuslavice', 'Mostkovice', 'Slepotice', 'Bethlehem Chapel', 'Zádub-Závišín', 'Olomouc Region', 'Olomučany', 'Lavičky', 'Lány u Dašic', 'Číměř', 'Kostelec u Křížků', 'Mokrovraty', 'Držovice', 'Zlonice', 'Kněžpole', 'Nahošovice', 'Lutín', 'Křižovatka (Cheb District)', 'Střevelná', 'Kaliště (Prague-East District)', 'Vrbice (Karlovy Vary District)', 'Lovečkovice', 'Králíky', 'Únice', 'Bystřička', 'Pleše', 'Košice', 'Horní Radslavice', 'Voleč', 'Přistoupim', 'Lipnice nad Sázavou', 'Dašice', 'Kly (Mělník District)', 'Vlkov pod Oškobrhem', 'Dubičné', 'Erpužice', 'Senec (Rakovník District)', 'Ujčov', 'Prague 15', 'Bouzov Castle', 'Krhanice', 'Bohušice', 'Heřmanův Městec', 'Čížkovice', 'Poteč', 'Dyjice', 'Lemberk Castle', 'Kravsko', 'Kluky (Mladá Boleslav District)', 'Miroslavské Knínice', 'Petrov (Prague-West District)', 'Vlachova Lhota', 'Zadní Střítež', 'Horní Lapač', 'Velký Borek', 'Klášterská Lhota', 'Dlouhomilov', 'Staré Sedlo (Sokolov District)', 'Lysá nad Labem', 'Letná Park', 'Hracholusky', 'Vojkov', 'Strážkovice', 'Nové Hutě', 'Lanškroun', 'Hořátev', 'Malé Výkleky', 'Veliny', 'Hosín', 'Hradištko', 'Svrabov', 'Karlík', 'Žerotice', 'Zborovice', 'Sulislav', 'Blučina', 'Čistá', 'Čestín', 'Smidary', 'Kynice', 'Vlkanov', 'Svitávka', 'Borová', 'Doloplazy', 'Hostim', 'Radošov', 'Třešovice', 'Lipany', 'Huzová', 'Kojatín', 'Hlásná Třebaň', 'Hněvotín', 'Česká Bříza', 'Stavenice', 'Tehovec, Czech Republic', 'Brod nad Tichou', 'Petřín', 'Holovousy', 'Svojek', 'Jamné nad Orlicí', 'Vlčatín', 'Žilina', 'Heřmaneč', 'Bedihošť', 'Měšice Castle', 'Přepychy (Rychnov nad Kněžnou District)', 'Kravaře', 'Lechotice', 'Czarna Kopa', 'Výrov', 'Občov', 'Drásov', 'Oudoleň', 'Pouzdřany', 'Mrač', 'Vrátkov', 'Úhlejov', 'Žitovlice', 'Boskovštejn', 'Třeboradice', 'Brzice', 'Hradisko Monastery', 'Bezkov', 'Truskovice', 'Malíkovice', 'Rašov', 'Ryjice', 'Košetice', 'Chyjice', 'Míškovice', 'Kryštofovy Hamry', 'Horní Loděnice', 'Verměřovice', 'Samopše', 'Člunek', 'Kakejcov', 'Litovel', 'Římov', 'Červená Třemešná', 'Lázně Libverda', 'Ledce (Mladá Boleslav District)', 'Štíhlice', 'Černotín', 'Všechlapy (Nymburk District)', 'Rapotín', 'Hradčany (Nymburk District)', 'Vysočina Region', 'Nesuchyně', 'Záborná', 'Orel', 'Horní Krupá', 'Merboltice', 'Černíč', 'Hulín', 'Žár', 'Střešovice', 'Zeleneč, Czech Republic', 'Řevnice', 'Černíkovice (Rychnov nad Kněžnou District)', 'Tachlovice', 'Měřín', 'Hvozdná', 'Rudíkov', 'Malé Hradisko', 'Zichovec', 'Rejchartice', 'Nepoměřice', 'Žimutice', 'Trhové Sviny', 'Květnice', 'Dešenice', 'Milínov', 'Račín', 'Vyškov', 'Svojšice (Kolín District)', 'Rozseč nad Kunštátem', 'Polerady', 'Bor u Skutče', 'Horní Bělá', 'Sedlec', 'Stádlec', 'Budčeves', 'Kostníky', 'Janská', 'Sklené', 'Tachov', 'Křivoklát Castle', 'Košátky', 'Chbany', 'Mičovice', 'Ostřešany', 'Mnichov', 'Písek Stone Bridge', 'Krásná', 'Kleneč', 'Husinec', 'Vyšší Brod', 'Doubek', 'Hořice', 'Jinošov', 'Zvěstovice', 'Běstvina', 'Halže', 'Jiratice', 'Kamenice (Prague-East District)', 'Trmice', 'Mnich', 'Přáslavice', 'Lípa', 'Kostelec nad Orlicí', 'Odlezly Lake', 'Želetice', 'Bačice', 'Odry', 'Technical University of Liberec', 'Jeřišno', 'Ves Touškov', 'Horoměřice', 'Sekeřice', 'Nerestce', 'Vítězná', 'Ohnišov', 'Kšice', 'Velký Šenov', 'Býkev', 'Ledčice', 'Sruby', 'Kvášňovice', 'České Budějovice', 'Snět', 'Stráž nad Ohří', 'Věžky', 'Drevníky', 'Červená Řečice', 'Maletín', 'Ledce', 'Vrchy', 'Troskovice', 'Břehov', 'Bělá nad Radbuzou', 'Libčany', 'Hustopeče', 'Chanovice', 'Olomouc Orthodox Church', 'Újezd u Boskovic', 'Dolany (Kladno District)', 'Pikárec', 'Mšecké Žehrovice', 'Heřmanice', 'Komárov', 'Ročov', 'Smržov (Hradec Králové District)', 'Černé Voděrady', 'Skály', 'Trpík', 'Mečeříž', 'Horoušany', 'Břevnice', 'Holštejn', 'Vyžlovka', 'Voznice', 'Stará Ves', 'Újezd nade Mží', 'Bečov', 'Královec', 'Zdiby', 'Těšetice', 'Ploskovice', 'Jahodov', 'Vřesník', 'Šumná', 'Tuhaň (Mělník District)', 'Luběnice', 'Kasalice', 'Prague 10', 'Sedlec Ossuary', 'Stratov', 'Mikulov', 'Zahorčice', 'Bříšťany', 'Javorek, Czech Republic', 'Unhošť', 'Bantice', 'Želatovice', 'Suchonice', 'Lazsko', 'Holy Trinity Column in Olomouc', 'Maleč', 'Řež', 'Doubravice', 'Drozdov', 'Okrouhlá', 'Nezdice', 'Postřekov', 'The University of Finance and Administration', 'Želechovice nad Dřevnicí', 'Vavřinec (Kutná Hora District)', 'České Velenice', 'Dobročovice', 'Uzeničky', 'Hájek', 'Jablonec nad Nisou', 'Smiřice', 'Věžnička', 'Kováň', 'Liblice', 'Eš', 'Bukovka', 'Francova Lhota', 'Sovolusky', 'Vršovka', 'Bratřejov', 'Vochov', 'Škvořetice', 'Kalivody', 'Malínky', 'Dolní Žandov', 'Albrechtičky', 'Žeravice', 'Nezbavětice', 'Blízkov', 'Svor (Česká Lípa District)', 'Předměřice nad Jizerou', 'Libštát', 'Osvětimany', 'Drahobuz', 'Stradonice (Kladno District)', 'Větřní', 'Brodeslavy', 'Náklo', 'Hoštka', 'Otovice (Náchod District)', 'Tatrovice', 'Sudkov', 'Albrechtice nad Vltavou', 'Strakov', 'Třinec', 'Horní Újezd', 'Velký Ořechov', 'O2 Arena', 'Nosálov', 'Karlovy Vary Airport', 'Radňoves', 'Knínice', 'Vlčkov', 'Šošůvka', 'Staré Jesenčany', 'Jivina', 'Horky nad Jizerou', 'Pnětluky', 'Přelíc', 'Litvínov', "Kroměříž Archbishop's Palace", 'Litovany', 'Vizovice', 'Nučice (Prague-East District)', 'Bělotín', 'Dolní Cerekev', 'Kosice', 'Střítež pod Křemešníkem', 'University of Defence, main campus', 'Zbinohy', 'Rozsíčka', 'Hradčovice', 'Dlouhé', 'Horní Kounice', 'Brusné', 'Pstruží', 'Pracejovice', 'Klentnice', 'Pilníkov', 'Nepřevázka', 'Chválenice', 'Bratřice', 'Županovice', 'Pohořelice', 'Divec', 'Nekvasovy', 'Vinařice (Kladno District)', 'Hostouň (Kladno District)', 'Výrava (Hradec Králové District)', 'Nezabylice', 'Radňovice', 'Meclov', 'Horka', 'Zbraslavice', 'Podmolí', 'Hradec Králové Region', 'Blažejov', 'Litohlavy', 'Stvolínky', 'Příbor', 'Horní Rápotice', 'Švihov (Rakovník District)', 'Rovensko pod Troskami', 'Přeborov', 'Velim railway test circuit', 'Terezín', 'Žďár nad Sázavou', 'Budišov', 'Ochoz u Tišnova', 'Kunovice', 'Krsy', 'Liberk', 'Horní Heřmanice', 'Borek', 'Ohařice', 'Nová Hradečná', 'Velenice (Česká Lípa District)', 'Křídla', 'Rabštejnská Lhota', 'Varnsdorf', 'Radějov', 'Chlumětín', 'Bouzov', 'Dolní Žukov', 'Mrtník', 'Kunčice pod Ondřejníkem', 'Červený Újezd (Prague-West District)', 'Tužice', 'Staré Hodějovice', 'Okrouhlo', 'Třebnouševes', 'Napajedla', 'Vlčetínec', 'Kozubová', 'Malá Roudka', 'Bílá', 'Kobylnice', 'Třebčice', 'Orlické Záhoří', 'Bublava', 'Rybníky', 'Rouské', 'Prášily', 'Zákupy', 'Kaceřov (Sokolov District)', 'Lubenec', 'Troubky', 'Mladé Bříště', 'Slavníč', 'Mělnické Vtelno', 'Drahotěšice', 'Rybné', 'Maršov u Úpice', 'Havlíčkův Brod District', 'Chotebor Airport', 'Kostelecké Horky', 'Radomyšl', 'Lipovice', 'Jablunkov Pass', 'Nabočany', 'Sion, Czech Republic', 'Velký Osek', 'Dolní Slivno', 'Bělá nad Svitavou', 'Říčky', 'Hněvošice', 'Svoboda nad Úpou', 'Slavíkov', 'Řendějov', 'Rácovice', 'Jihlava', 'Petříkov', 'Jílové', 'Velké Losiny', 'Kocelovice', 'Štěpkov', 'Brázdim', 'Krupá (Kolín District)', 'Pičín', 'Komňa', 'Úžice, Mělník', 'Přeckov', 'Nové Syrovice', 'Holešovice', 'Mendel University', 'Hříměždice', 'Stříbro', 'Bolkov', 'Roubanina', 'Vlkančice', 'Hornice', 'Zbraslavec', 'Rostěnice-Zvonovice', 'Mírová', 'Lukavice', 'Březník', 'Pošná', 'Krtov', 'Temelín', 'Myslejovice', 'Třebeň', 'Klášterní Skalice', 'Ratiboř', 'Starý Bohumín', 'Skorotice', 'Bařice-Velké Těšany', 'Orlovice', 'Háj ve Slezsku', 'Hostovice', 'Smetanova Lhota', 'Kolová', 'Bludov (Kutná Hora District)', 'Podbrdy', 'Licibořice', 'Volenice (Příbram District)', 'Obecnice', 'Louňová', 'Studeněves', 'Sebranice', 'Kamenický Šenov', 'Zlaté Hory', 'Solenice', 'Krokočín', 'Dolní Nětčice', 'Bratřínov', 'Blíževedly', 'Loděnice', 'Hadravova Rosička', 'Rokle', 'Oldřichov', 'Krasov', 'Lozice', 'Nové Město', 'Klopina', 'Kunětice', 'Krychnov', 'Branná', 'Polepy (Kolín District)', 'Mazelov', 'Dukovany Nuclear Power Station', 'Březiny', 'Lísek', 'Matějov', 'Lidečko', 'Roštín', 'Prusice', 'Obědovice', 'Vystrkov', 'Nihošovice', 'Olšany', 'Hrubá Vrbka', 'Hraběšice', 'Klatovy', 'Dolní Novosedly', 'Komařice', 'Zálesná Zhoř', 'Chlustina', 'Místo', 'Veletiny', 'Týnec nad Labem', 'Ústín', 'Nový Kostel', 'Ctětín', 'Vícenice', 'Pitín', 'Příbraz', 'Koldín', 'Jarošov nad Nežárkou', 'Malá Lhota', 'Počedělice', 'Stehelčeves', 'Podhořany u Ronova', 'Zdemyslice', 'Tichá', 'Zálezly', 'Velké Svatoňovice', 'Hodíškov', 'Vilice', 'Sklené nad Oslavou', 'Popovice', 'Kořenec', 'Line Airport', 'Tuhaň (Česká Lípa District)', 'Míchov', 'Second Czechoslovak Republic', 'Předklášteří', 'Rosovice', 'Citonice', 'Haškovcova Lhota', 'Újezd u Rosic', 'Loukovec', 'Starý Vestec', 'Bačetín', 'Kralovice', 'Nadryby', 'Věšín', 'Pohnánec', 'Libkova Voda', 'Dolní Hořice', 'Lovčovice', 'Vřesina', 'Heroltice', 'Koněprusy', 'Žichlínek', 'Dušejov', 'Soběšovice', 'Rantířov', 'Vedrovice', 'Klánovice', 'Červený Újezd', 'Slezské Pavlovice', 'Příšov', 'Rynholec', 'Liboc', 'Pajrek', 'Srbce', 'Točník', 'Modřany', 'Jesenný', 'Oleksovice', 'Červené Janovice', 'Jaroslav', 'Ruzyně', 'Dolní Ředice', 'Hodov', 'Liběchov', 'Hrochův Týnec', 'Planá nad Lužnicí', 'Horní Štěpánov', 'Jedlá', 'Žandov', 'Pozďatín', 'Stará Huť', 'Kostelní Radouň', 'Nemojany', 'Horšovský Týn', 'Chudeřice', 'Chrbonín', 'Dráchov', 'Hostín', 'Stonávka', 'Mšeno', 'Poříčany', 'Bohušovice nad Ohří', 'Netín', 'Beřovice', 'Babice u Rosic', 'Velemyšleves', 'Jindřichovice', 'Chmelík', 'Pletený Újezd', 'Stará Lysá', 'Sobůlky', 'Křenice (Prague-East District)', 'Třebechovice pod Orebem', 'Vysoká', 'Kupařovice', 'Lhotka (Mělník District)', 'Svatava', 'Volfířov', 'Břežany I', 'Bukovany (Sokolov District)', 'Jiřice'}
            Answers = 5878, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.269s]
          Answers = 5878, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.270s]
        Checking schema 27 / 73: {
          [('Main', '==', 'm.01mjq', ['location.location.events'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.location.events ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.location.events ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 5
            Final Answer: {'Prague Offensive', 'Battle of Sablat', 'Vítkov arson attack of 2009', '2008 One World Film Festival', '2002 Prague summit'}
            Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.013s]
          Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.013s]
        Checking schema 28 / 73: {
          [('Main', '==', 'm.01mjq', ['location.location.adjectival_form'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.location.adjectival_form ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.location.adjectival_form ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 0
            Final Answer: set()
            Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
          } [0.004s]
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.004s]
        Checking schema 29 / 73: {
          [('Main', '==', 'm.01mjq', ['olympics.olympic_participating_country.olympics_participated_in'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:olympics.olympic_participating_country.olympics_participated_in ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:olympics.olympic_participating_country.olympics_participated_in ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 2
            Final Answer: {'2002 Winter Olympics', '2010 Winter Olympics'}
            Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.009s]
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.009s]
        Checking schema 30 / 73: {
          [('Main', '==', 'm.01mjq', ['media_common.netflix_genre.titles'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:media_common.netflix_genre.titles ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:media_common.netflix_genre.titles ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 63
            Final Answer: {'Kolya', 'The Joke', 'Closely Watched Trains', 'Adelheid', 'René', 'Shameless', 'Up and Down', 'The Country Teacher', 'Autumn Spring', 'Black Peter', 'A Walk Worthwhile', 'Capricious Summer', 'Old Believers', 'Who Wants to Kill Jessie?', 'Valley of the Bees', 'Lemonade Joe', 'I Served the King of England', 'Darkness', 'The White Dove', 'Jan Svankmajer: The Ossuary and Other Tales', 'Želary', 'Protektor', 'Pearls of the Deep', 'The Good Soldier Schweik', 'Valerie and Her Week of Wonders', 'The Fifth Horseman is Fear', 'Spring of Life', 'Loves of a Blonde', 'Divided We Fall', 'Otesanek', 'Not Angels But Angels', 'My Love to the Swallows', 'Faust', 'Lunacy', 'Good Soldier Schweik 2: Beg to Report, Sir', 'Howling with the Angels', 'Something like Happiness', "Kawasaki's Rose", 'Late Night Talks with Mother', 'The Last Butterfly', 'Czech Dream', 'Mandragora', 'Dark Blue World', 'Shut Up and Shoot Me', 'Marian', "Who's Afraid of the Wolf", 'Distant Journey', 'Puppet Films of Jiri Trnka', 'The Cremator', 'All My Loved Ones', 'Beauty in Trouble', 'Massanet: Werther', 'The Great Water', 'Wingless', "The Firemen's Ball", 'Fruit of Paradise', 'In the Attic: Who Has a Birthday Today', 'Kráska v nesnázích', 'Lea', 'Witchhammer', 'The End of August at the Hotel Ozone', 'The Shop on Main Street', 'Daisies'}
            Answers = 63, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.009s]
          Answers = 63, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.009s]
        Checking schema 31 / 73: {
          [('Main', '==', 'm.01mjq', ['location.country.capital'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.capital ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.capital ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 1
            Final Answer: {'Prague'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.010s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.010s]
        Checking schema 32 / 73: {
          [('Main', '==', 'm.01mjq', ['location.country.calling_code'])]
          var_types: None
          SELECT DISTINCT ?o1 WHERE { fb:m.01mjq fb:location.country.calling_code ?o1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 WHERE { fb:m.01mjq fb:location.country.calling_code ?o1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 1
            Final Answer: {'420'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.003s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.004s]
        Checking schema 33 / 73: {
          [('Main', '==', 'm.01mjq', ['location.country.currency_formerly_used'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.currency_formerly_used ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.currency_formerly_used ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 1
            Final Answer: {'Czechoslovak koruna'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.006s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.006s]
        Checking schema 34 / 73: {
          [('Main', '==', 'm.01mjq', ['location.country.second_level_divisions'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.second_level_divisions ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.second_level_divisions ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 76
            Final Answer: {'Příbram District', 'Jihlava District', 'Prague-West District', 'Semily District', 'Břeclav District', 'Hodonín District', 'Beroun District', 'Pelhřimov District', 'Třebíč District', 'Prachatice District', 'Kutná Hora District', 'Šumperk District', 'Trutnov District', 'Prague-East District', 'Český Krumlov District', 'Sokolov District', 'Písek District', 'Karviná District', 'Vsetín District', 'Ústí nad Orlicí District', 'Ostrava-City District', 'Louny District', 'Plzeň-South District', 'Cheb District', 'Kroměříž District', 'Rychnov nad Kněžnou District', 'Plzeň-North District', 'Jindřichův Hradec District', 'Domažlice District', 'Blansko District', 'Bruntál District', 'Frýdek-Místek District', 'Náchod District', 'Most District', 'Nymburk District', 'Jeseník District', 'Litoměřice District', 'Liberec District', 'Česká Lípa District', 'Klatovy District', 'Nový Jičín District', 'Svitavy District', 'Uherské Hradiště District', 'Mladá Boleslav District', 'Vyškov District', 'Žďár nad Sázavou District', 'Opava District', 'Zlín District', 'Karlovy Vary District', 'Benešov District', 'Hradec Králové District', 'České Budějovice District', 'Pardubice District', 'Rokycany District', 'Olomouc District', 'Přerov District', 'Jablonec nad Nisou District', 'Strakonice District', 'Tábor District', 'Plzeň-City District', 'Tachov District', 'Kolín District', 'Děčín District', 'Chomutov District', 'Kladno District', 'Brno-City District', 'Rakovník District', 'Znojmo District', 'Teplice District', 'Brno-Country District', 'Ústí nad Labem District', 'Havlíčkův Brod District', 'Chrudim District', 'Jičín District', 'Prostějov District', 'Mělník District'}
            Answers = 76, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.011s]
          Answers = 76, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.011s]
        Checking schema 35 / 73: {
          [('Main', '==', 'm.01mjq', ['base.aareas.schema.administrative_area.administrative_children'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.aareas.schema.administrative_area.administrative_children ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.aareas.schema.administrative_area.administrative_children ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 14
            Final Answer: {'Liberec Region', 'Olomouc Region', 'Ústí nad Labem Region', 'Plzeň Region', 'Vysočina Region', 'Central Bohemian Region', 'Prague', 'Karlovy Vary Region', 'South Bohemian Region', 'Pardubice Region', 'Zlín Region', 'Hradec Králové Region', 'Moravian-Silesian Region', 'South Moravian Region'}
            Answers = 14, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.006s]
          Answers = 14, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.006s]
        Checking schema 36 / 73: {
          [('Main', '==', 'm.01mjq', ['base.aareas.schema.administrative_area.adjectival_form'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.aareas.schema.administrative_area.adjectival_form ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.aareas.schema.administrative_area.adjectival_form ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 0
            Final Answer: set()
            Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
          } [0.004s]
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.004s]
        Checking schema 37 / 73: {
          [('Main', '==', 'm.01mjq', ['base.aareas.schema.administrative_area.pertinent_type'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.aareas.schema.administrative_area.pertinent_type ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:base.aareas.schema.administrative_area.pertinent_type ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 4
            Final Answer: {'Czech oblast', 'Czech district', 'Czech municipality', 'Czech region'}
            Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.009s]
          Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.009s]
        Checking schema 38 / 73: {
          [('Main', '==', 'm.01mjq', ['location.location.time_zones'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.location.time_zones ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.location.time_zones ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 2
            Final Answer: {'Central European Time', 'UTC+01:00'}
            Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        Checking schema 39 / 73: {
          [('Main', '==', 'm.01mjq', ['location.location.area'])]
          var_types: None
          SELECT DISTINCT ?o1 WHERE { fb:m.01mjq fb:location.location.area ?o1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 WHERE { fb:m.01mjq fb:location.location.area ?o1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 1
            Final Answer: {'78866'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.004s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.004s]
        Checking schema 40 / 73: {
          [('Main', '==', 'm.01mjq', ['location.location.containedby'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.location.containedby ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.location.containedby ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 3
            Final Answer: {'Eurasia', 'Europe', 'Central Europe'}
            Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.013s]
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.013s]
        Checking schema 41 / 73: {
          [('Main', '==', 'm.01mjq', ['location.location.nearby_airports'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.location.nearby_airports ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.location.nearby_airports ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 1
            Final Answer: {'Karlovy Vary Airport'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.004s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.004s]
        Checking schema 42 / 73: {
          [('Main', '==', 'm.01mjq', ['book.book_subject.works'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:book.book_subject.works ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:book.book_subject.works ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 9
            Final Answer: {'Prague, Budapest', 'The Hitler Kiss', 'Prague, 2nd', 'The Prague Orgy', 'Classic German Cookbook', 'Laughable Loves', 'No exit', 'Golem', 'Essential Prague'}
            Answers = 9, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.004s]
          Answers = 9, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.005s]
        Checking schema 43 / 73: {
          [('Main', '==', 'm.01mjq', ['organization.organization_scope.organizations_with_this_scope'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:organization.organization_scope.organizations_with_this_scope ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:organization.organization_scope.organizations_with_this_scope ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 18
            Final Answer: {'Public Affairs', 'TOP 09', 'Czech Pirate Party', 'Green Party', 'Klub deskových her Paluba', 'European Democratic Party', 'Czech Social Democratic Party', 'Civic Democratic Party', 'Party of Free Citizens', 'Koruna česká', 'Bohemian-Moravian Confederation of Trade Unions', 'Party of Civic Rights – Zemanovci', 'Christian Labour Confederation', 'AppSatori', 'SNK European Democrats', 'Severočeši.cz', 'Libertas', 'Politika 21'}
            Answers = 18, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.008s]
          Answers = 18, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.008s]
        Checking schema 44 / 73: {
          [('Main', '==', 'm.01mjq', ['sports.sport_country.multi_event_tournaments_participated_in'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:sports.sport_country.multi_event_tournaments_participated_in ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:sports.sport_country.multi_event_tournaments_participated_in ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 1
            Final Answer: {'2012 World Mountain Running Championships'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.005s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.005s]
        Checking schema 45 / 73: {
          [('Main', '==', 'm.01mjq', ['user.lapax.default_domain.landlocked_country.surrounded_by'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:user.lapax.default_domain.landlocked_country.surrounded_by ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:user.lapax.default_domain.landlocked_country.surrounded_by ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 4
            Final Answer: {'Austria', 'Slovakia', 'Poland', 'Germany'}
            Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.005s]
          Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.005s]
        Checking schema 46 / 73: {
          [('Main', '==', 'm.01mjq', ['dataworld.gardening_hint.split_to'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:dataworld.gardening_hint.split_to ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:dataworld.gardening_hint.split_to ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 1
            Final Answer: {'Czechs'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.011s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.011s]
        Checking schema 47 / 73: {
          [('Main', '==', 'm.036b7l', ['soccer.football_team.current_roster'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.036b7l fb:soccer.football_team.current_roster ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.036b7l fb:soccer.football_team.current_roster ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 0
            Final Answer: set()
            Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
          } [0.005s]
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.005s]
        Checking schema 48 / 73: {
          [('Main', '==', 'm.036b7l', ['sports.sports_team.founded'])]
          var_types: None
          SELECT DISTINCT ?o1 WHERE { fb:m.036b7l fb:sports.sports_team.founded ?o1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 WHERE { fb:m.036b7l fb:sports.sports_team.founded ?o1 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 1
            Final Answer: {'1994'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.006s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.006s]
        Checking schema 49 / 73: {
          [('Main', '==', 'm.036b7l', ['user.hangy.default_domain.sports_team_gender.gender'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.036b7l fb:user.hangy.default_domain.sports_team_gender.gender ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.036b7l fb:user.hangy.default_domain.sports_team_gender.gender ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 1
            Final Answer: {'Male'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.009s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.009s]
        Checking schema 50 / 73: {
          [('Main', '==', 'm.036b7l', ['sports.sports_team.location'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.036b7l fb:sports.sports_team.location ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.036b7l fb:sports.sports_team.location ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 1
            Final Answer: {'Czech Republic'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.015s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.015s]
        Checking schema 51 / 73: {
          [('Main', '==', 'm.036b7l', ['soccer.football_team.matches'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.036b7l fb:soccer.football_team.matches ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.036b7l fb:soccer.football_team.matches ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 1
            Final Answer: {'UEFA Euro 2012 Quarter-final I'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.017s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.017s]
        Checking schema 52 / 73: {
          [('Main', '==', 'm.036b7l', ['sports.sports_team.sport'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.036b7l fb:sports.sports_team.sport ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.036b7l fb:sports.sports_team.sport ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 1
            Final Answer: {'Football'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.026s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.026s]
        Checking schema 53 / 73: {
          [('Main', '==', 'm.036b7l', ['sports.sports_team.roster', 'sports.sports_team_roster.player'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:sports.sports_team.roster ?o1 . ?o1 fb:sports.sports_team_roster.player ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:sports.sports_team.roster ?o1 . ?o1 fb:sports.sports_team_roster.player ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 41
            Final Answer: {'Libor Kozák', 'Michal Kadlec', 'Petr Čech', 'Ladislav Krejčí', 'Martin Pospíšil', 'Jan Rezek', 'David Limberský', 'Theodor Gebre Selassie', 'Daniel Kolář', 'Jan Rajnoch', 'Michal Ordoš', 'Václav Kadlec', 'Jan Laštůvka', 'Vladimír Darida', 'Marek Suchý', 'Petr Jiráček', 'Bořek Dočkal', 'Daniel Pudil', 'Jiří Štajner', 'Josef Hušbauer', 'Tomáš Hořava', 'Tomáš Rosický', 'Jaroslav Drobný', 'Tomáš Vaclík', 'Roman Hubník', 'Milan Baroš', 'Michal Bílek', 'Václav Pilař', 'Martin Latka', 'Matěj Vydra', 'David Lafata', 'Milan Petržela', 'Tomáš Necid', 'Tomáš Sivok', 'Tomáš Kalas', 'Tomáš Grigar', 'Jaroslav Plesl', 'František Rajtoral', 'Tomáš Hübschman', 'Stanislav Tecl', 'Tomáš Pekhart'}
            Answers = 41, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.014s]
          Answers = 41, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.014s]
        Checking schema 54 / 73: {
          [('Main', '==', 'm.036b7l', ['sports.sports_team.roster', 'sports.sports_team_roster.number'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:sports.sports_team.roster ?o1 . ?o1 fb:sports.sports_team_roster.number ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:sports.sports_team.roster ?o1 . ?o1 fb:sports.sports_team_roster.number ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 0
            Final Answer: set()
            Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        Checking schema 55 / 73: {
          [('Main', '==', 'm.036b7l', ['sports.sports_team.roster', 'sports.sports_team_roster.from'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.036b7l fb:sports.sports_team.roster ?o1 . ?o1 fb:sports.sports_team_roster.from ?o2 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o2 WHERE { fb:m.036b7l fb:sports.sports_team.roster ?o1 . ?o1 fb:sports.sports_team_roster.from ?o2 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 14
            Final Answer: {'2000', '2007', '2012', '2010', '1992', '2011', '2013', '2001', '2008', '2005', '2004', '2006', '2002', '2009'}
            Answers = 14, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.012s]
          Answers = 14, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.012s]
        Checking schema 56 / 73: {
          [('Main', '==', 'm.036b7l', ['sports.sports_team.coaches', 'sports.sports_team_coach_tenure.from'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.036b7l fb:sports.sports_team.coaches ?o1 . ?o1 fb:sports.sports_team_coach_tenure.from ?o2 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o2 WHERE { fb:m.036b7l fb:sports.sports_team.coaches ?o1 . ?o1 fb:sports.sports_team_coach_tenure.from ?o2 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 1
            Final Answer: {'2009'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        Checking schema 57 / 73: {
          [('Main', '==', 'm.036b7l', ['base.tournaments.tournament_competitor.tournaments', 'base.tournaments.tournament_participating_competitor.competitor_s'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:base.tournaments.tournament_competitor.tournaments ?o1 . ?o1 fb:base.tournaments.tournament_participating_competitor.competitor_s ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:base.tournaments.tournament_competitor.tournaments ?o1 . ?o1 fb:base.tournaments.tournament_participating_competitor.competitor_s ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 1
            Final Answer: {'Czech Republic national football team'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.006s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.006s]
        Checking schema 58 / 73: {
          [('Main', '==', 'm.036b7l', ['soccer.football_team.manager', 'soccer.football_team_management_tenure.team'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:soccer.football_team.manager ?o1 . ?o1 fb:soccer.football_team_management_tenure.team ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:soccer.football_team.manager ?o1 . ?o1 fb:soccer.football_team_management_tenure.team ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 1
            Final Answer: {'Czech Republic national football team'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.005s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.005s]
        Checking schema 59 / 73: {
          [('Main', '==', 'm.036b7l', ['sports.sports_team.roster', 'sports.sports_team_roster.to'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.036b7l fb:sports.sports_team.roster ?o1 . ?o1 fb:sports.sports_team_roster.to ?o2 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o2 WHERE { fb:m.036b7l fb:sports.sports_team.roster ?o1 . ?o1 fb:sports.sports_team_roster.to ?o2 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 1
            Final Answer: {'1995'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.005s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.005s]
        Checking schema 60 / 73: {
          [('Main', '==', 'm.036b7l', ['sports.sports_team.roster', 'sports.sports_team_roster.team'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:sports.sports_team.roster ?o1 . ?o1 fb:sports.sports_team_roster.team ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:sports.sports_team.roster ?o1 . ?o1 fb:sports.sports_team_roster.team ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 1
            Final Answer: {'Czech Republic national football team'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.005s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.005s]
        Checking schema 61 / 73: {
          [('Main', '==', 'm.036b7l', ['sports.sports_team.coaches', 'sports.sports_team_coach_tenure.team'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:sports.sports_team.coaches ?o1 . ?o1 fb:sports.sports_team_coach_tenure.team ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:sports.sports_team.coaches ?o1 . ?o1 fb:sports.sports_team_coach_tenure.team ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 1
            Final Answer: {'Czech Republic national football team'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.005s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.005s]
        Checking schema 62 / 73: {
          [('Main', '==', 'm.036b7l', ['base.tournaments.tournament_competitor.tournaments', 'base.tournaments.tournament_participating_competitor.last_round_played'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:base.tournaments.tournament_competitor.tournaments ?o1 . ?o1 fb:base.tournaments.tournament_participating_competitor.last_round_played ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:base.tournaments.tournament_competitor.tournaments ?o1 . ?o1 fb:base.tournaments.tournament_participating_competitor.last_round_played ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 1
            Final Answer: {'UEFA Euro 2012 Quarter-finals'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.004s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.004s]
        Checking schema 63 / 73: {
          [('Main', '==', 'm.036b7l', ['sports.sports_team.league', 'sports.sports_league_participation.team'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:sports.sports_team.league ?o1 . ?o1 fb:sports.sports_league_participation.team ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:sports.sports_team.league ?o1 . ?o1 fb:sports.sports_league_participation.team ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 1
            Final Answer: {'Czech Republic national football team'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.020s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.020s]
        Checking schema 64 / 73: {
          [('Main', '==', 'm.036b7l', ['soccer.football_team.manager', 'soccer.football_team_management_tenure.to'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.036b7l fb:soccer.football_team.manager ?o1 . ?o1 fb:soccer.football_team_management_tenure.to ?o2 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o2 WHERE { fb:m.036b7l fb:soccer.football_team.manager ?o1 . ?o1 fb:soccer.football_team_management_tenure.to ?o2 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 2
            Final Answer: {'2009', '2008'}
            Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.008s]
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.008s]
        Checking schema 65 / 73: {
          [('Main', '==', 'm.036b7l', ['soccer.football_team.manager', 'soccer.football_team_management_tenure.from'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.036b7l fb:soccer.football_team.manager ?o1 . ?o1 fb:soccer.football_team_management_tenure.from ?o2 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o2 WHERE { fb:m.036b7l fb:soccer.football_team.manager ?o1 . ?o1 fb:soccer.football_team_management_tenure.from ?o2 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 3
            Final Answer: {'2008', '2001', '2009'}
            Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        Checking schema 66 / 73: {
          [('Main', '==', 'm.036b7l', ['sports.sports_team.roster', 'sports.sports_team_roster.position'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:sports.sports_team.roster ?o1 . ?o1 fb:sports.sports_team_roster.position ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:sports.sports_team.roster ?o1 . ?o1 fb:sports.sports_team_roster.position ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 4
            Final Answer: {'Midfielder', 'Defender', 'Forward', 'Goalkeeper'}
            Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.006s]
          Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.006s]
        Checking schema 67 / 73: {
          [('Main', '==', 'm.036b7l', ['sports.sports_team.coaches', 'sports.sports_team_coach_tenure.coach'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:sports.sports_team.coaches ?o1 . ?o1 fb:sports.sports_team_coach_tenure.coach ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:sports.sports_team.coaches ?o1 . ?o1 fb:sports.sports_team_coach_tenure.coach ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 1
            Final Answer: {'Michal Bílek'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.006s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.006s]
        Checking schema 68 / 73: {
          [('Main', '==', 'm.036b7l', ['base.tournaments.tournament_competitor.tournaments', 'base.tournaments.tournament_participating_competitor.tournament'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:base.tournaments.tournament_competitor.tournaments ?o1 . ?o1 fb:base.tournaments.tournament_participating_competitor.tournament ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:base.tournaments.tournament_competitor.tournaments ?o1 . ?o1 fb:base.tournaments.tournament_participating_competitor.tournament ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 1
            Final Answer: {'UEFA Euro 2012'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.004s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.004s]
        Checking schema 69 / 73: {
          [('Main', '==', 'm.036b7l', ['sports.sports_team.league', 'sports.sports_league_participation.league'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:sports.sports_team.league ?o1 . ?o1 fb:sports.sports_league_participation.league ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:sports.sports_team.league ?o1 . ?o1 fb:sports.sports_league_participation.league ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 2
            Final Answer: {'UEFA', 'Football Association of the Czech Republic'}
            Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.008s]
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.008s]
        Checking schema 70 / 73: {
          [('Main', '==', 'm.036b7l', ['soccer.football_team.manager', 'soccer.football_team_management_tenure.manager'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:soccer.football_team.manager ?o1 . ?o1 fb:soccer.football_team_management_tenure.manager ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:soccer.football_team.manager ?o1 . ?o1 fb:soccer.football_team_management_tenure.manager ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 3
            Final Answer: {'Michal Bílek', 'Petr Rada', 'Karel Brückner'}
            Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.009s]
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.009s]
        Checking schema 71 / 73: {
          [('Main', '==', 'm.036b7l', ['sports.tournament_event_competitor.country', 'sports.competitor_country_relationship.country'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:sports.tournament_event_competitor.country ?o1 . ?o1 fb:sports.competitor_country_relationship.country ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:sports.tournament_event_competitor.country ?o1 . ?o1 fb:sports.competitor_country_relationship.country ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 1
            Final Answer: {'Czech Republic'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.006s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        Checking schema 72 / 73: {
          [('Main', '==', 'm.036b7l', ['sports.tournament_event_competitor.country', 'sports.competitor_country_relationship.competitor'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:sports.tournament_event_competitor.country ?o1 . ?o1 fb:sports.competitor_country_relationship.competitor ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.036b7l fb:sports.tournament_event_competitor.country ?o1 . ?o1 fb:sports.competitor_country_relationship.competitor ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.036b7l'}
            Query return lines = 1
            Final Answer: {'Czech Republic national football team'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.006s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        66 / 73 coarse schemas kept with ans_size > 0.
      } [0.887s]
      Coarse level ended, resulting in 66 schemas.
    } [1.156s]
    Type level searching (total types = 10): {
      Current: 0 / 66
[{'government.form_of_government'}]
[{'language.human_language'}]
[{'location.administrative_division'}]
[{'base.infection.biosafety_facility'}]
[{'base.aareas.schema.administrative_area'}]
[{'base.aareas.schema.administrative_area_type'}]
[{'government.governmental_body'}]
[{'government.government_agency'}]
[{'people.person'}]
[{'location.location'}]
[{'sports.sports_team'}]
[{'olympics.olympic_athlete'}]
[{'base.locations.continents'}]
[{'food.beer'}]
[{'biology.animal_breed'}]
[{'finance.currency'}]
[{'language.human_language'}]
[{'internet.top_level_domain'}]
[{'location.administrative_division'}]
[{'base.uncommon.exception'}]
[{'base.aareas.schema.administrative_area_type'}]
[{'government.government_office_or_title'}]
[{'type.datetime'}]
[{'location.location'}]
[{'time.event'}]
[{'olympics.olympic_games'}]
[{'media_common.netflix_title'}]
[{'location.citytown'}]
[{'type.int'}]
[{'finance.currency'}]
[{'location.administrative_division'}]
[{'base.aareas.schema.administrative_area'}]
[{'base.aareas.schema.administrative_area_type'}]
[{'time.time_zone'}]
[{'type.float'}]
[{'location.location'}]
[{'aviation.airport'}]
[{'book.written_work'}]
[{'organization.organization'}]
[{'sports.multi_event_tournament'}]
[{'location.country'}]
[{'type.object'}]
[{'type.datetime'}]
[{'people.gender'}]
[{'sports.sports_team_location'}]
[{'soccer.football_match'}]
[{'sports.sport'}]
[{'sports.sports_team_roster'}, {'sports.pro_athlete'}]
[{'sports.sports_team_roster'}, {'type.datetime'}]
[{'sports.sports_team_coach_tenure'}, {'type.datetime'}]
[{'base.tournaments.tournament_participating_competitor'}, {'base.tournaments.tournament_competitor'}]
[{'soccer.football_team_management_tenure'}, {'soccer.football_team'}]
[{'sports.sports_team_roster'}, {'type.datetime'}]
[{'sports.sports_team_roster'}, {'sports.sports_team'}]
[{'sports.sports_team_coach_tenure'}, {'sports.sports_team'}]
[{'base.tournaments.tournament_participating_competitor'}, {'base.tournaments.tournament_round'}]
[{'sports.sports_league_participation'}, {'sports.sports_team'}]
[{'soccer.football_team_management_tenure'}, {'type.datetime'}]
[{'soccer.football_team_management_tenure'}, {'type.datetime'}]
[{'sports.sports_team_roster'}, {'sports.sports_position'}]
[{'sports.sports_team_coach_tenure'}, {'sports.sports_team_coach'}]
[{'base.tournaments.tournament_participating_competitor'}, {'base.tournaments.tournament'}]
[{'sports.sports_league_participation'}, {'sports.sports_league'}]
[{'soccer.football_team_management_tenure'}, {'soccer.football_team_manager'}]
[{'sports.competitor_country_relationship'}, {'sports.sport_country'}]
[{'sports.competitor_country_relationship'}, {'sports.tournament_event_competitor'}]
      3 typed schemas retrieved from 66 coarse schemas.
      Calculating F1 for 3 typed schemas: {
        Current: 0 / 3
        Checking schema 0 / 3: {
          [('Main', '==', 'm.01mjq', ['location.country.official_language']), ('Type', '==', 'language.human_language', ['type.object.type'])]
          var_types: [{'language.human_language'}]
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.official_language ?o1 . ?o1 fb:type.object.type fb:language.human_language . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.official_language ?o1 . ?o1 fb:type.object.type fb:language.human_language . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 1
            Final Answer: {'Czech Language'}
            Answers = 1, P = 1.000000, R = 1.000000, F1 = 1.000000
          } [0.008s]
          Answers = 1, P = 1.000000, R = 1.000000, F1 = 1.000000
        } [0.008s]
        Checking schema 1 / 3: {
          [('Main', '==', 'm.01mjq', ['location.location.people_born_here']), ('Type', '==', 'language.language_creator', ['type.object.type'])]
          var_types: [{'people.person', 'language.language_creator'}]
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.location.people_born_here ?o1 . ?o1 fb:type.object.type fb:language.language_creator . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.location.people_born_here ?o1 . ?o1 fb:type.object.type fb:language.language_creator . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 0
            Final Answer: set()
            Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
          } [0.008s]
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.008s]
        Checking schema 2 / 3: {
          [('Main', '==', 'm.01mjq', ['location.country.languages_spoken']), ('Type', '==', 'language.human_language', ['type.object.type'])]
          var_types: [{'language.human_language'}]
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.languages_spoken ?o1 . ?o1 fb:type.object.type fb:language.human_language . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:20:42] Q_Schema Request: {
            WebQ_3698|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01mjq fb:location.country.languages_spoken ?o1 . ?o1 fb:type.object.type fb:language.human_language . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01mjq'}
            Query return lines = 13
            Final Answer: {'Slovak Language', 'Russian Language', 'Greek Language', 'Polish Language', 'Hungarian language', 'Czech Language', 'Serbian language', 'German Language', 'Bulgarian Language', 'Romani language', 'Croatian language', 'Rusyn Language', 'Ukrainian Language'}
            Answers = 13, P = 0.076923, R = 1.000000, F1 = 0.142857
          } [0.007s]
          Answers = 13, P = 0.076923, R = 1.000000, F1 = 0.142857
        } [0.007s]
        2 / 3 typed schemas kept with ans_size > 0.
      } [0.023s]
      Typed level ended, resulting in 68 schemas.
    } [0.026s]
    Time level searching (total times = 0): {
      Current: 0 / 68
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'government.governmental_body.date_formed', 'government.governmental_body.date_dissolved'}]
self.var_time_preds: [{'government.government_agency.date_founded'}]
self.var_time_preds: [{'people.person.date_of_birth'}]
self.var_time_preds: [set()]
self.var_time_preds: [{'sports.sports_team.founded'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'food.beer.first_brewed'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'internet.top_level_domain.introduced'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'time.event.start_date', 'time.event.end_date'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'book.written_work.date_written', 'book.written_work.copyright_date', 'book.written_work.date_of_first_publication'}]
self.var_time_preds: [{'organization.organization.date_founded'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'type.object.timestamp'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'sports.sports_team_roster.from', 'sports.sports_team_roster.to'}, {'sports.pro_athlete.career_end', 'sports.pro_athlete.career_start'}]
self.var_time_preds: [{'sports.sports_team_roster.from', 'sports.sports_team_roster.to'}, set()]
self.var_time_preds: [{'sports.sports_team_coach_tenure.from', 'sports.sports_team_coach_tenure.to'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'soccer.football_team_management_tenure.from', 'soccer.football_team_management_tenure.to'}, set()]
self.var_time_preds: [{'sports.sports_team_roster.from', 'sports.sports_team_roster.to'}, set()]
self.var_time_preds: [{'sports.sports_team_roster.from', 'sports.sports_team_roster.to'}, {'sports.sports_team.founded'}]
self.var_time_preds: [{'sports.sports_team_coach_tenure.from', 'sports.sports_team_coach_tenure.to'}, {'sports.sports_team.founded'}]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), {'sports.sports_team.founded'}]
self.var_time_preds: [{'soccer.football_team_management_tenure.from', 'soccer.football_team_management_tenure.to'}, set()]
self.var_time_preds: [{'soccer.football_team_management_tenure.from', 'soccer.football_team_management_tenure.to'}, set()]
self.var_time_preds: [{'sports.sports_team_roster.from', 'sports.sports_team_roster.to'}, set()]
self.var_time_preds: [{'sports.sports_team_coach_tenure.from', 'sports.sports_team_coach_tenure.to'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'soccer.football_team_management_tenure.from', 'soccer.football_team_management_tenure.to'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
      0 timed schemas retrieved from 68 typed schemas.
      Calculating F1 for 0 timed schemas: {
        0 / 0 timed schemas kept with ans_size > 0.
      } [0.000s]
      Time level ended, resulting in 68 schemas.
    } [0.002s]
    Ordinal level searching (total ordinals = 0): {
      Current: 0 / 68
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[{'government.governmental_body.date_formed', 'government.governmental_body.date_dissolved'}]
[{'government.government_agency.date_founded'}]
[{'people.person.date_of_birth'}]
[set()]
[{'sports.sports_team.founded'}]
[set()]
[set()]
[{'food.beer.first_brewed'}]
[set()]
[set()]
[set()]
[{'internet.top_level_domain.introduced'}]
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[{'time.event.start_date', 'time.event.end_date'}]
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[{'book.written_work.date_written', 'book.written_work.copyright_date', 'book.written_work.date_of_first_publication'}]
[{'organization.organization.date_founded'}]
[set()]
[set()]
[{'type.object.timestamp'}]
[set()]
[set()]
[set()]
[set()]
[set()]
[{'sports.sports_team_roster.from', 'sports.sports_team_roster.to'}, {'sports.pro_athlete.career_end', 'sports.pro_athlete.career_start'}]
[{'sports.sports_team_roster.from', 'sports.sports_team_roster.to'}, set()]
[{'sports.sports_team_coach_tenure.from', 'sports.sports_team_coach_tenure.to'}, set()]
[set(), set()]
[{'soccer.football_team_management_tenure.from', 'soccer.football_team_management_tenure.to'}, set()]
[{'sports.sports_team_roster.from', 'sports.sports_team_roster.to'}, set()]
[{'sports.sports_team_roster.from', 'sports.sports_team_roster.to'}, {'sports.sports_team.founded'}]
[{'sports.sports_team_coach_tenure.from', 'sports.sports_team_coach_tenure.to'}, {'sports.sports_team.founded'}]
[set(), set()]
[set(), {'sports.sports_team.founded'}]
[{'soccer.football_team_management_tenure.from', 'soccer.football_team_management_tenure.to'}, set()]
[{'soccer.football_team_management_tenure.from', 'soccer.football_team_management_tenure.to'}, set()]
[{'sports.sports_team_roster.from', 'sports.sports_team_roster.to'}, set()]
[{'sports.sports_team_coach_tenure.from', 'sports.sports_team_coach_tenure.to'}, set()]
[set(), set()]
[set(), set()]
[{'soccer.football_team_management_tenure.from', 'soccer.football_team_management_tenure.to'}, set()]
[set(), set()]
[set(), set()]
[set()]
[set()]
      0 ordinal schemas retrieved from 68 timed schemas.
      Calculating F1 for 0 ordinal schemas: {
        0 / 0 ordinal schemas kept with ans_size > 0.
      } [0.000s]
      Ordinal level ended, we finally collected 68 schemas.
    } [0.001s]
    [2020-12-03 14:20:42] buffer saved.
    68 schemas successfully saved into [../../runnings/candgen_WebQ/20201202_entity_time_type_ordinal/data/3600-3699/3698_schema].
  } [2m21.825s]
  Entering Q 3699 / 5810 [b'who plays riley finn on buffy the vampire slayer?']: {
    Show 4 E + 10 T + 0 Tm + 0 Ord = 14 linkings: {
      #00 Entity: [2, 4) (riley finn) == m.01j9hw (Riley_Finn) {'score': 21418.278732, 'source': 0.0}
      #01 Entity: [5, 8) (buffy the vampire) == m.0cskb (Buffy_the_Vampire_Slayer) {'score': 6590.607679, 'source': 1.0}
      #02 Entity: [5, 9) (buffy the vampire slayer) == m.0cskb (buffy the vampire slayer) {'score': 22205.915582, 'source': 2.0}
      #03 Entity: [8, 9) (slayer) == m.0jrcj (Slayer) {'score': 196.09965, 'source': 1.0}
      #04 Type: [1, 2) (plays) == theater.play (play) {'sim': 0.770605}
      #05 Type: [6, 7) (the) == measurement_unit.force_moment_unit (unit of moment of force) {'sim': 0.7314}
      #06 Type: [6, 7) (the) == symbols.heraldic_variation_of_the_field (heraldic variation of the field) {'sim': 0.721294}
      #07 Type: [6, 7) (the) == religion.type_of_place_of_worship (type of place of worship) {'sim': 0.708905}
      #08 Type: [6, 7) (the) == book.place_of_publication_period (place of publication period) {'sim': 0.693817}
      #09 Type: [6, 7) (the) == religion.place_of_worship_historical_use (place of worship historical use) {'sim': 0.688224}
      #10 Type: [6, 7) (the) == government.form_of_government (form of government) {'sim': 0.683937}
      #11 Type: [6, 7) (the) == measurement_unit.time_unit (unit of time) {'sim': 0.676445}
      #12 Type: [6, 7) (the) == military.military_unit_place_of_origin (military unit place of origin) {'sim': 0.674363}
      #13 Type: [6, 7) (the) == religion.place_of_worship (place of worship) {'sim': 0.670984}
    } [0.000s]
    14 link data save to file.
    Coarse level searching (total entities = 4): {
      [Len-1||F1/4] (2020-12-03 14:23:03) {
        Fuzzy query: SELECT DISTINCT ?p1 WHERE { fb:m.01j9hw ?p1 ?o1 . }
        [2020-12-03 14:23:03] SPARQL Request: {
          SELECT DISTINCT ?p1 WHERE { fb:m.01j9hw ?p1 ?o1 . }
          Query return lines = 20
        } [0.006s]
        Filt_Query_Ret = 10 / 20 ( 0.006s)
        [Len-1||F1/4||2/4-1] (2020-12-03 14:23:03) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 fb:m.0cskb . }
          [2020-12-03 14:23:03] SPARQL Request: {
            SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 fb:m.0cskb . }
            Query return lines = 2
          } [0.035s]
          Filt_Query_Ret = 2 / 2 ( 0.035s)
          [Len-1||F1/4||2/4-1||4/4-1] (2020-12-03 14:23:03) {
            Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 fb:m.0cskb . ?o1 ?p3 fb:m.0jrcj . }
            [2020-12-03 14:23:03] SPARQL Request: {
              SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 fb:m.0cskb . ?o1 ?p3 fb:m.0jrcj . }
              Query return lines = 0
            } [0.038s]
            Filt_Query_Ret = 0 / 0 ( 0.039s)
          } [0.039s]
        } [0.074s]
        [Len-1||F1/4||3/4-1] (2020-12-03 14:23:03) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 fb:m.0cskb . }
          [2020-12-03 14:23:03] SPARQL hit!
          Filt_Query_Ret = 2 / 2 ( 0.000s)
        } [0.000s]
        [Len-1||F1/4||4/4-1] (2020-12-03 14:23:03) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 fb:m.0jrcj . }
          [2020-12-03 14:23:03] SPARQL Request: {
            SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 fb:m.0jrcj . }
            Query return lines = 0
          } [0.021s]
          Filt_Query_Ret = 0 / 0 ( 0.021s)
        } [0.021s]
      } [0.101s]
      [Len-1||F2/4] (2020-12-03 14:23:03) {
        Fuzzy query: SELECT DISTINCT ?p1 WHERE { fb:m.0cskb ?p1 ?o1 . }
        [2020-12-03 14:23:03] SPARQL Request: {
          SELECT DISTINCT ?p1 WHERE { fb:m.0cskb ?p1 ?o1 . }
          Query return lines = 34
        } [0.005s]
        Filt_Query_Ret = 21 / 34 ( 0.005s)
        [Len-1||F2/4||1/4-1] (2020-12-03 14:23:03) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 fb:m.01j9hw . }
          [2020-12-03 14:23:03] SPARQL Request: {
            SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 fb:m.01j9hw . }
            Query return lines = 2
          } [0.042s]
          Filt_Query_Ret = 2 / 2 ( 0.042s)
          [Len-1||F2/4||1/4-1||4/4-1] (2020-12-03 14:23:03) {
            Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 fb:m.01j9hw . ?o1 ?p3 fb:m.0jrcj . }
            [2020-12-03 14:23:03] SPARQL Request: {
              SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 fb:m.01j9hw . ?o1 ?p3 fb:m.0jrcj . }
              Query return lines = 0
            } [0.045s]
            Filt_Query_Ret = 0 / 0 ( 0.045s)
          } [0.045s]
        } [0.087s]
        [Len-1||F2/4||4/4-1] (2020-12-03 14:23:03) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 fb:m.0jrcj . }
          [2020-12-03 14:23:03] SPARQL Request: {
            SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 fb:m.0jrcj . }
            Query return lines = 0
          } [0.021s]
          Filt_Query_Ret = 0 / 0 ( 0.021s)
        } [0.021s]
      } [0.114s]
      [Len-1||F3/4] (2020-12-03 14:23:03) {
        Fuzzy query: SELECT DISTINCT ?p1 WHERE { fb:m.0cskb ?p1 ?o1 . }
        [2020-12-03 14:23:03] SPARQL hit!
        Filt_Query_Ret = 21 / 34 ( 0.000s)
        [Len-1||F3/4||1/4-1] (2020-12-03 14:23:03) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 fb:m.01j9hw . }
          [2020-12-03 14:23:03] SPARQL hit!
          Filt_Query_Ret = 2 / 2 ( 0.000s)
        } [0.000s]
      } [0.000s]
      [Len-1||F4/4] (2020-12-03 14:23:03) {
        Fuzzy query: SELECT DISTINCT ?p1 WHERE { fb:m.0jrcj ?p1 ?o1 . }
        [2020-12-03 14:23:03] SPARQL Request: {
          SELECT DISTINCT ?p1 WHERE { fb:m.0jrcj ?p1 ?o1 . }
          Query return lines = 23
        } [0.007s]
        Filt_Query_Ret = 8 / 23 ( 0.007s)
        [Len-1||F4/4||1/4-1] (2020-12-03 14:23:03) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.0jrcj ?p1 ?o1 . ?o1 ?p2 fb:m.01j9hw . }
          [2020-12-03 14:23:03] SPARQL Request: {
            SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.0jrcj ?p1 ?o1 . ?o1 ?p2 fb:m.01j9hw . }
            Query return lines = 0
          } [0.040s]
          Filt_Query_Ret = 0 / 0 ( 0.040s)
        } [0.040s]
        [Len-1||F4/4||2/4-1] (2020-12-03 14:23:03) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.0jrcj ?p1 ?o1 . ?o1 ?p2 fb:m.0cskb . }
          [2020-12-03 14:23:03] SPARQL Request: {
            SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.0jrcj ?p1 ?o1 . ?o1 ?p2 fb:m.0cskb . }
            Query return lines = 0
          } [0.030s]
          Filt_Query_Ret = 0 / 0 ( 0.030s)
        } [0.030s]
      } [0.077s]
      [Len-2||F1/4] (2020-12-03 14:23:03) {
        Fuzzy query: SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 ?o2 . }
        [2020-12-03 14:23:03] SPARQL Request: {
          SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 ?o2 . }
          Query return lines = 283
        } [0.022s]
        Filt_Query_Ret = 11 / 283 ( 0.023s)
        [Len-2||F1/4||2/4-1] (2020-12-03 14:23:03) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o1 ?p3 fb:m.0cskb . }
          [2020-12-03 14:23:03] SPARQL Request: {
            SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o1 ?p3 fb:m.0cskb . }
            Query return lines = 30
          } [0.025s]
          Filt_Query_Ret = 0 / 30 ( 0.025s)
        } [0.025s]
        [Len-2||F1/4||2/4-2] (2020-12-03 14:23:03) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o2 ?p3 fb:m.0cskb . }
          [2020-12-03 14:23:03] SPARQL Request: {
            SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o2 ?p3 fb:m.0cskb . }
            Query return lines = 6
          } [1.920s]
          Filt_Query_Ret = 1 / 6 ( 1.920s)
          [Len-2||F1/4||2/4-2||4/4-1] (2020-12-03 14:23:05) {
            Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 ?p4 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o1 ?p4 fb:m.0jrcj . ?o2 ?p3 fb:m.0cskb . }
            [2020-12-03 14:23:05] SPARQL Request: {
              SELECT DISTINCT ?p1 ?p2 ?p3 ?p4 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o1 ?p4 fb:m.0jrcj . ?o2 ?p3 fb:m.0cskb . }
              Query return lines = 0
            } [2.010s]
            Filt_Query_Ret = 0 / 0 ( 2.010s)
          } [2.010s]
          [Len-2||F1/4||2/4-2||4/4-2] (2020-12-03 14:23:07) {
            Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 ?p4 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o2 ?p3 fb:m.0cskb . ?o2 ?p4 fb:m.0jrcj . }
            [2020-12-03 14:23:07] SPARQL Request: {
              SELECT DISTINCT ?p1 ?p2 ?p3 ?p4 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o2 ?p3 fb:m.0cskb . ?o2 ?p4 fb:m.0jrcj . }
              Query return lines = 0
            } [0.026s]
            Filt_Query_Ret = 0 / 0 ( 0.026s)
          } [0.026s]
        } [3.956s]
        [Len-2||F1/4||3/4-1] (2020-12-03 14:23:07) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o1 ?p3 fb:m.0cskb . }
          [2020-12-03 14:23:07] SPARQL hit!
          Filt_Query_Ret = 0 / 30 ( 0.000s)
        } [0.000s]
        [Len-2||F1/4||3/4-2] (2020-12-03 14:23:07) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o2 ?p3 fb:m.0cskb . }
          [2020-12-03 14:23:07] SPARQL hit!
          Filt_Query_Ret = 1 / 6 ( 0.000s)
        } [0.000s]
        [Len-2||F1/4||4/4-1] (2020-12-03 14:23:07) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o1 ?p3 fb:m.0jrcj . }
          [2020-12-03 14:23:07] SPARQL Request: {
            SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o1 ?p3 fb:m.0jrcj . }
            Query return lines = 0
          } [0.018s]
          Filt_Query_Ret = 0 / 0 ( 0.018s)
        } [0.018s]
        [Len-2||F1/4||4/4-2] (2020-12-03 14:23:07) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o2 ?p3 fb:m.0jrcj . }
          [2020-12-03 14:23:07] SPARQL Request: {
            SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.01j9hw ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o2 ?p3 fb:m.0jrcj . }
            Query return lines = 0
          } [1.177s]
          Filt_Query_Ret = 0 / 0 ( 1.177s)
        } [1.177s]
      } [5.200s]
      [Len-2||F2/4] (2020-12-03 14:23:09) {
        Fuzzy query: SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 ?o2 . }
        [2020-12-03 14:23:09] SPARQL Request: {
          SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 ?o2 . }
          Query return lines = 413
        } [0.069s]
        Filt_Query_Ret = 27 / 413 ( 0.071s)
        [Len-2||F2/4||1/4-1] (2020-12-03 14:23:09) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o1 ?p3 fb:m.01j9hw . }
          [2020-12-03 14:23:09] SPARQL Request: {
            SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o1 ?p3 fb:m.01j9hw . }
            Query return lines = 30
          } [0.044s]
          Filt_Query_Ret = 0 / 30 ( 0.044s)
        } [0.045s]
        [Len-2||F2/4||1/4-2] (2020-12-03 14:23:09) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o2 ?p3 fb:m.01j9hw . }
          [2020-12-03 14:23:09] SPARQL Request: {
            SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o2 ?p3 fb:m.01j9hw . }
            Query return lines = 13
          } [0.653s]
          Filt_Query_Ret = 1 / 13 ( 0.653s)
          [Len-2||F2/4||1/4-2||4/4-1] (2020-12-03 14:23:09) {
            Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 ?p4 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o1 ?p4 fb:m.0jrcj . ?o2 ?p3 fb:m.01j9hw . }
            [2020-12-03 14:23:09] SPARQL Request: {
              SELECT DISTINCT ?p1 ?p2 ?p3 ?p4 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o1 ?p4 fb:m.0jrcj . ?o2 ?p3 fb:m.01j9hw . }
              Query return lines = 0
            } [1.999s]
            Filt_Query_Ret = 0 / 0 ( 1.999s)
          } [1.999s]
          [Len-2||F2/4||1/4-2||4/4-2] (2020-12-03 14:23:11) {
            Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 ?p4 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o2 ?p3 fb:m.01j9hw . ?o2 ?p4 fb:m.0jrcj . }
            [2020-12-03 14:23:11] SPARQL Request: {
              SELECT DISTINCT ?p1 ?p2 ?p3 ?p4 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o2 ?p3 fb:m.01j9hw . ?o2 ?p4 fb:m.0jrcj . }
              Query return lines = 0
            } [0.010s]
            Filt_Query_Ret = 0 / 0 ( 0.010s)
          } [0.010s]
        } [2.662s]
        [Len-2||F2/4||4/4-1] (2020-12-03 14:23:11) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o1 ?p3 fb:m.0jrcj . }
          [2020-12-03 14:23:11] SPARQL Request: {
            SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o1 ?p3 fb:m.0jrcj . }
            Query return lines = 0
          } [0.023s]
          Filt_Query_Ret = 0 / 0 ( 0.023s)
        } [0.024s]
        [Len-2||F2/4||4/4-2] (2020-12-03 14:23:11) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o2 ?p3 fb:m.0jrcj . }
          [2020-12-03 14:23:11] SPARQL Request: {
            SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o2 ?p3 fb:m.0jrcj . }
            Query return lines = 0
          } [1.165s]
          Filt_Query_Ret = 0 / 0 ( 1.165s)
        } [1.165s]
      } [3.967s]
      [Len-2||F3/4] (2020-12-03 14:23:13) {
        Fuzzy query: SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 ?o2 . }
        [2020-12-03 14:23:13] SPARQL hit!
        Filt_Query_Ret = 27 / 413 ( 0.002s)
        [Len-2||F3/4||1/4-1] (2020-12-03 14:23:13) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o1 ?p3 fb:m.01j9hw . }
          [2020-12-03 14:23:13] SPARQL hit!
          Filt_Query_Ret = 0 / 30 ( 0.000s)
        } [0.000s]
        [Len-2||F3/4||1/4-2] (2020-12-03 14:23:13) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0cskb ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o2 ?p3 fb:m.01j9hw . }
          [2020-12-03 14:23:13] SPARQL hit!
          Filt_Query_Ret = 1 / 13 ( 0.000s)
        } [0.000s]
      } [0.003s]
      [Len-2||F4/4] (2020-12-03 14:23:13) {
        Fuzzy query: SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.0jrcj ?p1 ?o1 . ?o1 ?p2 ?o2 . }
        [2020-12-03 14:23:13] SPARQL Request: {
          SELECT DISTINCT ?p1 ?p2 WHERE { fb:m.0jrcj ?p1 ?o1 . ?o1 ?p2 ?o2 . }
          Query return lines = 250
        } [0.165s]
        Filt_Query_Ret = 24 / 250 ( 0.166s)
        [Len-2||F4/4||1/4-1] (2020-12-03 14:23:13) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0jrcj ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o1 ?p3 fb:m.01j9hw . }
          [2020-12-03 14:23:13] SPARQL Request: {
            SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0jrcj ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o1 ?p3 fb:m.01j9hw . }
            Query return lines = 0
          } [0.038s]
          Filt_Query_Ret = 0 / 0 ( 0.038s)
        } [0.038s]
        [Len-2||F4/4||1/4-2] (2020-12-03 14:23:13) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0jrcj ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o2 ?p3 fb:m.01j9hw . }
          [2020-12-03 14:23:13] SPARQL Request: {
            SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0jrcj ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o2 ?p3 fb:m.01j9hw . }
            Query return lines = 0
          } [0.594s]
          Filt_Query_Ret = 0 / 0 ( 0.594s)
        } [0.594s]
        [Len-2||F4/4||2/4-1] (2020-12-03 14:23:13) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0jrcj ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o1 ?p3 fb:m.0cskb . }
          [2020-12-03 14:23:13] SPARQL Request: {
            SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0jrcj ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o1 ?p3 fb:m.0cskb . }
            Query return lines = 0
          } [0.037s]
          Filt_Query_Ret = 0 / 0 ( 0.037s)
        } [0.037s]
        [Len-2||F4/4||2/4-2] (2020-12-03 14:23:13) {
          Fuzzy query: SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0jrcj ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o2 ?p3 fb:m.0cskb . }
          [2020-12-03 14:23:13] SPARQL Request: {
            SELECT DISTINCT ?p1 ?p2 ?p3 WHERE { fb:m.0jrcj ?p1 ?o1 . ?o1 ?p2 ?o2 . ?o2 ?p3 fb:m.0cskb . }
            Query return lines = 0
          } [1.968s]
          Filt_Query_Ret = 0 / 0 ( 1.968s)
        } [1.968s]
      } [2.803s]
      161 coarse schemas retrieved from scratch.
      Calculating F1 for 161 coarse schemas: {
        Current: 0 / 161
        Checking schema 0 / 161: {
          [('Main', '==', 'm.01j9hw', ['fictional_universe.fictional_character.appears_in_these_fictional_universes'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.appears_in_these_fictional_universes ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:15] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.appears_in_these_fictional_universes ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 1
            Final Answer: {'Buffyverse'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.009s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.009s]
        Checking schema 1 / 161: {
          [('Main', '==', 'm.01j9hw', ['fictional_universe.fictional_character.powers_or_abilities'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.powers_or_abilities ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:15] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.powers_or_abilities ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 3
            Final Answer: {'Hand-to-hand combat', 'Superhuman strength', 'Weapons Specialist'}
            Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.017s]
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.017s]
        Checking schema 2 / 161: {
          [('Main', '==', 'm.01j9hw', ['fictional_universe.fictional_character.occupation'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.occupation ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:15] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.occupation ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 1
            Final Answer: {'Soldier'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.016s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.016s]
        Checking schema 3 / 161: {
          [('Main', '==', 'm.01j9hw', ['fictional_universe.fictional_character.organizations'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.organizations ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:15] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.organizations ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 1
            Final Answer: {'Initiative'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.009s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.009s]
        Checking schema 4 / 161: {
          [('Main', '==', 'm.01j9hw', ['fictional_universe.fictional_character.species'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.species ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:15] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.species ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 1
            Final Answer: {'Human'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.015s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.015s]
        Checking schema 5 / 161: {
          [('Main', '==', 'm.01j9hw', ['fictional_universe.fictional_character.gender'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.gender ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:15] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.gender ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 1
            Final Answer: {'Male'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.006s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.006s]
        Checking schema 6 / 161: {
          [('Main', '==', 'm.01j9hw', ['fictional_universe.fictional_character.character_created_by'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.character_created_by ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:15] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.character_created_by ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 1
            Final Answer: {'Joss Whedon'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.013s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.013s]
        Checking schema 7 / 161: {
          [('Main', '==', 'm.01j9hw', ['fictional_universe.fictional_character.places_lived'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.places_lived ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:15] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.places_lived ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 1
            Final Answer: {'Sunnydale'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        Checking schema 8 / 161: {
          [('Main', '==', 'm.01j9hw', ['fictional_universe.fictional_character.place_of_birth'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.place_of_birth ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:15] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.place_of_birth ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 1
            Final Answer: {'Iowa'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        Checking schema 9 / 161: {
          [('Main', '==', 'm.01j9hw', ['fictional_universe.fictional_character.education'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.education ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.education ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 1
            Final Answer: {'University of California, Sunnydale'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.005s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.005s]
        Checking schema 10 / 161: {
          [('Main', '==', 'm.01j9hw', ['fictional_universe.fictional_character.appears_in_these_fictional_universes']), ('Entity', '==', 'm.0cskb', ['fictional_universe.fictional_universe.works_set_here'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.appears_in_these_fictional_universes ?o1 . ?o1 fb:fictional_universe.fictional_universe.works_set_here fb:m.0cskb . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.appears_in_these_fictional_universes ?o1 . ?o1 fb:fictional_universe.fictional_universe.works_set_here fb:m.0cskb . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01j9hw', 'm.0cskb'}
            Query return lines = 1
            Final Answer: {'Buffyverse'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.009s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.009s]
        Checking schema 11 / 161: {
          [('Main', '==', 'm.01j9hw', ['fictional_universe.fictional_character.places_lived']), ('Entity', '==', 'm.0cskb', ['fictional_universe.fictional_setting.works_set_here'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.places_lived ?o1 . ?o1 fb:fictional_universe.fictional_setting.works_set_here fb:m.0cskb . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.places_lived ?o1 . ?o1 fb:fictional_universe.fictional_setting.works_set_here fb:m.0cskb . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01j9hw', 'm.0cskb'}
            Query return lines = 1
            Final Answer: {'Sunnydale'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.008s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.008s]
        Checking schema 12 / 161: {
          [('Main', '==', 'm.01j9hw', ['fictional_universe.fictional_character.appears_in_these_fictional_universes']), ('Entity', '==', 'm.0cskb', ['fictional_universe.fictional_universe.works_set_here'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.appears_in_these_fictional_universes ?o1 . ?o1 fb:fictional_universe.fictional_universe.works_set_here fb:m.0cskb . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 13 / 161: {
          [('Main', '==', 'm.01j9hw', ['fictional_universe.fictional_character.places_lived']), ('Entity', '==', 'm.0cskb', ['fictional_universe.fictional_setting.works_set_here'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.places_lived ?o1 . ?o1 fb:fictional_universe.fictional_setting.works_set_here fb:m.0cskb . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 14 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.air_date_of_first_episode'])]
          var_types: None
          SELECT DISTINCT ?o1 WHERE { fb:m.0cskb fb:tv.tv_program.air_date_of_first_episode ?o1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 WHERE { fb:m.0cskb fb:tv.tv_program.air_date_of_first_episode ?o1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 1
            Final Answer: {'1997'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.005s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.005s]
        Checking schema 15 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.seasons'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.seasons ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.seasons ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 8
            Final Answer: {'Buffy the Vampire Slayer Season 1', 'Buffy the Vampire Slayer Season 7', 'Buffy the Vampire Slayer - Season 6', 'Buffy the Vampire Slayer - Season 0', 'Buffy the Vampire Slayer Season 3', 'Buffy the Vampire Slayer Season 5', 'Buffy the Vampire Slayer Season 2', 'Buffy the Vampire Slayer Season 4'}
            Answers = 8, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 8, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        Checking schema 16 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.genre'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.genre ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.genre ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 12
            Final Answer: {'Comedy-drama', 'Comedy film', 'Action/Adventure', 'Paranormal romance', 'Action', 'Drama', 'Supernatural drama', 'Supernatural', 'Horror', 'Fantasy', 'Adventure film', 'Comedy'}
            Answers = 12, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.011s]
          Answers = 12, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.011s]
        Checking schema 17 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.number_of_seasons'])]
          var_types: None
          SELECT DISTINCT ?o1 WHERE { fb:m.0cskb fb:tv.tv_program.number_of_seasons ?o1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 WHERE { fb:m.0cskb fb:tv.tv_program.number_of_seasons ?o1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 1
            Final Answer: {'7'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.009s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.009s]
        Checking schema 18 / 161: {
          [('Main', '==', 'm.0cskb', ['fictional_universe.work_of_fiction.part_of_these_fictional_universes'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:fictional_universe.work_of_fiction.part_of_these_fictional_universes ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:fictional_universe.work_of_fiction.part_of_these_fictional_universes ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 1
            Final Answer: {'Buffyverse'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.004s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.004s]
        Checking schema 19 / 161: {
          [('Main', '==', 'm.0cskb', ['broadcast.broadcast.distributor'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:broadcast.broadcast.distributor ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:broadcast.broadcast.distributor ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 1
            Final Answer: {'20th Television'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.022s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.022s]
        Checking schema 20 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.episodes'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.episodes ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.episodes ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 144
            Final Answer: {'I Only Have Eyes for You', 'Triangle', 'Restless', 'Go Fish', 'The Puppet Show', 'Living Conditions', 'Crush', 'Consequences', 'Hush', 'Get It Done', 'Dead Things', "What's My Line, Part One", 'Anne', 'Buffy vs. Dracula', 'Bargaining, Part Two', 'Older and Far Away', 'Chosen', "Dead Man's Party", 'Homecoming', 'The Freshman', 'School Hard', 'Beauty and the Beasts', 'First Date', 'Becoming, Part One', 'Bad Eggs', "Teacher's Pet", 'Normal Again', 'Dirty Girls', 'Graduation Day, Part Two', 'No Place Like Home', 'Blood Ties', 'Gone', 'The I in Team', 'Entropy', 'Inca Mummy Girl', 'All the Way', 'I, Robot... You, Jane', 'Angel', 'Helpless', 'Goodbye Iowa', 'Lie to Me', 'Him', 'Becoming, Part Two', 'Grave', 'Bring on the Night', 'Doomed', 'Checkpoint', 'Spiral', 'The Harvest (2)', 'Phases', 'Tabula Rasa', 'Family', "What's My Line, Part Two", 'Lessons', 'Two to Go', 'Lies My Parents Told Me', 'Bewitched, Bothered and Bewildered', 'Killed by Death', 'Intervention', 'Doublemeat Palace', 'Band Candy', 'Where the Wild Things Are', 'Revelations', 'Enemies', 'As You Were', 'Wild at Heart', 'Empty Places', 'The Weight of the World', 'Villains', 'Beneath You', 'The Body', 'Wrecked', 'Life Serial', 'Prophecy Girl', 'Conversations with Dead People', 'Pangs', 'Real Me', 'Out of Mind, Out of Sight', 'Primeval', 'Who Are You', 'Something Blue', 'Some Assembly Required', 'Passion', 'Never Leave Me', 'Storyteller', 'Selfless', 'Bad Girls', 'Touched', 'Superstar', 'Reptile Boy', 'The Yoko Factor', 'End of Days', 'Help', 'Graduation Day, Part One', 'Choices', 'Earshot', 'Fear, Itself', 'The Initiative', "This Year's Girl", 'Doppelgangland', 'The Harsh Light of Day', 'The Wish', 'Showtime', 'Flooded', 'Once More, With Feeling', 'Innocence', 'After Life', 'Seeing Red', 'Surprise', 'The Dark Age', 'Into the Woods', 'A New Man', 'Witch', 'New Moon Rising', 'Fool for Love', 'When She Was Bad', 'Same Time, Same Place', 'Tough Love', 'Lovers Walk', 'The Gift', 'Bargaining, Part One', 'Sleeper', 'Forever', 'Gingerbread', 'Ted', 'Faith, Hope & Trick', 'I Was Made to Love You', 'Amends', 'Nightmares', 'Potential', 'Listening to Fear', 'Out of My Mind', 'The Prom', 'Unaired Buffy the Vampire Slayer pilot', 'The Zeppo', 'Shadow', 'Welcome to the Hellmouth (1)', 'Never Kill a Boy on the First Date', 'Beer Bad', "Hell's Bells", 'Smashed', 'The Killer in Me', 'Halloween', 'The Replacement'}
            Answers = 144, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.020s]
          Answers = 144, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.020s]
        Checking schema 21 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.currently_in_production'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.currently_in_production ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.currently_in_production ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 0
            Final Answer: set()
            Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
          } [0.027s]
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.027s]
        Checking schema 22 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.soundtrack'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.soundtrack ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.soundtrack ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 4
            Final Answer: {'Once More, With Feeling', 'Buffy the Vampire Slayer: The Album', 'Buffy the Vampire Slayer: Radio Sunnydale – Music from the TV Series', 'Buffy the Vampire Slayer: The Score'}
            Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.022s]
          Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.022s]
        Checking schema 23 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.episode_running_time'])]
          var_types: None
          SELECT DISTINCT ?o1 WHERE { fb:m.0cskb fb:tv.tv_program.episode_running_time ?o1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 WHERE { fb:m.0cskb fb:tv.tv_program.episode_running_time ?o1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 4
            Final Answer: {'42', '45', '60', '43'}
            Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.010s]
          Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.010s]
        Checking schema 24 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.spun_off_from'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.spun_off_from ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.spun_off_from ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 1
            Final Answer: {'Angel'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.020s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.020s]
        Checking schema 25 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.subjects'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.subjects ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.subjects ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 1
            Final Answer: {'Vampire'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.019s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.019s]
        Checking schema 26 / 161: {
          [('Main', '==', 'm.0cskb', ['media_common.netflix_title.netflix_genres'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:media_common.netflix_title.netflix_genres ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:media_common.netflix_title.netflix_genres ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 3
            Final Answer: {'Television', 'TV Sci-Fi & Fantasy', 'TV Action & Adventure'}
            Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.012s]
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.012s]
        Checking schema 27 / 161: {
          [('Main', '==', 'm.0cskb', ['fictional_universe.work_of_fiction.setting'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:fictional_universe.work_of_fiction.setting ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:fictional_universe.work_of_fiction.setting ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 2
            Final Answer: {'Sunnydale', 'Sunnydale High'}
            Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.019s]
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.019s]
        Checking schema 28 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.number_of_episodes'])]
          var_types: None
          SELECT DISTINCT ?o1 WHERE { fb:m.0cskb fb:tv.tv_program.number_of_episodes ?o1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 WHERE { fb:m.0cskb fb:tv.tv_program.number_of_episodes ?o1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 1
            Final Answer: {'144'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.013s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.013s]
        Checking schema 29 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.languages'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.languages ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.languages ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 1
            Final Answer: {'English Language'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.005s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.005s]
        Checking schema 30 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.theme_song'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.theme_song ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.theme_song ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 1
            Final Answer: {'Buffy the Vampire Slayer Theme Song'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.009s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.009s]
        Checking schema 31 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.spin_offs'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.spin_offs ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.spin_offs ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 1
            Final Answer: {'Angel'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.010s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.011s]
        Checking schema 32 / 161: {
          [('Main', '==', 'm.0cskb', ['book.book_subject.works'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:book.book_subject.works ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:book.book_subject.works ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 1
            Final Answer: {'What Would Buffy Do?: The Vampire Slayer as Spiritual Guide'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.009s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.009s]
        Checking schema 33 / 161: {
          [('Main', '==', 'm.0cskb', ['base.parody.parodied_subject.parodies'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:base.parody.parodied_subject.parodies ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:base.parody.parodied_subject.parodies ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 5
            Final Answer: {'Bunny the Vampire Slayer', 'Chucky Vs. Patch Dolls', 'Buffy the Umpire Slayer', 'Poofy the Vampire Slayer', 'Buffy the Vampire Slayer/Seinfeld sketch'}
            Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.006s]
          Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.006s]
        Checking schema 34 / 161: {
          [('Main', '==', 'm.0cskb', ['user.robert.default_domain.rated_tv_program.ew_rating'])]
          var_types: None
          SELECT DISTINCT ?o1 WHERE { fb:m.0cskb fb:user.robert.default_domain.rated_tv_program.ew_rating ?o1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 WHERE { fb:m.0cskb fb:user.robert.default_domain.rated_tv_program.ew_rating ?o1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 1
            Final Answer: {'92'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.009s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.009s]
        Checking schema 35 / 161: {
          [('Main', '==', 'm.0cskb', ['fictional_universe.work_of_fiction.part_of_these_fictional_universes']), ('Entity', '==', 'm.01j9hw', ['fictional_universe.fictional_universe.characters'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:fictional_universe.work_of_fiction.part_of_these_fictional_universes ?o1 . ?o1 fb:fictional_universe.fictional_universe.characters fb:m.01j9hw . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:fictional_universe.work_of_fiction.part_of_these_fictional_universes ?o1 . ?o1 fb:fictional_universe.fictional_universe.characters fb:m.01j9hw . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01j9hw', 'm.0cskb'}
            Query return lines = 1
            Final Answer: {'Buffyverse'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.008s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.008s]
        Checking schema 36 / 161: {
          [('Main', '==', 'm.0cskb', ['fictional_universe.work_of_fiction.setting']), ('Entity', '==', 'm.01j9hw', ['fictional_universe.fictional_setting.characters_that_have_lived_here'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:fictional_universe.work_of_fiction.setting ?o1 . ?o1 fb:fictional_universe.fictional_setting.characters_that_have_lived_here fb:m.01j9hw . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:fictional_universe.work_of_fiction.setting ?o1 . ?o1 fb:fictional_universe.fictional_setting.characters_that_have_lived_here fb:m.01j9hw . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.01j9hw', 'm.0cskb'}
            Query return lines = 1
            Final Answer: {'Sunnydale'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.006s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.006s]
        Checking schema 37 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.air_date_of_first_episode'])]
          var_types: None
          SELECT DISTINCT ?o1 WHERE { fb:m.0cskb fb:tv.tv_program.air_date_of_first_episode ?o1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 38 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.seasons'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.seasons ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 8, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 39 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.genre'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.genre ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 12, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 40 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.number_of_seasons'])]
          var_types: None
          SELECT DISTINCT ?o1 WHERE { fb:m.0cskb fb:tv.tv_program.number_of_seasons ?o1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 41 / 161: {
          [('Main', '==', 'm.0cskb', ['fictional_universe.work_of_fiction.part_of_these_fictional_universes'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:fictional_universe.work_of_fiction.part_of_these_fictional_universes ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 42 / 161: {
          [('Main', '==', 'm.0cskb', ['broadcast.broadcast.distributor'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:broadcast.broadcast.distributor ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 43 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.episodes'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.episodes ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 144, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 44 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.currently_in_production'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.currently_in_production ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 45 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.soundtrack'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.soundtrack ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 46 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.episode_running_time'])]
          var_types: None
          SELECT DISTINCT ?o1 WHERE { fb:m.0cskb fb:tv.tv_program.episode_running_time ?o1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 47 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.spun_off_from'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.spun_off_from ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 48 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.subjects'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.subjects ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 49 / 161: {
          [('Main', '==', 'm.0cskb', ['media_common.netflix_title.netflix_genres'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:media_common.netflix_title.netflix_genres ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 50 / 161: {
          [('Main', '==', 'm.0cskb', ['fictional_universe.work_of_fiction.setting'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:fictional_universe.work_of_fiction.setting ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 51 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.number_of_episodes'])]
          var_types: None
          SELECT DISTINCT ?o1 WHERE { fb:m.0cskb fb:tv.tv_program.number_of_episodes ?o1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 52 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.languages'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.languages ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 53 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.theme_song'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.theme_song ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 54 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.spin_offs'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:tv.tv_program.spin_offs ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 55 / 161: {
          [('Main', '==', 'm.0cskb', ['book.book_subject.works'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:book.book_subject.works ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 56 / 161: {
          [('Main', '==', 'm.0cskb', ['base.parody.parodied_subject.parodies'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:base.parody.parodied_subject.parodies ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 57 / 161: {
          [('Main', '==', 'm.0cskb', ['user.robert.default_domain.rated_tv_program.ew_rating'])]
          var_types: None
          SELECT DISTINCT ?o1 WHERE { fb:m.0cskb fb:user.robert.default_domain.rated_tv_program.ew_rating ?o1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 58 / 161: {
          [('Main', '==', 'm.0cskb', ['fictional_universe.work_of_fiction.part_of_these_fictional_universes']), ('Entity', '==', 'm.01j9hw', ['fictional_universe.fictional_universe.characters'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:fictional_universe.work_of_fiction.part_of_these_fictional_universes ?o1 . ?o1 fb:fictional_universe.fictional_universe.characters fb:m.01j9hw . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 59 / 161: {
          [('Main', '==', 'm.0cskb', ['fictional_universe.work_of_fiction.setting']), ('Entity', '==', 'm.01j9hw', ['fictional_universe.fictional_setting.characters_that_have_lived_here'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:fictional_universe.work_of_fiction.setting ?o1 . ?o1 fb:fictional_universe.fictional_setting.characters_that_have_lived_here fb:m.01j9hw . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 60 / 161: {
          [('Main', '==', 'm.0jrcj', ['music.artist.genre'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0jrcj fb:music.artist.genre ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0jrcj fb:music.artist.genre ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 5
            Final Answer: {'Thrash metal', 'Speed metal', 'Groove metal', 'Heavy metal', 'Rock music'}
            Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.017s]
          Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.018s]
        Checking schema 61 / 161: {
          [('Main', '==', 'm.0jrcj', ['music.artist.label'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0jrcj fb:music.artist.label ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0jrcj fb:music.artist.label ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 6
            Final Answer: {'Def Jam Recordings', 'Warner Bros. Records', 'American Recordings', 'Columbia', 'Metal Blade Records', 'Sony Music Entertainment'}
            Answers = 6, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.016s]
          Answers = 6, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.016s]
        Checking schema 62 / 161: {
          [('Main', '==', 'm.0jrcj', ['broadcast.artist.content'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0jrcj fb:broadcast.artist.content ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0jrcj fb:broadcast.artist.content ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 7
            Final Answer: {'Guitar World', 'Liquid Metal', 'Hard Rockin 80s', 'ChroniX Aggression', 'KNAC', 'RockRadio1', 'ChroniX Metal'}
            Answers = 7, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.016s]
          Answers = 7, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.016s]
        Checking schema 63 / 161: {
          [('Main', '==', 'm.0jrcj', ['music.producer.releases_produced'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0jrcj fb:music.producer.releases_produced ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0jrcj fb:music.producer.releases_produced ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 17
            Final Answer: {'South of Heaven', 'Undisputed Attitude', 'Live Undead', 'Reign in Blood', 'Seasons in the Abyss', 'Diabolus in Musica', 'Divine Intervention', 'Hell Awaits'}
            Answers = 8, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.017s]
          Answers = 8, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.017s]
        Checking schema 64 / 161: {
          [('Main', '==', 'm.0jrcj', ['music.artist.album'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0jrcj fb:music.artist.album ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0jrcj fb:music.artist.album ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 31
            Final Answer: {'War at the Warfield', 'God Hates Us All', 'The Big Four: Live from Sofia, Bulgaria', 'Serenity in Murder: Divine Live!', 'Seasons in the Abyss', 'Decade of Aggression', 'Eternal Pyre', 'World Painted Blood', 'South of Heaven', 'Live Undead', 'Diabolus in Musica', 'Still Reigning', 'Soundtrack to the Apocalypse', 'Show No Mercy', 'Stain of Mind + 4 Live Tracks', 'Reign in Blood', 'Divine Intervention', 'Haunting the Chapel', 'The Vinyl Conflict', 'Serenity in Murder', 'Undisputed Attitude', 'Stain of Mind', 'Christ Illusion', 'Praise of Death', 'Live Undead / Haunting the Chapel', 'God Send Death', 'Live Intrusion', 'Hate Worldwide', 'Eyes of the Insane', 'Hell Awaits'}
            Answers = 30, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 30, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        Checking schema 65 / 161: {
          [('Main', '==', 'm.0jrcj', ['music.artist.track'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0jrcj fb:music.artist.track ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0jrcj fb:music.artist.track ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 332
            Final Answer: {'Beast vs. South of Heaven', 'Beauty Through Order', 'Ghosts of War', 'In-A-Gadda-Da-Vida', 'Angel of Death (live in Canada 11/86)', 'Seasons in the Abyss (live in Michigan 6/91)', 'Here Comes the Pain', 'Unguarded Instinct', 'Darkness of Christ', 'Angel of Death (live)', 'Seasons in the Abyss', 'Necrophiliac (live in California 9/85)', 'Heaviest Band Award - Kerrang!', 'South of Heaven', 'Reborn', 'The Antichrist (live)', 'Expendable Youth', 'Angel of Death', 'Circle of Beliefs', 'Special Message', 'Angel Of Death', 'Mandatory Suicide (live)', 'Mr. Freeze', 'Seasons in the Abyss (alternative mix)', 'Disciple', 'Ddamm', 'Scrum', 'Ice Titan (live in California - 3/83)', 'Aggressive Perfector', 'Playing With Dolls', 'Fight Till Death', 'Spirit in Black', 'Fight Til Death', 'War Zone', 'Captor of Sin', 'EPK for Diabolus in Musica', 'South Of Heaven', 'Piece by Piece (Studio Rough Mix/outtake)', 'Haunting the Chapel', 'Blood Red', 'Divine Intervention', 'Snuff', 'Serenity in Murder', 'Screaming From the Sky', 'Chemical Warfare (live)', 'Eyes Of The Insane', 'Disorder', 'Addict', 'Evil Has No Boundaries (live)', 'Die by the Sword', 'Temptation', 'The Antichrist', 'Hand of Doom', 'Sex. Murder. Art. (live in California 5/98)', "Can't Stand You", 'Cleanse the Soul', 'Dead Skin Mask', 'Aggessive Perfector', 'Altar of Sacrifice', 'Seven Faces', 'Piece by Piece', 'Dittohead (live)', 'War Ensemble', 'World Painted Blood', 'The Final Command', 'Black Serenade', 'Consfearacy', 'Born to Be Wild', 'Gemini', 'Live Undead', 'Dittohead (live in California 5/98)', 'Seasons in the Abyss (Experimental version)', 'Sex. Murder. Art.', 'SS-3', 'Not of This God', 'Evil Has No Boundaries', 'Dittohead', 'Flesh Storm', 'Antichrist', 'Jihad', 'Verbal Abuse / Leeches', 'Black Magic (live)', 'Mind Control', 'Read Between the Lies', 'Stain Of Mind', 'Crionics', 'Raining Blood', 'Raining Blood (live in Canada 11/86)', "Fight 'til Death", 'Hallowed Point', 'Skeletons of Society', 'Criminally Insane (remix)', 'Spill the Blood', 'Bitter Peace', 'Final Six', 'Seasons in the Abyss (album version)', 'Memories of Tomorrow', 'Threshold', 'Disintegration / Free Money', 'Scarstruck', 'Unit 731', 'Catalyst', 'Mandatory Suicide (live in Michigan 6/91)', 'South of Heaven (live)', 'Metalstorm / Face the Slayer', 'Crypts of Eternity', 'Tormentor', 'Killing Fields', 'Spiritual Law', 'Human Strain', 'Richard Hung Himself', 'Public Display of Dismemberment', 'Die by the Sword (live)', 'Human Disease', 'Aggresive Perfector (live)', 'No Remorse (I Wanna Die)', 'Abolish Government / Superficial Love', 'Necrophiliac', 'Hardening of the Arteries', 'Necrophobic', 'Skeleton Christ', 'Captor of Sin (live)', 'Divine Intervention (live)', "Mind Control (live in Brazil '94)", 'In the Name of God', 'Jesus Saves', 'Show No Mercy', 'Fictional Reality', 'Evil Has No Boundaires', 'Seasons in the Abyss (edit)', 'Bloodline', 'Sick Boy', 'New Faith (live)', 'Kill Again', 'Dead Skin Mask (live)', 'Stain of Mind', "Filler / I Don't Want to Hear It", 'Violent Pacification', "Raining Blood (Jeff's Home Recording)", 'Desire', 'Perversions of Pain', "South of Heaven (Jeff's Home Recording)", 'Point', 'Psychopathy Red', 'Black Serenade (alternate version)', 'God Hates Us All', 'Exile', 'Dissident Aggressor', 'Show No Mercy (live)', 'Behind the Crooked Cross', 'New Faith', 'Supremist', 'At Dawn They Sleep (live)', "Fight Till Death (Tom Araya's Garage - 12/83)", 'Black Magic', "The Antichrist (Tom Araya's Garage - 12/83)", 'Chemical Warfare', "Slayer On Tour '07", 'Raining Blood (live)', 'Wicked', 'Disorder (feat. Ice-T)', 'Silent Scream', 'I Hate You', "Bloodline (live in Sweden '02)", 'Postmortem', 'Cast Down', 'Catatonic', 'Love to Hate', 'Deviance', 'Eyes of the Insane (live)', 'Mandatory Suicide', 'Born of Fire', 'At Dawn They Sleep', '213', "I'm Gonna Be Your God", 'Payback', 'Metal Storm / Face the Slayer', 'Guilty of Being White', "Payback (live in Sweden '02)", 'Final Command', 'Cult', 'Aggresive Perfector', 'Praise of Death', 'Serenity in Murder (album version)', 'Overt Enemy', 'Epidemic', 'God Send Death', "Death's Head", 'Americon', 'Hate Worldwide', 'Criminally Insane', 'Hell Awaits'}
            Answers = 192, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.017s]
          Answers = 192, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.017s]
        Checking schema 66 / 161: {
          [('Main', '==', 'm.0jrcj', ['music.artist.active_start'])]
          var_types: None
          SELECT DISTINCT ?o1 WHERE { fb:m.0jrcj fb:music.artist.active_start ?o1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 WHERE { fb:m.0jrcj fb:music.artist.active_start ?o1 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 1
            Final Answer: {'1981'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.006s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.006s]
        Checking schema 67 / 161: {
          [('Main', '==', 'm.0jrcj', ['music.artist.origin'])]
          var_types: None
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0jrcj fb:music.artist.origin ?o1 . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0jrcj fb:music.artist.origin ?o1 . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 1
            Final Answer: {'Huntington Park'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        Checking schema 68 / 161: {
          [('Main', '==', 'm.01j9hw', ['tv.tv_character.appeared_in_tv_program', 'tv.regular_tv_appearance.seasons'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:tv.tv_character.appeared_in_tv_program ?o1 . ?o1 fb:tv.regular_tv_appearance.seasons ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:tv.tv_character.appeared_in_tv_program ?o1 . ?o1 fb:tv.regular_tv_appearance.seasons ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 1
            Final Answer: {'Buffy the Vampire Slayer Season 4'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.030s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.030s]
        Checking schema 69 / 161: {
          [('Main', '==', 'm.01j9hw', ['tv.tv_character.appeared_in_tv_program', 'tv.regular_tv_appearance.from'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.01j9hw fb:tv.tv_character.appeared_in_tv_program ?o1 . ?o1 fb:tv.regular_tv_appearance.from ?o2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 WHERE { fb:m.01j9hw fb:tv.tv_character.appeared_in_tv_program ?o1 . ?o1 fb:tv.regular_tv_appearance.from ?o2 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 1
            Final Answer: {'1999'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.034s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.034s]
        Checking schema 70 / 161: {
          [('Main', '==', 'm.01j9hw', ['cvg.game_character.games', 'cvg.game_performance.character'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:cvg.game_character.games ?o1 . ?o1 fb:cvg.game_performance.character ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:cvg.game_character.games ?o1 . ?o1 fb:cvg.game_performance.character ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 1
            Final Answer: {'Riley Finn'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.011s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.011s]
        Checking schema 71 / 161: {
          [('Main', '==', 'm.01j9hw', ['tv.tv_character.appeared_in_tv_episodes', 'tv.tv_guest_role.character'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:tv.tv_character.appeared_in_tv_episodes ?o1 . ?o1 fb:tv.tv_guest_role.character ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:tv.tv_character.appeared_in_tv_episodes ?o1 . ?o1 fb:tv.tv_guest_role.character ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 1
            Final Answer: {'Riley Finn'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.011s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.011s]
        Checking schema 72 / 161: {
          [('Main', '==', 'm.01j9hw', ['tv.tv_character.appeared_in_tv_program', 'tv.regular_tv_appearance.actor'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:tv.tv_character.appeared_in_tv_program ?o1 . ?o1 fb:tv.regular_tv_appearance.actor ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:tv.tv_character.appeared_in_tv_program ?o1 . ?o1 fb:tv.regular_tv_appearance.actor ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 1
            Final Answer: {'Marc Blucas'}
            Answers = 1, P = 1.000000, R = 1.000000, F1 = 1.000000
          } [0.006s]
          Answers = 1, P = 1.000000, R = 1.000000, F1 = 1.000000
        } [0.006s]
        Checking schema 73 / 161: {
          [('Main', '==', 'm.01j9hw', ['tv.tv_character.appeared_in_tv_program', 'tv.regular_tv_appearance.to'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.01j9hw fb:tv.tv_character.appeared_in_tv_program ?o1 . ?o1 fb:tv.regular_tv_appearance.to ?o2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 WHERE { fb:m.01j9hw fb:tv.tv_character.appeared_in_tv_program ?o1 . ?o1 fb:tv.regular_tv_appearance.to ?o2 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 1
            Final Answer: {'2002'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.015s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.015s]
        Checking schema 74 / 161: {
          [('Main', '==', 'm.01j9hw', ['cvg.game_character.games', 'cvg.game_performance.game'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:cvg.game_character.games ?o1 . ?o1 fb:cvg.game_performance.game ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:cvg.game_character.games ?o1 . ?o1 fb:cvg.game_performance.game ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 1
            Final Answer: {'Buffy the Vampire Slayer: Wrath of the Darkhul King'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.014s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.015s]
        Checking schema 75 / 161: {
          [('Main', '==', 'm.01j9hw', ['tv.tv_character.appeared_in_tv_episodes', 'tv.tv_guest_role.actor'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:tv.tv_character.appeared_in_tv_episodes ?o1 . ?o1 fb:tv.tv_guest_role.actor ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:tv.tv_character.appeared_in_tv_episodes ?o1 . ?o1 fb:tv.tv_guest_role.actor ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 1
            Final Answer: {'Marc Blucas'}
            Answers = 1, P = 1.000000, R = 1.000000, F1 = 1.000000
          } [0.019s]
          Answers = 1, P = 1.000000, R = 1.000000, F1 = 1.000000
        } [0.019s]
        Checking schema 76 / 161: {
          [('Main', '==', 'm.01j9hw', ['tv.tv_character.appeared_in_tv_program', 'tv.regular_tv_appearance.character'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:tv.tv_character.appeared_in_tv_program ?o1 . ?o1 fb:tv.regular_tv_appearance.character ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:tv.tv_character.appeared_in_tv_program ?o1 . ?o1 fb:tv.regular_tv_appearance.character ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 1
            Final Answer: {'Riley Finn'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.016s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.016s]
        Checking schema 77 / 161: {
          [('Main', '==', 'm.01j9hw', ['tv.tv_character.appeared_in_tv_episodes', 'tv.tv_guest_role.episodes_appeared_in'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:tv.tv_character.appeared_in_tv_episodes ?o1 . ?o1 fb:tv.tv_guest_role.episodes_appeared_in ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:tv.tv_character.appeared_in_tv_episodes ?o1 . ?o1 fb:tv.tv_guest_role.episodes_appeared_in ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 1
            Final Answer: {'Pangs'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.018s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.018s]
        Checking schema 78 / 161: {
          [('Main', '==', 'm.01j9hw', ['fictional_universe.fictional_character.romantically_involved_with', 'fictional_universe.romantic_involvement.partner'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.romantically_involved_with ?o1 . ?o1 fb:fictional_universe.romantic_involvement.partner ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:fictional_universe.fictional_character.romantically_involved_with ?o1 . ?o1 fb:fictional_universe.romantic_involvement.partner ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.01j9hw'}
            Query return lines = 2
            Final Answer: {'Buffy Summers'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.022s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.022s]
        Checking schema 79 / 161: {
          [('Main', '==', 'm.01j9hw', ['tv.tv_character.appeared_in_tv_program', 'tv.regular_tv_appearance.seasons']), ('Entity', '==', 'm.0cskb', ['tv.tv_series_season.series'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:tv.tv_character.appeared_in_tv_program ?o1 . ?o1 fb:tv.regular_tv_appearance.seasons ?o2 . ?o2 fb:tv.tv_series_season.series fb:m.0cskb . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:tv.tv_character.appeared_in_tv_program ?o1 . ?o1 fb:tv.regular_tv_appearance.seasons ?o2 . ?o2 fb:tv.tv_series_season.series fb:m.0cskb . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.01j9hw', 'm.0cskb'}
            Query return lines = 1
            Final Answer: {'Buffy the Vampire Slayer Season 4'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.018s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.018s]
        Checking schema 80 / 161: {
          [('Main', '==', 'm.01j9hw', ['tv.tv_character.appeared_in_tv_program', 'tv.regular_tv_appearance.seasons']), ('Entity', '==', 'm.0cskb', ['tv.tv_series_season.series'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.01j9hw fb:tv.tv_character.appeared_in_tv_program ?o1 . ?o1 fb:tv.regular_tv_appearance.seasons ?o2 . ?o2 fb:tv.tv_series_season.series fb:m.0cskb . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 81 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_nominated_work.award_nominations', 'award.award_nomination.award'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_nominated_work.award_nominations ?o1 . ?o1 fb:award.award_nomination.award ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_nominated_work.award_nominations ?o1 . ?o1 fb:award.award_nomination.award ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 23
            Final Answer: {'Satellite Award for Best Supporting Actor - Drama Series', 'Primetime Emmy Award for Outstanding Hairstyling For A Series', 'Satellite Award for Best Overall DVD', 'Kids’ Choice Award for Favorite TV Friends', 'Primetime Emmy Award for Outstanding Sound Editing For A Series', 'Primetime Emmy Award for Outstanding Makeup For A Series', "Kids' Choice Award for Favorite TV Show", 'Golden Globe Award for Best Performance by an Actress In A Television Series - Drama', 'Primetime Emmy Award for Outstanding Writing for a Drama Series', 'Kids’ Choice Award for Favorite Female Buttkicker', 'Primetime Emmy Award for Outstanding Makeup For A Series (Non-Prosthetic)', 'Satellite Award for Best Supporting Actress - Drama Series', 'Primetime Emmy Award for Outstanding Music Direction', 'Primetime Emmy Award for Outstanding Special Visual Effects For A Series', 'Satellite Award for Best DVD Release of TV Shows', "Kids' Choice Award for Favorite TV Actress", 'Primetime Emmy Award for Outstanding Makeup For A Series (Prosthetic)', 'Satellite Award for Best Actress – Television Series Drama', 'Satellite Special Achievement Award for Outstanding Television Ensemble', 'Satellite Award for Best DVD Extra', 'Primetime Emmy Award for Outstanding Music Composition for a Series', 'Satellite Award for Best Television Series – Drama', 'Primetime Emmy Award for Outstanding Cinematography for a Single-Camera Series'}
            Answers = 23, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.015s]
          Answers = 23, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.016s]
        Checking schema 82 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.regular_cast', 'tv.regular_tv_appearance.series'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.regular_cast ?o1 . ?o1 fb:tv.regular_tv_appearance.series ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.regular_cast ?o1 . ?o1 fb:tv.regular_tv_appearance.series ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 1
            Final Answer: {'Buffy the Vampire Slayer'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.017s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.017s]
        Checking schema 83 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.regular_cast', 'tv.regular_tv_appearance.seasons'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.regular_cast ?o1 . ?o1 fb:tv.regular_tv_appearance.seasons ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.regular_cast ?o1 . ?o1 fb:tv.regular_tv_appearance.seasons ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 7
            Final Answer: {'Buffy the Vampire Slayer Season 1', 'Buffy the Vampire Slayer Season 7', 'Buffy the Vampire Slayer - Season 6', 'Buffy the Vampire Slayer Season 3', 'Buffy the Vampire Slayer Season 5', 'Buffy the Vampire Slayer Season 2', 'Buffy the Vampire Slayer Season 4'}
            Answers = 7, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.018s]
          Answers = 7, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.018s]
        Checking schema 84 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.regular_cast', 'tv.regular_tv_appearance.from'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:tv.tv_program.regular_cast ?o1 . ?o1 fb:tv.regular_tv_appearance.from ?o2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:tv.tv_program.regular_cast ?o1 . ?o1 fb:tv.regular_tv_appearance.from ?o2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 3
            Final Answer: {'2000', '1998', '1997'}
            Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.024s]
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.024s]
        Checking schema 85 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_winning_work.awards_won', 'award.award_honor.year'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:award.award_winning_work.awards_won ?o1 . ?o1 fb:award.award_honor.year ?o2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:award.award_winning_work.awards_won ?o1 . ?o1 fb:award.award_honor.year ?o2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 3
            Final Answer: {'1998', '2001', '2002'}
            Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.015s]
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.015s]
        Checking schema 86 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_winning_work.awards_won', 'award.award_honor.notes_description'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_winning_work.awards_won ?o1 . ?o1 fb:award.award_honor.notes_description ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_winning_work.awards_won ?o1 . ?o1 fb:award.award_honor.notes_description ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 0
            Final Answer: set()
            Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
          } [0.022s]
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.022s]
        Checking schema 87 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_winning_work.awards_won', 'award.award_honor.honored_for'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_winning_work.awards_won ?o1 . ?o1 fb:award.award_honor.honored_for ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_winning_work.awards_won ?o1 . ?o1 fb:award.award_honor.honored_for ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 1
            Final Answer: {'Buffy the Vampire Slayer'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.029s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.029s]
        Checking schema 88 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.recurring_writers', 'tv.tv_program_writer_relationship.tv_program'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.recurring_writers ?o1 . ?o1 fb:tv.tv_program_writer_relationship.tv_program ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.recurring_writers ?o1 . ?o1 fb:tv.tv_program_writer_relationship.tv_program ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 1
            Final Answer: {'Buffy the Vampire Slayer'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        Checking schema 89 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.recurring_writers', 'tv.tv_program_writer_relationship.start_date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:tv.tv_program.recurring_writers ?o1 . ?o1 fb:tv.tv_program_writer_relationship.start_date ?o2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:tv.tv_program.recurring_writers ?o1 . ?o1 fb:tv.tv_program_writer_relationship.start_date ?o2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 7
            Final Answer: {'2000', '1998', '1997', '1996', '1999', '2001', '2002'}
            Answers = 7, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.005s]
          Answers = 7, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.005s]
        Checking schema 90 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.original_network', 'tv.tv_network_duration.from'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:tv.tv_program.original_network ?o1 . ?o1 fb:tv.tv_network_duration.from ?o2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:tv.tv_program.original_network ?o1 . ?o1 fb:tv.tv_network_duration.from ?o2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 2
            Final Answer: {'2001', '1997'}
            Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.008s]
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.008s]
        Checking schema 91 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.tv_producer', 'tv.tv_producer_term.producer'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.tv_producer ?o1 . ?o1 fb:tv.tv_producer_term.producer ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.tv_producer ?o1 . ?o1 fb:tv.tv_producer_term.producer ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 6
            Final Answer: {'Marti Noxon', 'Gail Berman', 'John Bennett Perry', 'Joss Whedon', 'David Fury', 'David Greenwalt'}
            Answers = 6, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.006s]
          Answers = 6, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.006s]
        Checking schema 92 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_nominated_work.award_nominations', 'award.award_nomination.nominated_for'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_nominated_work.award_nominations ?o1 . ?o1 fb:award.award_nomination.nominated_for ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_nominated_work.award_nominations ?o1 . ?o1 fb:award.award_nomination.nominated_for ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 1
            Final Answer: {'Buffy the Vampire Slayer'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.004s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.004s]
        Checking schema 93 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_nominated_work.award_nominations', 'award.award_nomination.year'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:award.award_nominated_work.award_nominations ?o1 . ?o1 fb:award.award_nomination.year ?o2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:award.award_nominated_work.award_nominations ?o1 . ?o1 fb:award.award_nomination.year ?o2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 8
            Final Answer: {'2000', '1998', '1997', '1999', '2003', '2001', '2005', '2002'}
            Answers = 8, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 8, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        Checking schema 94 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.regular_cast', 'tv.regular_tv_appearance.actor'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.regular_cast ?o1 . ?o1 fb:tv.regular_tv_appearance.actor ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.regular_cast ?o1 . ?o1 fb:tv.regular_tv_appearance.actor ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 17
            Final Answer: {'Nicholas Brendon', 'Marc Blucas', 'Emma Caulfield', 'Sarah Michelle Gellar', 'Seth Green', 'Nathan Fillion', 'Amber Benson', 'Anthony Stewart Head', 'Juliet Landau', 'Danny Strong', 'Charisma Carpenter', 'Eliza Dushku', 'James Marsters', 'Alyson Hannigan', 'David Boreanaz', 'Kristine Sutherland', 'Michelle Trachtenberg'}
            Answers = 17, P = 0.058824, R = 1.000000, F1 = 0.111111
          } [0.008s]
          Answers = 17, P = 0.058824, R = 1.000000, F1 = 0.111111
        } [0.008s]
        Checking schema 95 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.regular_cast', 'tv.regular_tv_appearance.to'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:tv.tv_program.regular_cast ?o1 . ?o1 fb:tv.regular_tv_appearance.to ?o2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:tv.tv_program.regular_cast ?o1 . ?o1 fb:tv.regular_tv_appearance.to ?o2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 1
            Final Answer: {'2003'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.008s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.008s]
        Checking schema 96 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_winning_work.awards_won', 'award.award_honor.award_winner'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_winning_work.awards_won ?o1 . ?o1 fb:award.award_honor.award_winner ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_winning_work.awards_won ?o1 . ?o1 fb:award.award_honor.award_winner ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 15
            Final Answer: {'Michael F. Blake', 'Christophe Beck', 'Sarah Michelle Gellar', 'Craig Reardon', 'John Vulich', 'Dayne Johnson', 'Mark Shostrom', 'John Maldonado', 'Brigette A. Myre', 'John Wheaton', 'Robin Beauchesne', 'Margie Latinopoulos', 'Alan Friedman', 'Gerald Quist', 'Todd McIntosh'}
            Answers = 15, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.005s]
          Answers = 15, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.005s]
        Checking schema 97 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_winning_work.awards_won', 'award.award_honor.ceremony'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_winning_work.awards_won ?o1 . ?o1 fb:award.award_honor.ceremony ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_winning_work.awards_won ?o1 . ?o1 fb:award.award_honor.ceremony ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 3
            Final Answer: {"2002 Kids' Choice Awards", '6th Golden Satellite Awards', '50th Primetime Emmy Awards'}
            Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.005s]
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.005s]
        Checking schema 98 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.original_network', 'tv.tv_network_duration.network'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.original_network ?o1 . ?o1 fb:tv.tv_network_duration.network ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.original_network ?o1 . ?o1 fb:tv.tv_network_duration.network ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 2
            Final Answer: {'UPN', 'The WB Television Network'}
            Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.005s]
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.005s]
        Checking schema 99 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_nominated_work.award_nominations', 'award.award_nomination.award_nominee'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_nominated_work.award_nominations ?o1 . ?o1 fb:award.award_nomination.award_nominee ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_nominated_work.award_nominations ?o1 . ?o1 fb:award.award_nomination.award_nominee ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 62
            Final Answer: {'Jay Wejebe', 'Blake Shepard', 'Ray Spiess', 'Michael F. Blake', 'Christophe Beck', 'John Vulich', 'Dayne Johnson', 'Michael Moore', 'Christopher Jones', 'Rick Baumgartner', 'Margie Latinopoulos', 'Alan Friedman', 'Gerald Quist', 'Erwin H. Kupitz', 'Todd McIntosh', 'Zane D. Bruce', 'Emma Caulfield', 'Michael D. Leone', 'Robert Guastini', 'Craig Reardon', 'John Maldonado', 'Fernand Bos', 'Patti Gannon', 'Francine Shermaine', 'Brigette A. Myre', 'David Boreanaz', 'David Funston', 'Rick Hinson', 'Robin Beauchesne', 'Jesse Tobias', 'Jamie Kelman', 'Michael Gershman', 'Thomas Real', 'Suzan Bagdadi', 'Anna MacKenzie', 'Carol Schwartz', 'Sarah Michelle Gellar', 'Joss Whedon', 'Joel Harlow', 'Jeri Baker', 'Ron Thornton', 'Sean Flanigan', 'Chris Zapara', 'Susan Carol Schwary', 'Joseph Sabella', 'James Marsters', 'Alyson Hannigan', 'Gloria Pasqua Casny', 'Loni Peristere', 'Mike Marchain', 'Loretta Jody Miller', 'Kevin Quattro', 'Ed French', 'Lisa Marie Rosenberg', 'Mark Shostrom', 'William H. Angarola', 'Douglas Noe', 'John Wheaton', 'Linda Arnold', 'Cindy Rabideau', 'Mark Cleary', 'Dugg Kirkpatrick'}
            Answers = 62, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.011s]
          Answers = 62, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.011s]
        Current: 100 / 161
        Checking schema 100 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_nominated_work.award_nominations', 'award.award_nomination.notes_description'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_nominated_work.award_nominations ?o1 . ?o1 fb:award.award_nomination.notes_description ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_nominated_work.award_nominations ?o1 . ?o1 fb:award.award_nomination.notes_description ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 0
            Final Answer: set()
            Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
          } [0.008s]
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.008s]
        Checking schema 101 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.regular_cast', 'tv.regular_tv_appearance.character'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.regular_cast ?o1 . ?o1 fb:tv.regular_tv_appearance.character ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.regular_cast ?o1 . ?o1 fb:tv.regular_tv_appearance.character ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 7
            Final Answer: {'Dawn Summers', 'Willow Rosenberg', 'Xander Harris', 'Rupert Giles', 'Spike', 'Buffy Summers', 'Anya Jenkins'}
            Answers = 7, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.006s]
          Answers = 7, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.006s]
        Checking schema 102 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_winning_work.awards_won', 'award.award_honor.award'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_winning_work.awards_won ?o1 . ?o1 fb:award.award_honor.award ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_winning_work.awards_won ?o1 . ?o1 fb:award.award_honor.award ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 5
            Final Answer: {'Kids’ Choice Award for Favorite Female Buttkicker', 'Saturn Award for Best Network Television Series', 'Satellite Special Achievement Award for Outstanding Television Ensemble', 'Primetime Emmy Award for Outstanding Music Composition for a Series', 'Primetime Emmy Award for Outstanding Makeup For A Series'}
            Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.006s]
          Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.006s]
        Checking schema 103 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.recurring_writers', 'tv.tv_program_writer_relationship.writer'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.recurring_writers ?o1 . ?o1 fb:tv.tv_program_writer_relationship.writer ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.recurring_writers ?o1 . ?o1 fb:tv.tv_program_writer_relationship.writer ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 19
            Final Answer: {'Dean Batali', 'Marti Noxon', 'Drew Goddard', 'Joe Reinkemeyer', 'Joss Whedon', 'David Fury', 'Tracey Forbes', 'David Greenwalt', 'Rebecca Sinclair', 'Thomas A. Swyden', 'Rob Des Hotel', 'Jane Espenson', 'Drew Greenberg', 'David Tyron King', 'Douglas Petrie', 'Ashley Gable', 'Matt Kiene', 'Dan Vebber', 'Steven S. DeKnight'}
            Answers = 19, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 19, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        Checking schema 104 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.recurring_writers', 'tv.tv_program_writer_relationship.end_date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:tv.tv_program.recurring_writers ?o1 . ?o1 fb:tv.tv_program_writer_relationship.end_date ?o2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:tv.tv_program.recurring_writers ?o1 . ?o1 fb:tv.tv_program_writer_relationship.end_date ?o2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 6
            Final Answer: {'2000', '1998', '1997', '1999', '2003', '2002'}
            Answers = 6, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.010s]
          Answers = 6, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.010s]
        Checking schema 105 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.original_network', 'tv.tv_network_duration.program'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.original_network ?o1 . ?o1 fb:tv.tv_network_duration.program ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.original_network ?o1 . ?o1 fb:tv.tv_network_duration.program ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 1
            Final Answer: {'Buffy the Vampire Slayer'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.013s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.013s]
        Checking schema 106 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.original_network', 'tv.tv_network_duration.to'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:tv.tv_program.original_network ?o1 . ?o1 fb:tv.tv_network_duration.to ?o2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:tv.tv_program.original_network ?o1 . ?o1 fb:tv.tv_network_duration.to ?o2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 2
            Final Answer: {'2001', '2003'}
            Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.019s]
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.019s]
        Checking schema 107 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.tv_producer', 'tv.tv_producer_term.program'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.tv_producer ?o1 . ?o1 fb:tv.tv_producer_term.program ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.tv_producer ?o1 . ?o1 fb:tv.tv_producer_term.program ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 1
            Final Answer: {'Buffy the Vampire Slayer'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.011s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.011s]
        Checking schema 108 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.tv_producer', 'tv.tv_producer_term.producer']), ('Entity', '==', 'm.01j9hw', ['fictional_universe.fictional_character_creator.fictional_characters_created'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.tv_producer ?o1 . ?o1 fb:tv.tv_producer_term.producer ?o2 . ?o2 fb:fictional_universe.fictional_character_creator.fictional_characters_created fb:m.01j9hw . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.tv_producer ?o1 . ?o1 fb:tv.tv_producer_term.producer ?o2 . ?o2 fb:fictional_universe.fictional_character_creator.fictional_characters_created fb:m.01j9hw . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.01j9hw', 'm.0cskb'}
            Query return lines = 1
            Final Answer: {'Joss Whedon'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.010s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.010s]
        Checking schema 109 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_nominated_work.award_nominations', 'award.award_nomination.award'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_nominated_work.award_nominations ?o1 . ?o1 fb:award.award_nomination.award ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 23, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 110 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.regular_cast', 'tv.regular_tv_appearance.series'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.regular_cast ?o1 . ?o1 fb:tv.regular_tv_appearance.series ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 111 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.regular_cast', 'tv.regular_tv_appearance.seasons'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.regular_cast ?o1 . ?o1 fb:tv.regular_tv_appearance.seasons ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 7, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 112 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.regular_cast', 'tv.regular_tv_appearance.from'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:tv.tv_program.regular_cast ?o1 . ?o1 fb:tv.regular_tv_appearance.from ?o2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 113 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_winning_work.awards_won', 'award.award_honor.year'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:award.award_winning_work.awards_won ?o1 . ?o1 fb:award.award_honor.year ?o2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 114 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_winning_work.awards_won', 'award.award_honor.notes_description'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_winning_work.awards_won ?o1 . ?o1 fb:award.award_honor.notes_description ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 115 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_winning_work.awards_won', 'award.award_honor.honored_for'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_winning_work.awards_won ?o1 . ?o1 fb:award.award_honor.honored_for ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 116 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.recurring_writers', 'tv.tv_program_writer_relationship.tv_program'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.recurring_writers ?o1 . ?o1 fb:tv.tv_program_writer_relationship.tv_program ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 117 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.recurring_writers', 'tv.tv_program_writer_relationship.start_date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:tv.tv_program.recurring_writers ?o1 . ?o1 fb:tv.tv_program_writer_relationship.start_date ?o2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 7, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 118 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.original_network', 'tv.tv_network_duration.from'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:tv.tv_program.original_network ?o1 . ?o1 fb:tv.tv_network_duration.from ?o2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 119 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.tv_producer', 'tv.tv_producer_term.producer'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.tv_producer ?o1 . ?o1 fb:tv.tv_producer_term.producer ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 6, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 120 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_nominated_work.award_nominations', 'award.award_nomination.nominated_for'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_nominated_work.award_nominations ?o1 . ?o1 fb:award.award_nomination.nominated_for ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 121 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_nominated_work.award_nominations', 'award.award_nomination.year'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:award.award_nominated_work.award_nominations ?o1 . ?o1 fb:award.award_nomination.year ?o2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 8, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 122 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.regular_cast', 'tv.regular_tv_appearance.actor'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.regular_cast ?o1 . ?o1 fb:tv.regular_tv_appearance.actor ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 17, P = 0.058824, R = 1.000000, F1 = 0.111111
        } [0.000s]
        Checking schema 123 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.regular_cast', 'tv.regular_tv_appearance.to'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:tv.tv_program.regular_cast ?o1 . ?o1 fb:tv.regular_tv_appearance.to ?o2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 124 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_winning_work.awards_won', 'award.award_honor.award_winner'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_winning_work.awards_won ?o1 . ?o1 fb:award.award_honor.award_winner ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 15, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 125 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_winning_work.awards_won', 'award.award_honor.ceremony'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_winning_work.awards_won ?o1 . ?o1 fb:award.award_honor.ceremony ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 126 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.original_network', 'tv.tv_network_duration.network'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.original_network ?o1 . ?o1 fb:tv.tv_network_duration.network ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 127 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_nominated_work.award_nominations', 'award.award_nomination.award_nominee'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_nominated_work.award_nominations ?o1 . ?o1 fb:award.award_nomination.award_nominee ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 62, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 128 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_nominated_work.award_nominations', 'award.award_nomination.notes_description'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_nominated_work.award_nominations ?o1 . ?o1 fb:award.award_nomination.notes_description ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 129 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.regular_cast', 'tv.regular_tv_appearance.character'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.regular_cast ?o1 . ?o1 fb:tv.regular_tv_appearance.character ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 7, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 130 / 161: {
          [('Main', '==', 'm.0cskb', ['award.award_winning_work.awards_won', 'award.award_honor.award'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:award.award_winning_work.awards_won ?o1 . ?o1 fb:award.award_honor.award ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 131 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.recurring_writers', 'tv.tv_program_writer_relationship.writer'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.recurring_writers ?o1 . ?o1 fb:tv.tv_program_writer_relationship.writer ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 19, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 132 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.recurring_writers', 'tv.tv_program_writer_relationship.end_date'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:tv.tv_program.recurring_writers ?o1 . ?o1 fb:tv.tv_program_writer_relationship.end_date ?o2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 6, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 133 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.original_network', 'tv.tv_network_duration.program'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.original_network ?o1 . ?o1 fb:tv.tv_network_duration.program ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 134 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.original_network', 'tv.tv_network_duration.to'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0cskb fb:tv.tv_program.original_network ?o1 . ?o1 fb:tv.tv_network_duration.to ?o2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 135 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.tv_producer', 'tv.tv_producer_term.program'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.tv_producer ?o1 . ?o1 fb:tv.tv_producer_term.program ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 136 / 161: {
          [('Main', '==', 'm.0cskb', ['tv.tv_program.tv_producer', 'tv.tv_producer_term.producer']), ('Entity', '==', 'm.01j9hw', ['fictional_universe.fictional_character_creator.fictional_characters_created'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0cskb fb:tv.tv_program.tv_producer ?o1 . ?o1 fb:tv.tv_producer_term.producer ?o2 . ?o2 fb:fictional_universe.fictional_character_creator.fictional_characters_created fb:m.01j9hw . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema hit!
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 137 / 161: {
          [('Main', '==', 'm.0jrcj', ['music.group_member.membership', 'music.group_membership.group'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:music.group_member.membership ?o1 . ?o1 fb:music.group_membership.group ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:music.group_member.membership ?o1 . ?o1 fb:music.group_membership.group ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 1
            Final Answer: {'Slayer & Ice-T'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.008s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.008s]
        Checking schema 138 / 161: {
          [('Main', '==', 'm.0jrcj', ['music.musical_group.member', 'music.group_membership.group'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:music.musical_group.member ?o1 . ?o1 fb:music.group_membership.group ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:music.musical_group.member ?o1 . ?o1 fb:music.group_membership.group ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 1
            Final Answer: {'Slayer'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.008s]
        Checking schema 139 / 161: {
          [('Main', '==', 'm.0jrcj', ['music.group_member.membership', 'music.group_membership.member'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:music.group_member.membership ?o1 . ?o1 fb:music.group_membership.member ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:music.group_member.membership ?o1 . ?o1 fb:music.group_membership.member ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 1
            Final Answer: {'Slayer'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.006s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.006s]
        Checking schema 140 / 161: {
          [('Main', '==', 'm.0jrcj', ['music.musical_group.member', 'music.group_membership.member'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:music.musical_group.member ?o1 . ?o1 fb:music.group_membership.member ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:music.musical_group.member ?o1 . ?o1 fb:music.group_membership.member ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 7
            Final Answer: {'Tony Scaglione', 'Paul Bostaph', 'Dave Lombardo', 'Tom Araya', 'Jon Dette', 'Jeff Hanneman', 'Kerry King'}
            Answers = 7, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.005s]
          Answers = 7, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.005s]
        Checking schema 141 / 161: {
          [('Main', '==', 'm.0jrcj', ['award.award_nominee.award_nominations', 'award.award_nomination.award'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:award.award_nominee.award_nominations ?o1 . ?o1 fb:award.award_nomination.award ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:award.award_nominee.award_nominations ?o1 . ?o1 fb:award.award_nomination.award ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 1
            Final Answer: {'Grammy Award for Best Metal Performance'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.009s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.009s]
        Checking schema 142 / 161: {
          [('Main', '==', 'm.0jrcj', ['tv.tv_program_guest.appeared_on', 'tv.tv_guest_personal_appearance.person'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:tv.tv_program_guest.appeared_on ?o1 . ?o1 fb:tv.tv_guest_personal_appearance.person ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:tv.tv_program_guest.appeared_on ?o1 . ?o1 fb:tv.tv_guest_personal_appearance.person ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 1
            Final Answer: {'Slayer'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        Checking schema 143 / 161: {
          [('Main', '==', 'm.0jrcj', ['award.award_winner.awards_won', 'award.award_honor.year'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0jrcj fb:award.award_winner.awards_won ?o1 . ?o1 fb:award.award_honor.year ?o2 . }
          [2020-12-03 14:23:16] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 WHERE { fb:m.0jrcj fb:award.award_winner.awards_won ?o1 . ?o1 fb:award.award_honor.year ?o2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 2
            Final Answer: {'2007', '2006'}
            Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.020s]
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.020s]
        Checking schema 144 / 161: {
          [('Main', '==', 'm.0jrcj', ['award.award_winner.awards_won', 'award.award_honor.notes_description'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:award.award_winner.awards_won ?o1 . ?o1 fb:award.award_honor.notes_description ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:17] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:award.award_winner.awards_won ?o1 . ?o1 fb:award.award_honor.notes_description ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 0
            Final Answer: set()
            Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
          } [0.012s]
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.012s]
        Checking schema 145 / 161: {
          [('Main', '==', 'm.0jrcj', ['award.award_winner.awards_won', 'award.award_honor.honored_for'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:award.award_winner.awards_won ?o1 . ?o1 fb:award.award_honor.honored_for ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:17] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:award.award_winner.awards_won ?o1 . ?o1 fb:award.award_honor.honored_for ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 2
            Final Answer: {'Final Six', 'Eyes Of The Insane'}
            Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.008s]
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.008s]
        Checking schema 146 / 161: {
          [('Main', '==', 'm.0jrcj', ['music.musical_group.member', 'music.group_membership.start'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0jrcj fb:music.musical_group.member ?o1 . ?o1 fb:music.group_membership.start ?o2 . }
          [2020-12-03 14:23:17] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 WHERE { fb:m.0jrcj fb:music.musical_group.member ?o1 . ?o1 fb:music.group_membership.start ?o2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 3
            Final Answer: {'1992', '1981', '1996'}
            Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.017s]
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.017s]
        Checking schema 147 / 161: {
          [('Main', '==', 'm.0jrcj', ['music.musical_group.member', 'music.group_membership.end'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0jrcj fb:music.musical_group.member ?o1 . ?o1 fb:music.group_membership.end ?o2 . }
          [2020-12-03 14:23:17] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 WHERE { fb:m.0jrcj fb:music.musical_group.member ?o1 . ?o1 fb:music.group_membership.end ?o2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 3
            Final Answer: {'2001', '2011', '1997'}
            Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.022s]
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.022s]
        Checking schema 148 / 161: {
          [('Main', '==', 'm.0jrcj', ['award.award_nominee.award_nominations', 'award.award_nomination.nominated_for'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:award.award_nominee.award_nominations ?o1 . ?o1 fb:award.award_nomination.nominated_for ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:17] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:award.award_nominee.award_nominations ?o1 . ?o1 fb:award.award_nomination.nominated_for ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 5
            Final Answer: {'Final Six', 'Disciple', 'Eyes Of The Insane', 'Hate Worldwide', 'World Painted Blood'}
            Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.013s]
          Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.013s]
        Checking schema 149 / 161: {
          [('Main', '==', 'm.0jrcj', ['award.award_nominee.award_nominations', 'award.award_nomination.year'])]
          var_types: None
          SELECT DISTINCT ?o2 WHERE { fb:m.0jrcj fb:award.award_nominee.award_nominations ?o1 . ?o1 fb:award.award_nomination.year ?o2 . }
          [2020-12-03 14:23:17] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 WHERE { fb:m.0jrcj fb:award.award_nominee.award_nominations ?o1 . ?o1 fb:award.award_nomination.year ?o2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 5
            Final Answer: {'2007', '2010', '2001', '2006', '2009'}
            Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.013s]
          Answers = 5, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.013s]
        Checking schema 150 / 161: {
          [('Main', '==', 'm.0jrcj', ['tv.tv_program_guest.appeared_on', 'tv.tv_guest_personal_appearance.episode'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:tv.tv_program_guest.appeared_on ?o1 . ?o1 fb:tv.tv_guest_personal_appearance.episode ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:17] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:tv.tv_program_guest.appeared_on ?o1 . ?o1 fb:tv.tv_guest_personal_appearance.episode ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 1
            Final Answer: {'Dating Don Vito'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.016s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.016s]
        Checking schema 151 / 161: {
          [('Main', '==', 'm.0jrcj', ['film.person_or_entity_appearing_in_film.films', 'film.personal_film_appearance.film'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:film.person_or_entity_appearing_in_film.films ?o1 . ?o1 fb:film.personal_film_appearance.film ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:17] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:film.person_or_entity_appearing_in_film.films ?o1 . ?o1 fb:film.personal_film_appearance.film ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 3
            Final Answer: {'Slayer: War at the Warfield', 'Slayer: Live Intrusion', 'Global Metal'}
            Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.021s]
          Answers = 3, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.022s]
        Checking schema 152 / 161: {
          [('Main', '==', 'm.0jrcj', ['award.award_winner.awards_won', 'award.award_honor.award_winner'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:award.award_winner.awards_won ?o1 . ?o1 fb:award.award_honor.award_winner ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:17] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:award.award_winner.awards_won ?o1 . ?o1 fb:award.award_honor.award_winner ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 1
            Final Answer: {'Slayer'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.017s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.017s]
        Checking schema 153 / 161: {
          [('Main', '==', 'm.0jrcj', ['award.award_winner.awards_won', 'award.award_honor.ceremony'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:award.award_winner.awards_won ?o1 . ?o1 fb:award.award_honor.ceremony ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:17] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:award.award_winner.awards_won ?o1 . ?o1 fb:award.award_honor.ceremony ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 2
            Final Answer: {'Grammy Awards of 2008', '2007 Grammy Awards'}
            Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.023s]
          Answers = 2, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.023s]
        Checking schema 154 / 161: {
          [('Main', '==', 'm.0jrcj', ['base.ontologies.ontology_instance.equivalent_instances', 'base.ontologies.ontology_instance_mapping.ontology'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:base.ontologies.ontology_instance.equivalent_instances ?o1 . ?o1 fb:base.ontologies.ontology_instance_mapping.ontology ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:17] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:base.ontologies.ontology_instance.equivalent_instances ?o1 . ?o1 fb:base.ontologies.ontology_instance_mapping.ontology ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 1
            Final Answer: {'OpenCyc'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.012s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.012s]
        Checking schema 155 / 161: {
          [('Main', '==', 'm.0jrcj', ['base.ontologies.ontology_instance.equivalent_instances', 'base.ontologies.ontology_instance_mapping.freebase_topic'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:base.ontologies.ontology_instance.equivalent_instances ?o1 . ?o1 fb:base.ontologies.ontology_instance_mapping.freebase_topic ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:17] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:base.ontologies.ontology_instance.equivalent_instances ?o1 . ?o1 fb:base.ontologies.ontology_instance_mapping.freebase_topic ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 1
            Final Answer: {'Slayer'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.014s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.014s]
        Checking schema 156 / 161: {
          [('Main', '==', 'm.0jrcj', ['music.musical_group.member', 'music.group_membership.role'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:music.musical_group.member ?o1 . ?o1 fb:music.group_membership.role ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:17] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:music.musical_group.member ?o1 . ?o1 fb:music.group_membership.role ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 4
            Final Answer: {'Lead vocalist', 'Guitar', 'Bass guitar', 'Drums'}
            Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.018s]
          Answers = 4, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.018s]
        Checking schema 157 / 161: {
          [('Main', '==', 'm.0jrcj', ['award.award_nominee.award_nominations', 'award.award_nomination.award_nominee'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:award.award_nominee.award_nominations ?o1 . ?o1 fb:award.award_nomination.award_nominee ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:17] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:award.award_nominee.award_nominations ?o1 . ?o1 fb:award.award_nomination.award_nominee ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 1
            Final Answer: {'Slayer'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.014s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.014s]
        Checking schema 158 / 161: {
          [('Main', '==', 'm.0jrcj', ['award.award_nominee.award_nominations', 'award.award_nomination.notes_description'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:award.award_nominee.award_nominations ?o1 . ?o1 fb:award.award_nomination.notes_description ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:17] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:award.award_nominee.award_nominations ?o1 . ?o1 fb:award.award_nomination.notes_description ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 0
            Final Answer: set()
            Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
          } [0.009s]
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.010s]
        Checking schema 159 / 161: {
          [('Main', '==', 'm.0jrcj', ['film.person_or_entity_appearing_in_film.films', 'film.personal_film_appearance.person'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:film.person_or_entity_appearing_in_film.films ?o1 . ?o1 fb:film.personal_film_appearance.person ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:17] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:film.person_or_entity_appearing_in_film.films ?o1 . ?o1 fb:film.personal_film_appearance.person ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 1
            Final Answer: {'Slayer'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.008s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.008s]
        Checking schema 160 / 161: {
          [('Main', '==', 'm.0jrcj', ['award.award_winner.awards_won', 'award.award_honor.award'])]
          var_types: None
          SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:award.award_winner.awards_won ?o1 . ?o1 fb:award.award_honor.award ?o2 . ?o2 fb:type.object.name ?n2 . }
          [2020-12-03 14:23:17] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o2 ?n2 WHERE { fb:m.0jrcj fb:award.award_winner.awards_won ?o1 . ?o1 fb:award.award_honor.award ?o2 . ?o2 fb:type.object.name ?n2 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 1
            Final Answer: {'Grammy Award for Best Metal Performance'}
            Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
          } [0.007s]
          Answers = 1, P = 0.000000, R = 0.000000, F1 = 0.000000
        } [0.007s]
        153 / 161 coarse schemas kept with ans_size > 0.
      } [1.358s]
      Coarse level ended, resulting in 153 schemas.
    } [13.623s]
    Type level searching (total types = 10): {
      Current: 0 / 153
[{'fictional_universe.fictional_universe'}]
[{'fictional_universe.character_powers'}]
[{'fictional_universe.character_occupation'}]
[{'fictional_universe.fictional_organization'}]
[{'fictional_universe.character_species'}]
[{'fictional_universe.character_gender'}]
[{'fictional_universe.fictional_character_creator'}]
[{'fictional_universe.fictional_setting'}]
[{'fictional_universe.fictional_setting'}]
[{'fictional_universe.school_in_fiction'}]
[{'fictional_universe.fictional_universe'}]
[{'fictional_universe.fictional_setting'}]
[{'fictional_universe.fictional_universe'}]
[{'fictional_universe.fictional_setting'}]
[{'type.datetime'}]
[{'tv.tv_series_season'}]
[{'tv.tv_genre'}]
[{'type.int'}]
[{'fictional_universe.fictional_universe'}]
[{'broadcast.distributor'}]
[{'tv.tv_series_episode'}]
[{'tv.tv_soundtrack'}]
[{'type.int'}]
[{'tv.tv_program'}]
[{'tv.tv_subject'}]
[{'media_common.netflix_genre'}]
[{'fictional_universe.fictional_setting'}]
[{'type.int'}]
[{'language.human_language'}]
[{'tv.tv_theme_song'}]
[{'tv.tv_program'}]
[{'book.written_work'}]
[{'base.parody.parody'}]
[{'type.int'}]
[{'fictional_universe.fictional_universe'}]
[{'fictional_universe.fictional_setting'}]
[{'type.datetime'}]
[{'tv.tv_series_season'}]
[{'tv.tv_genre'}]
[{'type.int'}]
[{'fictional_universe.fictional_universe'}]
[{'broadcast.distributor'}]
[{'tv.tv_series_episode'}]
[{'tv.tv_soundtrack'}]
[{'type.int'}]
[{'tv.tv_program'}]
[{'tv.tv_subject'}]
[{'media_common.netflix_genre'}]
[{'fictional_universe.fictional_setting'}]
[{'type.int'}]
[{'language.human_language'}]
[{'tv.tv_theme_song'}]
[{'tv.tv_program'}]
[{'book.written_work'}]
[{'base.parody.parody'}]
[{'type.int'}]
[{'fictional_universe.fictional_universe'}]
[{'fictional_universe.fictional_setting'}]
[{'music.genre'}]
[{'music.record_label'}]
[{'broadcast.content'}]
[{'music.release'}]
[{'music.album'}]
[{'music.recording'}]
[{'type.datetime'}]
[{'location.location'}]
[{'tv.regular_tv_appearance'}, {'tv.tv_series_season'}]
[{'tv.regular_tv_appearance'}, {'type.datetime'}]
[{'cvg.game_performance'}, {'cvg.game_character'}]
[{'tv.tv_guest_role'}, {'tv.tv_character'}]
[{'tv.regular_tv_appearance'}, {'tv.tv_actor'}]
[{'tv.regular_tv_appearance'}, {'type.datetime'}]
[{'cvg.game_performance'}, {'cvg.computer_videogame'}]
[{'tv.tv_guest_role'}, {'tv.tv_actor'}]
[{'tv.regular_tv_appearance'}, {'tv.tv_character'}]
[{'tv.tv_guest_role'}, {'tv.tv_series_episode'}]
[{'fictional_universe.romantic_involvement'}, {'fictional_universe.fictional_character'}]
[{'tv.regular_tv_appearance'}, {'tv.tv_series_season'}]
[{'tv.regular_tv_appearance'}, {'tv.tv_series_season'}]
[{'award.award_nomination'}, {'award.award_category'}]
[{'tv.regular_tv_appearance'}, {'tv.tv_program'}]
[{'tv.regular_tv_appearance'}, {'tv.tv_series_season'}]
[{'tv.regular_tv_appearance'}, {'type.datetime'}]
[{'award.award_honor'}, {'type.datetime'}]
[{'award.award_honor'}, {'award.award_winning_work'}]
[{'tv.tv_program_writer_relationship'}, {'tv.tv_program'}]
[{'tv.tv_program_writer_relationship'}, {'type.datetime'}]
[{'tv.tv_network_duration'}, {'type.datetime'}]
[{'tv.tv_producer_term'}, {'tv.tv_producer'}]
[{'award.award_nomination'}, {'award.award_nominated_work'}]
[{'award.award_nomination'}, {'type.datetime'}]
[{'tv.regular_tv_appearance'}, {'tv.tv_actor'}]
[{'tv.regular_tv_appearance'}, {'type.datetime'}]
[{'award.award_honor'}, {'award.award_winner'}]
[{'award.award_honor'}, {'award.award_ceremony'}]
[{'tv.tv_network_duration'}, {'tv.tv_network'}]
[{'award.award_nomination'}, {'award.award_nominee'}]
[{'tv.regular_tv_appearance'}, {'tv.tv_character'}]
[{'award.award_honor'}, {'award.award_category'}]
[{'tv.tv_program_writer_relationship'}, {'tv.tv_writer'}]
      Current: 100 / 153
[{'tv.tv_program_writer_relationship'}, {'type.datetime'}]
[{'tv.tv_network_duration'}, {'tv.tv_program'}]
[{'tv.tv_network_duration'}, {'type.datetime'}]
[{'tv.tv_producer_term'}, {'tv.tv_program'}]
[{'tv.tv_producer_term'}, {'tv.tv_producer'}]
[{'award.award_nomination'}, {'award.award_category'}]
[{'tv.regular_tv_appearance'}, {'tv.tv_program'}]
[{'tv.regular_tv_appearance'}, {'tv.tv_series_season'}]
[{'tv.regular_tv_appearance'}, {'type.datetime'}]
[{'award.award_honor'}, {'type.datetime'}]
[{'award.award_honor'}, {'award.award_winning_work'}]
[{'tv.tv_program_writer_relationship'}, {'tv.tv_program'}]
[{'tv.tv_program_writer_relationship'}, {'type.datetime'}]
[{'tv.tv_network_duration'}, {'type.datetime'}]
[{'tv.tv_producer_term'}, {'tv.tv_producer'}]
[{'award.award_nomination'}, {'award.award_nominated_work'}]
[{'award.award_nomination'}, {'type.datetime'}]
[{'tv.regular_tv_appearance'}, {'tv.tv_actor'}]
[{'tv.regular_tv_appearance'}, {'type.datetime'}]
[{'award.award_honor'}, {'award.award_winner'}]
[{'award.award_honor'}, {'award.award_ceremony'}]
[{'tv.tv_network_duration'}, {'tv.tv_network'}]
[{'award.award_nomination'}, {'award.award_nominee'}]
[{'tv.regular_tv_appearance'}, {'tv.tv_character'}]
[{'award.award_honor'}, {'award.award_category'}]
[{'tv.tv_program_writer_relationship'}, {'tv.tv_writer'}]
[{'tv.tv_program_writer_relationship'}, {'type.datetime'}]
[{'tv.tv_network_duration'}, {'tv.tv_program'}]
[{'tv.tv_network_duration'}, {'type.datetime'}]
[{'tv.tv_producer_term'}, {'tv.tv_program'}]
[{'tv.tv_producer_term'}, {'tv.tv_producer'}]
[{'music.group_membership'}, {'music.musical_group'}]
[{'music.group_membership'}, {'music.musical_group'}]
[{'music.group_membership'}, {'music.group_member'}]
[{'music.group_membership'}, {'music.group_member'}]
[{'award.award_nomination'}, {'award.award_category'}]
[{'tv.tv_guest_personal_appearance'}, {'tv.tv_program_guest'}]
[{'award.award_honor'}, {'type.datetime'}]
[{'award.award_honor'}, {'award.award_winning_work'}]
[{'music.group_membership'}, {'type.datetime'}]
[{'music.group_membership'}, {'type.datetime'}]
[{'award.award_nomination'}, {'award.award_nominated_work'}]
[{'award.award_nomination'}, {'type.datetime'}]
[{'tv.tv_guest_personal_appearance'}, {'tv.tv_series_episode'}]
[{'film.personal_film_appearance'}, {'film.film'}]
[{'award.award_honor'}, {'award.award_winner'}]
[{'award.award_honor'}, {'award.award_ceremony'}]
[{'base.ontologies.ontology_instance_mapping'}, {'base.ontologies.ontology'}]
[{'base.ontologies.ontology_instance_mapping'}, {'base.ontologies.ontology_instance'}]
[{'music.group_membership'}, {'music.performance_role'}]
[{'award.award_nomination'}, {'award.award_nominee'}]
[{'film.personal_film_appearance'}, {'film.person_or_entity_appearing_in_film'}]
[{'award.award_honor'}, {'award.award_category'}]
      4 typed schemas retrieved from 153 coarse schemas.
      Calculating F1 for 4 typed schemas: {
        Current: 0 / 4
        Checking schema 0 / 4: {
          [('Main', '==', 'm.0cskb', ['book.book_subject.works']), ('Type', '==', 'theater.play', ['type.object.type'])]
          var_types: [{'book.written_work', 'theater.play'}]
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:book.book_subject.works ?o1 . ?o1 fb:type.object.type fb:theater.play . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:17] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:book.book_subject.works ?o1 . ?o1 fb:type.object.type fb:theater.play . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0cskb'}
            Query return lines = 0
            Final Answer: set()
            Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
          } [0.009s]
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.009s]
        Checking schema 1 / 4: {
          [('Main', '==', 'm.0cskb', ['book.book_subject.works']), ('Type', '==', 'theater.play', ['type.object.type'])]
          var_types: [{'book.written_work', 'theater.play'}]
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0cskb fb:book.book_subject.works ?o1 . ?o1 fb:type.object.type fb:theater.play . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:17] Q_Schema hit!
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.000s]
        Checking schema 2 / 4: {
          [('Main', '==', 'm.0jrcj', ['music.artist.origin']), ('Type', '==', 'military.military_unit_place_of_origin', ['type.object.type'])]
          var_types: [{'military.military_unit_place_of_origin', 'location.location'}]
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0jrcj fb:music.artist.origin ?o1 . ?o1 fb:type.object.type fb:military.military_unit_place_of_origin . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:17] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0jrcj fb:music.artist.origin ?o1 . ?o1 fb:type.object.type fb:military.military_unit_place_of_origin . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 0
            Final Answer: set()
            Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
          } [0.009s]
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.009s]
        Checking schema 3 / 4: {
          [('Main', '==', 'm.0jrcj', ['music.artist.origin']), ('Type', '==', 'religion.place_of_worship', ['type.object.type'])]
          var_types: [{'religion.place_of_worship', 'location.location'}]
          SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0jrcj fb:music.artist.origin ?o1 . ?o1 fb:type.object.type fb:religion.place_of_worship . ?o1 fb:type.object.name ?n1 . }
          [2020-12-03 14:23:17] Q_Schema Request: {
            WebQ_3699|SELECT DISTINCT ?o1 ?n1 WHERE { fb:m.0jrcj fb:music.artist.origin ?o1 . ?o1 fb:type.object.type fb:religion.place_of_worship . ?o1 fb:type.object.name ?n1 . }|None|||None||None
            Forbidden mid: {'m.0jrcj'}
            Query return lines = 0
            Final Answer: set()
            Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
          } [0.008s]
          Answers = 0, P = 1.000000, R = 0.000000, F1 = 0.000000
        } [0.008s]
        0 / 4 typed schemas kept with ans_size > 0.
      } [0.026s]
      Typed level ended, resulting in 153 schemas.
    } [0.034s]
    Time level searching (total times = 0): {
      Current: 0 / 153
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'tv.tv_series_season.from', 'tv.tv_series_season.to'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'tv.tv_series_episode.air_date'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
self.var_time_preds: [{'book.written_work.date_written', 'book.written_work.copyright_date', 'book.written_work.date_of_first_publication'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'tv.tv_series_season.from', 'tv.tv_series_season.to'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'tv.tv_series_episode.air_date'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
self.var_time_preds: [{'book.written_work.date_written', 'book.written_work.copyright_date', 'book.written_work.date_of_first_publication'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'broadcast.content.production_end', 'broadcast.content.production_start'}]
self.var_time_preds: [{'music.release.release_date'}]
self.var_time_preds: [{'music.album.release_date'}]
self.var_time_preds: [{'music.recording.date'}]
self.var_time_preds: [set()]
self.var_time_preds: [set()]
self.var_time_preds: [{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, {'tv.tv_series_season.from', 'tv.tv_series_season.to'}]
self.var_time_preds: [{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
self.var_time_preds: [{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
self.var_time_preds: [set(), {'cvg.computer_videogame.release_date'}]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
self.var_time_preds: [set(), {'tv.tv_series_episode.air_date'}]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, {'tv.tv_series_season.from', 'tv.tv_series_season.to'}]
self.var_time_preds: [{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, {'tv.tv_series_season.from', 'tv.tv_series_season.to'}]
self.var_time_preds: [{'award.award_nomination.year'}, {'award.award_category.date_established', 'award.award_category.date_discontinued'}]
self.var_time_preds: [{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, {'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
self.var_time_preds: [{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, {'tv.tv_series_season.from', 'tv.tv_series_season.to'}]
self.var_time_preds: [{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
self.var_time_preds: [{'award.award_honor.year'}, set()]
self.var_time_preds: [{'award.award_honor.year'}, set()]
self.var_time_preds: [{'tv.tv_program_writer_relationship.end_date', 'tv.tv_program_writer_relationship.start_date'}, {'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
self.var_time_preds: [{'tv.tv_program_writer_relationship.end_date', 'tv.tv_program_writer_relationship.start_date'}, set()]
self.var_time_preds: [{'tv.tv_network_duration.from', 'tv.tv_network_duration.to'}, set()]
self.var_time_preds: [{'tv.tv_producer_term.to', 'tv.tv_producer_term.from'}, set()]
self.var_time_preds: [{'award.award_nomination.year'}, set()]
self.var_time_preds: [{'award.award_nomination.year'}, set()]
self.var_time_preds: [{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
self.var_time_preds: [{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
self.var_time_preds: [{'award.award_honor.year'}, set()]
self.var_time_preds: [{'award.award_honor.year'}, set()]
self.var_time_preds: [{'tv.tv_network_duration.from', 'tv.tv_network_duration.to'}, set()]
self.var_time_preds: [{'award.award_nomination.year'}, set()]
self.var_time_preds: [{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
self.var_time_preds: [{'award.award_honor.year'}, {'award.award_category.date_established', 'award.award_category.date_discontinued'}]
self.var_time_preds: [{'tv.tv_program_writer_relationship.end_date', 'tv.tv_program_writer_relationship.start_date'}, set()]
      Current: 100 / 153
self.var_time_preds: [{'tv.tv_program_writer_relationship.end_date', 'tv.tv_program_writer_relationship.start_date'}, set()]
self.var_time_preds: [{'tv.tv_network_duration.from', 'tv.tv_network_duration.to'}, {'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
self.var_time_preds: [{'tv.tv_network_duration.from', 'tv.tv_network_duration.to'}, set()]
self.var_time_preds: [{'tv.tv_producer_term.to', 'tv.tv_producer_term.from'}, {'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
self.var_time_preds: [{'tv.tv_producer_term.to', 'tv.tv_producer_term.from'}, set()]
self.var_time_preds: [{'award.award_nomination.year'}, {'award.award_category.date_established', 'award.award_category.date_discontinued'}]
self.var_time_preds: [{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, {'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
self.var_time_preds: [{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, {'tv.tv_series_season.from', 'tv.tv_series_season.to'}]
self.var_time_preds: [{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
self.var_time_preds: [{'award.award_honor.year'}, set()]
self.var_time_preds: [{'award.award_honor.year'}, set()]
self.var_time_preds: [{'tv.tv_program_writer_relationship.end_date', 'tv.tv_program_writer_relationship.start_date'}, {'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
self.var_time_preds: [{'tv.tv_program_writer_relationship.end_date', 'tv.tv_program_writer_relationship.start_date'}, set()]
self.var_time_preds: [{'tv.tv_network_duration.from', 'tv.tv_network_duration.to'}, set()]
self.var_time_preds: [{'tv.tv_producer_term.to', 'tv.tv_producer_term.from'}, set()]
self.var_time_preds: [{'award.award_nomination.year'}, set()]
self.var_time_preds: [{'award.award_nomination.year'}, set()]
self.var_time_preds: [{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
self.var_time_preds: [{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
self.var_time_preds: [{'award.award_honor.year'}, set()]
self.var_time_preds: [{'award.award_honor.year'}, set()]
self.var_time_preds: [{'tv.tv_network_duration.from', 'tv.tv_network_duration.to'}, set()]
self.var_time_preds: [{'award.award_nomination.year'}, set()]
self.var_time_preds: [{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
self.var_time_preds: [{'award.award_honor.year'}, {'award.award_category.date_established', 'award.award_category.date_discontinued'}]
self.var_time_preds: [{'tv.tv_program_writer_relationship.end_date', 'tv.tv_program_writer_relationship.start_date'}, set()]
self.var_time_preds: [{'tv.tv_program_writer_relationship.end_date', 'tv.tv_program_writer_relationship.start_date'}, set()]
self.var_time_preds: [{'tv.tv_network_duration.from', 'tv.tv_network_duration.to'}, {'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
self.var_time_preds: [{'tv.tv_network_duration.from', 'tv.tv_network_duration.to'}, set()]
self.var_time_preds: [{'tv.tv_producer_term.to', 'tv.tv_producer_term.from'}, {'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
self.var_time_preds: [{'tv.tv_producer_term.to', 'tv.tv_producer_term.from'}, set()]
self.var_time_preds: [{'music.group_membership.end', 'music.group_membership.start'}, set()]
self.var_time_preds: [{'music.group_membership.end', 'music.group_membership.start'}, set()]
self.var_time_preds: [{'music.group_membership.end', 'music.group_membership.start'}, set()]
self.var_time_preds: [{'music.group_membership.end', 'music.group_membership.start'}, set()]
self.var_time_preds: [{'award.award_nomination.year'}, {'award.award_category.date_established', 'award.award_category.date_discontinued'}]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'award.award_honor.year'}, set()]
self.var_time_preds: [{'award.award_honor.year'}, set()]
self.var_time_preds: [{'music.group_membership.end', 'music.group_membership.start'}, set()]
self.var_time_preds: [{'music.group_membership.end', 'music.group_membership.start'}, set()]
self.var_time_preds: [{'award.award_nomination.year'}, set()]
self.var_time_preds: [{'award.award_nomination.year'}, set()]
self.var_time_preds: [set(), {'tv.tv_series_episode.air_date'}]
self.var_time_preds: [set(), {'film.film.initial_release_date'}]
self.var_time_preds: [{'award.award_honor.year'}, set()]
self.var_time_preds: [{'award.award_honor.year'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'music.group_membership.end', 'music.group_membership.start'}, set()]
self.var_time_preds: [{'award.award_nomination.year'}, set()]
self.var_time_preds: [set(), set()]
self.var_time_preds: [{'award.award_honor.year'}, {'award.award_category.date_established', 'award.award_category.date_discontinued'}]
      0 timed schemas retrieved from 153 typed schemas.
      Calculating F1 for 0 timed schemas: {
        0 / 0 timed schemas kept with ans_size > 0.
      } [0.000s]
      Time level ended, resulting in 153 schemas.
    } [0.003s]
    Ordinal level searching (total ordinals = 0): {
      Current: 0 / 153
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[{'tv.tv_series_season.from', 'tv.tv_series_season.to'}]
[set()]
[set()]
[set()]
[set()]
[{'tv.tv_series_episode.air_date'}]
[set()]
[set()]
[{'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[{'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
[{'book.written_work.date_written', 'book.written_work.copyright_date', 'book.written_work.date_of_first_publication'}]
[set()]
[set()]
[set()]
[set()]
[set()]
[{'tv.tv_series_season.from', 'tv.tv_series_season.to'}]
[set()]
[set()]
[set()]
[set()]
[{'tv.tv_series_episode.air_date'}]
[set()]
[set()]
[{'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[{'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
[{'book.written_work.date_written', 'book.written_work.copyright_date', 'book.written_work.date_of_first_publication'}]
[set()]
[set()]
[set()]
[set()]
[set()]
[set()]
[{'broadcast.content.production_end', 'broadcast.content.production_start'}]
[{'music.release.release_date'}]
[{'music.album.release_date'}]
[{'music.recording.date'}]
[set()]
[set()]
[{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, {'tv.tv_series_season.from', 'tv.tv_series_season.to'}]
[{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
[set(), set()]
[set(), set()]
[{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
[{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
[set(), {'cvg.computer_videogame.release_date'}]
[set(), set()]
[{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
[set(), {'tv.tv_series_episode.air_date'}]
[set(), set()]
[{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, {'tv.tv_series_season.from', 'tv.tv_series_season.to'}]
[{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, {'tv.tv_series_season.from', 'tv.tv_series_season.to'}]
[{'award.award_nomination.year'}, {'award.award_category.date_established', 'award.award_category.date_discontinued'}]
[{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, {'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
[{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, {'tv.tv_series_season.from', 'tv.tv_series_season.to'}]
[{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
[{'award.award_honor.year'}, set()]
[{'award.award_honor.year'}, set()]
[{'tv.tv_program_writer_relationship.end_date', 'tv.tv_program_writer_relationship.start_date'}, {'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
[{'tv.tv_program_writer_relationship.end_date', 'tv.tv_program_writer_relationship.start_date'}, set()]
[{'tv.tv_network_duration.from', 'tv.tv_network_duration.to'}, set()]
[{'tv.tv_producer_term.to', 'tv.tv_producer_term.from'}, set()]
[{'award.award_nomination.year'}, set()]
[{'award.award_nomination.year'}, set()]
[{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
[{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
[{'award.award_honor.year'}, set()]
[{'award.award_honor.year'}, set()]
[{'tv.tv_network_duration.from', 'tv.tv_network_duration.to'}, set()]
[{'award.award_nomination.year'}, set()]
[{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
[{'award.award_honor.year'}, {'award.award_category.date_established', 'award.award_category.date_discontinued'}]
[{'tv.tv_program_writer_relationship.end_date', 'tv.tv_program_writer_relationship.start_date'}, set()]
      Current: 100 / 153
[{'tv.tv_program_writer_relationship.end_date', 'tv.tv_program_writer_relationship.start_date'}, set()]
[{'tv.tv_network_duration.from', 'tv.tv_network_duration.to'}, {'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
[{'tv.tv_network_duration.from', 'tv.tv_network_duration.to'}, set()]
[{'tv.tv_producer_term.to', 'tv.tv_producer_term.from'}, {'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
[{'tv.tv_producer_term.to', 'tv.tv_producer_term.from'}, set()]
[{'award.award_nomination.year'}, {'award.award_category.date_established', 'award.award_category.date_discontinued'}]
[{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, {'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
[{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, {'tv.tv_series_season.from', 'tv.tv_series_season.to'}]
[{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
[{'award.award_honor.year'}, set()]
[{'award.award_honor.year'}, set()]
[{'tv.tv_program_writer_relationship.end_date', 'tv.tv_program_writer_relationship.start_date'}, {'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
[{'tv.tv_program_writer_relationship.end_date', 'tv.tv_program_writer_relationship.start_date'}, set()]
[{'tv.tv_network_duration.from', 'tv.tv_network_duration.to'}, set()]
[{'tv.tv_producer_term.to', 'tv.tv_producer_term.from'}, set()]
[{'award.award_nomination.year'}, set()]
[{'award.award_nomination.year'}, set()]
[{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
[{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
[{'award.award_honor.year'}, set()]
[{'award.award_honor.year'}, set()]
[{'tv.tv_network_duration.from', 'tv.tv_network_duration.to'}, set()]
[{'award.award_nomination.year'}, set()]
[{'tv.regular_tv_appearance.from', 'tv.regular_tv_appearance.to'}, set()]
[{'award.award_honor.year'}, {'award.award_category.date_established', 'award.award_category.date_discontinued'}]
[{'tv.tv_program_writer_relationship.end_date', 'tv.tv_program_writer_relationship.start_date'}, set()]
[{'tv.tv_program_writer_relationship.end_date', 'tv.tv_program_writer_relationship.start_date'}, set()]
[{'tv.tv_network_duration.from', 'tv.tv_network_duration.to'}, {'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
[{'tv.tv_network_duration.from', 'tv.tv_network_duration.to'}, set()]
[{'tv.tv_producer_term.to', 'tv.tv_producer_term.from'}, {'tv.tv_program.air_date_of_first_episode', 'tv.tv_program.air_date_of_final_episode'}]
[{'tv.tv_producer_term.to', 'tv.tv_producer_term.from'}, set()]
[{'music.group_membership.end', 'music.group_membership.start'}, set()]
[{'music.group_membership.end', 'music.group_membership.start'}, set()]
[{'music.group_membership.end', 'music.group_membership.start'}, set()]
[{'music.group_membership.end', 'music.group_membership.start'}, set()]
[{'award.award_nomination.year'}, {'award.award_category.date_established', 'award.award_category.date_discontinued'}]
[set(), set()]
[{'award.award_honor.year'}, set()]
[{'award.award_honor.year'}, set()]
[{'music.group_membership.end', 'music.group_membership.start'}, set()]
[{'music.group_membership.end', 'music.group_membership.start'}, set()]
[{'award.award_nomination.year'}, set()]
[{'award.award_nomination.year'}, set()]
[set(), {'tv.tv_series_episode.air_date'}]
[set(), {'film.film.initial_release_date'}]
[{'award.award_honor.year'}, set()]
[{'award.award_honor.year'}, set()]
[set(), set()]
[set(), set()]
[{'music.group_membership.end', 'music.group_membership.start'}, set()]
[{'award.award_nomination.year'}, set()]
[set(), set()]
[{'award.award_honor.year'}, {'award.award_category.date_established', 'award.award_category.date_discontinued'}]
      0 ordinal schemas retrieved from 153 timed schemas.
      Calculating F1 for 0 ordinal schemas: {
        0 / 0 ordinal schemas kept with ans_size > 0.
      } [0.000s]
      Ordinal level ended, we finally collected 153 schemas.
    } [0.003s]
    [2020-12-03 14:23:17] buffer saved.
    153 schemas successfully saved into [../../runnings/candgen_WebQ/20201202_entity_time_type_ordinal/data/3600-3699/3699_schema].
  } [37.911s]
  All Done.
} [7m15.928s]
Time tracker display: {
              Name	Avg. (s)	    Freq	Time (s)
          single_q	144.6434	       3	433.9303
       coarse_comb	  4.2456	       3	 12.7367
      query_sparql	  0.2407	      52	 12.5142
   query_q_sc_stat	  0.0044	     514	  2.2809
         coarse_F1	  0.7566	       3	  2.2698
           linking	  0.5986	       3	  1.7957
              type	  0.8972	       2	  1.7945
        timed_comb	  0.0751	       3	  0.2252
          typed_F1	  0.0166	       3	  0.0497
        typed_comb	  0.0104	       3	  0.0311
          ord_comb	  0.0032	       3	  0.0096
          timed_F1	  0.0000	       3	  0.0001
        ordinal_F1	  0.0000	       3	  0.0001
              time	  0.0000	       2	  0.0001
           ordinal	  0.0000	       2	  0.0000
            entity	  0.0000	       2	  0.0000
} [0.000s]
